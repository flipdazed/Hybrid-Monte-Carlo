(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    151064,       3247]
NotebookOptionsPosition[    145724,       3058]
NotebookOutlinePosition[    146120,       3076]
CellTagsIndexPosition[    146077,       3073]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Autocorrelations for Generalised Hybrid Monte Carlo", \
"Title"]], "Text",
 CellChangeTimes->{
  3.67817938154908*^9, {3.6781794314068117`*^9, 3.6781794685753527`*^9}, {
   3.678179545069066*^9, 3.6781795663555193`*^9}, {3.678193359044594*^9, 
   3.678193366940531*^9}, {3.6781934792035913`*^9, 3.678193536257924*^9}}],

Cell[CellGroupData[{

Cell["\<\
Quadratic Operators with Exponentially Distributed Trajectories\
\>", "Subtitle",
 CellChangeTimes->{{3.678193507844821*^9, 3.6781935459618053`*^9}, {
  3.6781952473676853`*^9, 3.678195254703648*^9}}],

Cell[TextData[{
 "Based on the paper,",
 StyleBox[" \[OpenCurlyDoubleQuote]Cost of the Generalised Hybrid Monte Carlo \
Algorithm for Free Field Theory\[CloseCurlyDoubleQuote],",
  FontSlant->"Italic"],
 " this notebook contains a Mathematica format for selected equations. The \
aim is to provide a dynamic method of working with the theory."
}], "Text",
 CellChangeTimes->{{3.6781795848660307`*^9, 3.678179667993949*^9}, {
  3.6781796994743423`*^9, 3.6781797254330187`*^9}, {3.6781797613084507`*^9, 
  3.67817984330331*^9}, {3.678179910966352*^9, 3.678179942436851*^9}, {
  3.678179976124398*^9, 3.678179976805286*^9}, {3.67818943346625*^9, 
  3.678189440593206*^9}}],

Cell[TextData[{
 "The paper provides the ",
 StyleBox["Laplace Transform",
  FontWeight->"Bold"],
 " of the autocorrelations which will be denoted by ",
 StyleBox["F[...]", "Code"],
 " where \[Beta] is the Laplace transformed time, ",
 StyleBox["t",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.6781800559197083`*^9, 3.67818014398647*^9}, {
  3.67818024207262*^9, 3.678180271767714*^9}, {3.678180304351842*^9, 
  3.678180474244748*^9}, {3.678180537756089*^9, 3.678180671985888*^9}, {
  3.678189441913189*^9, 3.678189514879827*^9}, {3.67818955822323*^9, 
  3.678189561815913*^9}, {3.678189592726706*^9, 3.678189592838373*^9}}],

Cell[TextData[{
 " ",
 StyleBox["Unless explicitly stated, all equations are in Laplace Transformed \
format",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.6781895164261417`*^9, 3.6781895409514837`*^9}}]
}, Open  ]]
}, Open  ]],

Cell["Throughout the plots, the following parameters will be used:", "Text",
 CellChangeTimes->{{3.678200991843731*^9, 3.678201038136747*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Tau]", " ", "=", " ", 
   RowBox[{"0.1", "*", "20"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6782010355311728`*^9, 3.678201040920895*^9}, 
   3.67854979537468*^9}],

Cell[CellGroupData[{

Cell["Laplace Transformed GHMC Autocorrelation Function", "Chapter",
 CellChangeTimes->{{3.678181358024951*^9, 3.678181374482401*^9}, {
   3.6781815082853403`*^9, 3.6781815092288857`*^9}, {3.678192522794112*^9, 
   3.678192523049375*^9}, 3.6781925655616407`*^9, {3.678192832420581*^9, 
   3.678192833568637*^9}}],

Cell[TextData[{
 "The form is exceedingly long and so has been broken apart into testable \
segments specified by ",
 StyleBox["a", "Code"],
 StyleBox["n", "Code",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["[...]", "Code"],
 ","
}], "Text",
 CellChangeTimes->{{3.6781895649144287`*^9, 3.678189581606763*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a0", "[", 
   RowBox[{"\[Theta]_", ",", "\[Rho]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", "\[Rho]"}]}], ")"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   "4"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a1", "[", 
   RowBox[{"\[Theta]_", ",", "\[Rho]_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", "\[Rho]"}]}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "-", 
   RowBox[{"3", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "-", 
      RowBox[{"6", "\[Rho]"}]}], ")"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   "6"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a2", "[", 
   RowBox[{"\[Theta]_", ",", "\[Rho]_", ",", " ", "\[Phi]_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", "\[Rho]"}], "-", "2"}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"2", "\[Rho]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[Rho]", "-", "2"}], ")"}], 
       SuperscriptBox["\[Phi]", "2"]}], "+", "3", "-", 
      RowBox[{"6", "\[Rho]"}]}], ")"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", "\[Rho]"}], "-", "4"}], ")"}], 
       SuperscriptBox["\[Phi]", "2"]}], "-", "3"}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"8", "-", 
      RowBox[{"4", "\[Rho]"}]}], ")"}], 
    SuperscriptBox["\[Phi]", "2"]}], "+", "4"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a3", "[", 
   RowBox[{"\[Theta]_", ",", "\[Rho]_", ",", " ", "\[Phi]_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", "\[Rho]"}], "-", "2"}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"4", "\[Rho]"}]}], ")"}], 
       SuperscriptBox["\[Phi]", "2"]}], "+", "3", "-", 
      RowBox[{"6", "\[Rho]"}]}], ")"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "\[Rho]"}], "-", "4"}], ")"}], 
       SuperscriptBox["\[Phi]", "2"]}], "-", "3"}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"8", "+", 
      RowBox[{"2", "\[Rho]"}]}], ")"}], 
    SuperscriptBox["\[Phi]", "2"]}], "+", "4"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a4", "[", 
   RowBox[{"\[Theta]_", ",", "\[Rho]_", ",", " ", "\[Phi]_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}], "2"], 
       SuperscriptBox["\[Phi]", "2"]}], "-", "1", "+", 
      RowBox[{"2", "\[Rho]"}]}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", "\[Rho]"}], "-", "4"}], ")"}], 
       SuperscriptBox["\[Phi]", "2"]}], "-", "1"}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"2", "\[Rho]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[Rho]", "-", "2"}], ")"}], 
       SuperscriptBox["\[Phi]", "2"]}], "+", "1", " ", "-", 
      RowBox[{"2", "\[Rho]"}]}], ")"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", "-", 
      RowBox[{"2", "\[Rho]"}]}], ")"}], 
    SuperscriptBox["\[Phi]", "2"]}], "+", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a5", "[", 
   RowBox[{"\[Theta]_", ",", "\[Rho]_", ",", " ", "\[Phi]_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"2", "\[Rho]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[Rho]", "-", "2"}], ")"}], 
       SuperscriptBox["\[Phi]", "2"]}], "-", "1", "+", 
      RowBox[{"2", "\[Rho]"}]}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], 
       SuperscriptBox["\[Phi]", "2"]}], "-", "1"}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "\[Rho]"}], "-", "4"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}], 
       SuperscriptBox["\[Phi]", "2"]}], "+", "1", "-", 
      RowBox[{"2", "\[Rho]"}]}], ")"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", "\[Rho]"}], "+", "4"}], ")"}], 
    SuperscriptBox["\[Phi]", "2"]}], "+", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a6", "[", 
   RowBox[{"\[Theta]_", ",", "\[Rho]_", ",", " ", "\[Phi]_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"2", "\[Rho]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}], 
    SuperscriptBox["\[Phi]", "2"], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "-", 
   RowBox[{"2", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "\[Rho]", " ", 
    SuperscriptBox["\[Phi]", "2"]}], " ", "-", " ", 
   RowBox[{"2", "\[Rho]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], " ", "+", " ", "\[Rho]"}], ")"}], 
    SuperscriptBox["\[Phi]", "2"], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{"2", "\[Rho]", " ", 
    SuperscriptBox["\[Phi]", "2"]}]}]}], "\[LineSeparator]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6781705993977413`*^9, 3.678170723924141*^9}, {
   3.678170784707287*^9, 3.6781707848671637`*^9}, {3.678170879795224*^9, 
   3.6781708801535873`*^9}, {3.6781710022319*^9, 3.678171361003139*^9}, {
   3.678171427258727*^9, 3.678171603270768*^9}, {3.678171670925613*^9, 
   3.678171789835837*^9}, {3.678171853460781*^9, 3.6781719703231564`*^9}, {
   3.678172024274287*^9, 3.67817213862227*^9}, {3.678172231453321*^9, 
   3.678172261750602*^9}, 3.678172312291767*^9, {3.678172466889328*^9, 
   3.6781724752122517`*^9}, {3.678176070777915*^9, 3.678176125483067*^9}, {
   3.6781761680737963`*^9, 3.678176304014147*^9}, {3.6781763517114983`*^9, 
   3.678176441940083*^9}, {3.678176522995295*^9, 3.6781765275225983`*^9}, {
   3.678176644664815*^9, 3.678176701105344*^9}, {3.6781768956529818`*^9, 
   3.678177105443372*^9}, {3.678177143747411*^9, 3.678177211507164*^9}, {
   3.678177266850424*^9, 3.678177309737246*^9}, {3.678177476716489*^9, 
   3.678177536774128*^9}, 3.678177676043185*^9, {3.678177724866435*^9, 
   3.678177730324374*^9}, {3.678177863457358*^9, 3.678178033667737*^9}, {
   3.6781781424977303`*^9, 3.678178310992465*^9}, {3.67817836326357*^9, 
   3.6781783810411053`*^9}, {3.678178425367749*^9, 3.6781784255343857`*^9}, {
   3.678178485423057*^9, 3.6781786180511827`*^9}, {3.67817865211693*^9, 
   3.678178654595337*^9}, {3.6781788661518793`*^9, 3.678178962189233*^9}, {
   3.6781789989271383`*^9, 3.678179005731943*^9}, {3.678179177145434*^9, 
   3.678179178580381*^9}, {3.678179872319964*^9, 3.678179904278742*^9}, {
   3.67818000328503*^9, 3.67818001834373*^9}, {3.678182317225333*^9, 
   3.678182336111772*^9}, {3.678183974672194*^9, 3.67818397500705*^9}, {
   3.6781861992600822`*^9, 3.678186199499769*^9}, {3.6781871041160393`*^9, 
   3.678187148135289*^9}, {3.6781917965891*^9, 3.678191796983512*^9}, 
   3.678191845517189*^9, 3.678192268330546*^9}],

Cell["\<\
The Laplace Transform of the autocorrelation for quadratic operators is given \
by,\
\>", "Text",
 CellChangeTimes->{{3.678180148754225*^9, 3.6781802284485273`*^9}, {
  3.678181104003924*^9, 3.678181126291298*^9}, {3.6781813559358892`*^9, 
  3.6781813564958344`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{
   "\[Beta]_", ",", " ", "\[Phi]_", ",", " ", "\[Theta]_", ",", " ", 
    "\[Rho]_", ",", " ", "r_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"r", " ", 
      SuperscriptBox["\[Beta]", "4"]}], "+", 
     RowBox[{
      RowBox[{"a0", "[", 
       RowBox[{"\[Theta]", ",", "\[Rho]"}], "]"}], 
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox["\[Beta]", "3"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a1", "[", 
         RowBox[{"\[Theta]", ",", "\[Rho]"}], "]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"4", "-", 
           RowBox[{"2", "\[Rho]"}]}], ")"}], 
         SuperscriptBox["\[Phi]", "2"]}]}], ")"}], 
      SuperscriptBox["r", "3"], 
      SuperscriptBox["\[Beta]", "2"]}], " ", "+", 
     RowBox[{
      RowBox[{"a2", "[", 
       RowBox[{"\[Theta]", ",", "\[Rho]", ",", " ", "\[Phi]"}], "]"}], 
      SuperscriptBox["r", "4"], "\[Beta]"}], "+", 
     RowBox[{
      RowBox[{"a4", "[", 
       RowBox[{"\[Theta]", ",", "\[Rho]", ",", " ", "\[Phi]"}], "]"}], 
      SuperscriptBox["r", "5"]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Beta]", "5"], "+", 
     RowBox[{
      RowBox[{"a0", "[", 
       RowBox[{"\[Theta]", ",", "\[Rho]"}], "]"}], "r", " ", 
      SuperscriptBox["\[Beta]", "4"]}], "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a1", "[", 
         RowBox[{"\[Theta]", ",", "\[Rho]"}], "]"}], "+", 
        RowBox[{"4", 
         SuperscriptBox["\[Phi]", "2"]}]}], ")"}], 
      SuperscriptBox["r", "2"], 
      SuperscriptBox["\[Beta]", "3"]}], " ", "+", 
     RowBox[{
      RowBox[{"a3", "[", 
       RowBox[{"\[Theta]", ",", "\[Rho]", ",", " ", "\[Phi]"}], "]"}], 
      SuperscriptBox["r", "3"], 
      SuperscriptBox["\[Beta]", "2"]}], "+", " ", 
     RowBox[{
      RowBox[{"a5", "[", 
       RowBox[{"\[Theta]", ",", "\[Rho]", ",", " ", "\[Phi]"}], "]"}], 
      SuperscriptBox["r", "4"], "\[Beta]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"a6", "[", 
       RowBox[{"\[Theta]", ",", "\[Rho]", ",", " ", "\[Phi]"}], "]"}], 
      SuperscriptBox["r", "5"]}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6781786578668623`*^9, 3.6781786588351517`*^9}, {
   3.678178730873884*^9, 3.678178739020939*^9}, {3.678178873753688*^9, 
   3.678178880769476*^9}, 3.678178925583243*^9, {3.678178981678124*^9, 
   3.678179155594836*^9}, {3.678179236026767*^9, 3.678179247312392*^9}, 
   3.6781814102544327`*^9, {3.6781823465845757`*^9, 3.6781823580104094`*^9}, 
   3.67818700236744*^9}],

Cell[CellGroupData[{

Cell["Unit Acceptance", "Subsection",
 CellChangeTimes->{{3.678188585872508*^9, 3.678188600837685*^9}, {
   3.678189387441862*^9, 3.678189419441227*^9}, 3.678192560960918*^9, {
   3.678192926500181*^9, 3.6781929313712*^9}}],

Cell["\<\
Under unit acceptance, \[Rho]=1 the Laplace Transformed Autocorrelation is \
given by,\
\>", "Text",
 CellChangeTimes->{{3.6781885889962473`*^9, 3.6781886478131866`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a7", "[", "\[Theta]_", "]"}], ":=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", "2", "-", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"a8", "[", "\[Theta]_", "]"}], ":=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], "-", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "-", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", "1"}]}]}]}]], "Input",
 CellChangeTimes->{{3.678188931825486*^9, 3.678188946994108*^9}, {
   3.6781889951758633`*^9, 3.6781890126878653`*^9}, 3.678189864251596*^9, 
   3.6781922878644333`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Funit", "[", 
   RowBox[{
   "\[Beta]_", ",", " ", "\[Phi]_", ",", " ", "\[Theta]_", ",", " ", "r_"}], 
   "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Beta]", "2"], "r"}], "+", " ", 
    RowBox[{"\[Beta]", " ", 
     SuperscriptBox["r", "2"], 
     RowBox[{"a7", "[", "\[Theta]", "]"}]}], " ", "+", 
    RowBox[{
     SuperscriptBox["r", "3"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], "-", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "-", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
       RowBox[{"2", 
        SuperscriptBox["\[Phi]", "2"]}], "+", "1"}], ")"}]}]}], 
   RowBox[{
    SuperscriptBox["\[Beta]", "3"], "+", 
    RowBox[{
     SuperscriptBox["\[Beta]", "2"], "r", " ", 
     RowBox[{"a7", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"\[Beta]", " ", 
     SuperscriptBox["r", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a8", "[", "\[Theta]", "]"}], "+", 
       RowBox[{"4", 
        SuperscriptBox["\[Phi]", "2"]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["r", "3"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
        SuperscriptBox["\[Phi]", "2"]}], "+", 
       RowBox[{"2", 
        SuperscriptBox["\[Phi]", "2"]}]}], ")"}]}]}]]}]], "Input",
 CellChangeTimes->{{3.678188649425643*^9, 3.678188980248062*^9}, {
  3.678189021040278*^9, 3.6781890327288*^9}, {3.6781890745354137`*^9, 
  3.678189117271049*^9}, {3.67854980941556*^9, 3.678549812438047*^9}}],

Cell[TextData[{
 StyleBox["Check ",
  FontWeight->"Bold"],
 "This should be equal to Equation (1) for \[Rho] =1:"
}], "Item",
 CellChangeTimes->{{3.678189777622389*^9, 3.6781898161973267`*^9}, {
  3.678192377518194*^9, 3.6781923819562883`*^9}}],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Funit", "[", 
    RowBox[{
    "\[Beta]", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "r"}], 
    "]"}], "==", 
   RowBox[{"F", "[", 
    RowBox[{
    "\[Beta]", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "1", ",", 
     " ", "r"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.678189897553487*^9, 3.678189946041338*^9}, {
  3.678189994641996*^9, 3.678190001840712*^9}, {3.6781900589932213`*^9, 
  3.678190095662901*^9}, {3.678190794014914*^9, 3.678190800724527*^9}, {
  3.6781922374993687`*^9, 3.678192246691208*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["HMC Condition", "Section",
 CellChangeTimes->{{3.678192970072377*^9, 3.678192995386291*^9}}],

Cell["\<\
The GHMC form can be verified by comparing to the HMC form given below,\
\>", "Text",
 CellChangeTimes->{{3.678181420354692*^9, 3.678181433160824*^9}, {
  3.6781814846050167`*^9, 3.67818150174854*^9}, {3.678181536347907*^9, 
  3.6781816037396717`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FHMC", "[", 
   RowBox[{"\[Beta]_", ",", "\[Phi]_", ",", " ", "\[Rho]_", ",", " ", "r_"}], 
   "]"}], ":=", " ", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Beta]", "2"], "r"}], "+", " ", 
    RowBox[{"2", 
     SuperscriptBox["r", "2"], " ", "\[Beta]"}], " ", "+", "  ", 
    RowBox[{
     SuperscriptBox["\[Phi]", "2"], 
     RowBox[{"(", 
      RowBox[{"4", "-", 
       RowBox[{"2", "\[Rho]"}]}], ")"}], 
     SuperscriptBox["r", "3"]}], " ", "+", 
    SuperscriptBox["r", "3"]}], 
   RowBox[{
    SuperscriptBox["\[Beta]", "3"], "+", 
    RowBox[{"2", "r", " ", 
     SuperscriptBox["\[Beta]", "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", 
        SuperscriptBox["\[Phi]", "2"]}], "+", "1"}], ")"}], 
     SuperscriptBox["r", "2"], "\[Beta]"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["r", "3"], 
     SuperscriptBox["\[Phi]", "2"], "\[Rho]"}]}]]}]], "Input",
 CellChangeTimes->{{3.678179501827902*^9, 3.67817951325175*^9}, {
  3.678181917040097*^9, 3.6781819186222754`*^9}, {3.678182821296464*^9, 
  3.67818286364867*^9}, {3.678182900673832*^9, 3.678182907305026*^9}, {
  3.678182940984475*^9, 3.678182985861847*^9}, {3.678183525407305*^9, 
  3.678183545014916*^9}, {3.6781843559467*^9, 3.6781843562562943`*^9}, {
  3.67818803099131*^9, 3.678188034343802*^9}, {3.6781882638373747`*^9, 
  3.6781882657967653`*^9}, {3.678189203133258*^9, 3.678189210196767*^9}}],

Cell[TextData[{
 StyleBox["Check ",
  FontWeight->"Bold"],
 "This should be equal to Equation (1) for \[Theta] = \[Pi]/2:"
}], "Item",
 CellChangeTimes->{{3.678181605941963*^9, 3.678181622714802*^9}, 
   3.6781872054674797`*^9, {3.6781878552344627`*^9, 3.6781878553938437`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"\[Beta]", ",", " ", "0", ",", " ", 
     RowBox[{"\[Pi]", "/", "2"}], ",", " ", "0", ",", " ", "1"}], "]"}], "==", 
   RowBox[{"FHMC", "[", 
    RowBox[{"\[Beta]", ",", "0", ",", "0", ",", " ", "1"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.67818782211545*^9, 3.6781878224184103`*^9}, {
  3.678187859121607*^9, 3.678187893593978*^9}, {3.678187941688519*^9, 
  3.678187960575643*^9}, {3.678187990847352*^9, 3.678188015007085*^9}, {
  3.6781880541368923`*^9, 3.6781880886298437`*^9}, {3.678188119815502*^9, 
  3.678188156028892*^9}, {3.678188290620653*^9, 3.678188304019335*^9}, {
  3.678188409955154*^9, 3.678188461792243*^9}, {3.678189215741044*^9, 
  3.678189221596492*^9}, {3.678192316375793*^9, 3.6781923173568907`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.678196177843321*^9, 3.678196284449486*^9, 3.678196339639456*^9, {
   3.678203628825081*^9, 3.6782036512639027`*^9}, 3.6782061386129303`*^9, 
   3.678206692015052*^9, 3.678221470536808*^9, 3.678435992818777*^9, {
   3.678452918775082*^9, 3.6784529309623337`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["HMC with Unit Acceptance", "Subsection",
 CellChangeTimes->{{3.678189136793354*^9, 3.678189184204781*^9}, {
   3.6781892999811497`*^9, 3.678189309818619*^9}, {3.678189354691413*^9, 
   3.678189385673601*^9}, {3.678189423202386*^9, 3.6781894299050617`*^9}, {
   3.678192650769865*^9, 3.67819265541558*^9}, {3.678192941379877*^9, 
   3.678192954723619*^9}, 3.67819304705011*^9, {3.67819316213643*^9, 
   3.6781931749514503`*^9}}],

Cell["\<\
The GHMC form can be verified by comparing to the HMC form given below,\
\>", "Text",
 CellChangeTimes->{{3.678189158944501*^9, 3.678189171600021*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FHMCunit", "[", 
   RowBox[{"\[Beta]_", ",", " ", "\[Phi]_", ",", " ", "r_"}], "]"}], " ", ":=", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Beta]", "2"], "r"}], "+", " ", 
    RowBox[{"2", "\[Beta]", " ", 
     SuperscriptBox["r", "2"]}], " ", "+", 
    RowBox[{"2", 
     SuperscriptBox["r", "3"], 
     SuperscriptBox["\[Phi]", "2"]}], "+", 
    SuperscriptBox["r", "3"]}], 
   RowBox[{
    SuperscriptBox["\[Beta]", "3"], "+", 
    RowBox[{"2", 
     SuperscriptBox["\[Beta]", "2"], "r"}], "+", 
    RowBox[{"\[Beta]", " ", 
     SuperscriptBox["r", "2"], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"4", 
        SuperscriptBox["\[Phi]", "2"]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["r", "3"], "2", 
     SuperscriptBox["\[Phi]", "2"]}]}]]}]], "Input",
 CellChangeTimes->{{3.6781891950337152`*^9, 3.678189196653688*^9}, {
  3.678189618695533*^9, 3.678189732557354*^9}, {3.678194223767931*^9, 
  3.678194256447359*^9}}],

Cell[TextData[{
 StyleBox["Check",
  FontWeight->"Bold"],
 " This should be equal to Equation (1) for \[Rho] = 1 and \[Theta]=\[Pi]/2:"
}], "Item",
 CellChangeTimes->{{3.678192351309095*^9, 3.678192404668195*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"FHMCunit", "[", 
    RowBox[{"\[Beta]", ",", " ", "\[Phi]", ",", " ", "r"}], "]"}], "==", 
   RowBox[{"F", "[", 
    RowBox[{"\[Beta]", ",", " ", "\[Phi]", ",", " ", 
     RowBox[{"\[Pi]", "/", "2"}], ",", " ", "1", ",", " ", "r"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.678192413284155*^9, 3.678192429675375*^9}, {
  3.678194244832429*^9, 3.6781942451351643`*^9}, {3.67819429842445*^9, 
  3.6781942998946466`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.678196177859042*^9, 3.678196284470687*^9, 3.6781963396698313`*^9, {
   3.678203628850588*^9, 3.678203651291842*^9}, 3.6782061386334*^9, 
   3.678206692038875*^9, 3.6782214705814533`*^9, 3.6784359929031076`*^9, {
   3.6784529188669767`*^9, 3.6784529310135508`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Regular GHMC ",
 StyleBox["Integrated",
  FontSlant->"Italic"],
 " Autocorrelation Function"
}], "Chapter",
 CellChangeTimes->{{3.678192797228715*^9, 3.678192829652664*^9}}],

Cell[TextData[{
 "The integrated autocorrelation for GHMC is obtained by setting \[Beta] = 0 \
for the autocorrelation in Equation (1). As it no longer contains a \
dependancy upon \[Beta], this is also ",
 StyleBox["equivalent to the Inverse Laplace Transform",
  FontWeight->"Bold"],
 " i.e. the non-Transformed Integrated Autocorrelation Function,"
}], "Text",
 CellChangeTimes->{{3.6781842865063543`*^9, 3.678184327593273*^9}, {
  3.678184426585253*^9, 3.678184504309751*^9}, {3.678192844933332*^9, 
  3.678192868132708*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "[", 
   RowBox[{"\[Phi]_", ",", " ", "\[Theta]_", ",", " ", "\[Rho]_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"a4", "[", 
    RowBox[{"\[Theta]", ",", "\[Rho]", ",", " ", "\[Phi]"}], "]"}], 
   RowBox[{"a6", "[", 
    RowBox[{"\[Theta]", ",", "\[Rho]", ",", " ", "\[Phi]"}], 
    "]"}]]}]], "Input",
 CellChangeTimes->{{3.678184329422174*^9, 3.678184365048195*^9}, {
   3.678184508982873*^9, 3.678184522653902*^9}, {3.6781846080063133`*^9, 
   3.678184627819827*^9}, {3.678184664372088*^9, 3.678184674963822*^9}, {
   3.6781855362939243`*^9, 3.678185543670506*^9}, 3.6781861543024607`*^9, 
   3.678186229627256*^9}],

Cell[TextData[{
 StyleBox["Check ",
  FontWeight->"Bold"],
 "This should be equal to Equation (1) for \[Beta]=0:"
}], "Item",
 CellChangeTimes->{{3.678186746362998*^9, 3.678186797921856*^9}, {
  3.678186879129506*^9, 3.67818688018461*^9}, {3.67818691440899*^9, 
  3.678186930191765*^9}, {3.678187178565208*^9, 3.678187182788081*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"\[Phi]", ",", " ", "\[Theta]", ",", " ", "\[Rho]"}], "]"}], " ", 
   "==", " ", 
   RowBox[{"F", "[", 
    RowBox[{
    "0", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "\[Rho]", ",", 
     " ", "r"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.678186799155952*^9, 3.678186869288866*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.67819617787547*^9, 3.678196284488811*^9, 3.6781963396989594`*^9, {
   3.678203628868347*^9, 3.678203651317357*^9}, 3.6782061386485357`*^9, 
   3.678206692063189*^9, 3.678221470616377*^9, 3.678435992989623*^9, 
   3.678465517703269*^9, 3.678549994244274*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unit Acceptance", "Subsection",
 CellChangeTimes->{{3.678188585872508*^9, 3.678188600837685*^9}, {
   3.678189387441862*^9, 3.678189419441227*^9}, 3.678192560960918*^9, {
   3.678192926500181*^9, 3.6781929313712*^9}}],

Cell["\<\
Under unit acceptance, \[Rho]=1 the Laplace Transformed Autocorrelation is \
given by,\
\>", "Text",
 CellChangeTimes->{{3.6781885889962473`*^9, 3.6781886478131866`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Aunit", "[", 
   RowBox[{"\[Phi]_", ",", " ", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], "-", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "-", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
     RowBox[{"2", 
      SuperscriptBox["\[Phi]", "2"]}], "+", "1"}], 
    RowBox[{"2", 
     SuperscriptBox["\[Phi]", "2"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "-", "1"}], 
      ")"}]}]]}]}]], "Input",
 CellChangeTimes->{{3.678188649425643*^9, 3.678188980248062*^9}, {
  3.678189021040278*^9, 3.6781890327288*^9}, {3.6781890745354137`*^9, 
  3.678189117271049*^9}, {3.6781936731756897`*^9, 3.6781936740401707`*^9}, {
  3.678193739543025*^9, 3.678193836293252*^9}, {3.678193880485087*^9, 
  3.678193887429722*^9}}],

Cell[TextData[{
 StyleBox["Check ",
  FontWeight->"Bold"],
 "This should be equal to Equation (1) for \[Rho]=1 and \[Beta]=0:"
}], "Item",
 CellChangeTimes->{{3.678189777622389*^9, 3.6781898161973267`*^9}, {
  3.678192377518194*^9, 3.6781923819562883`*^9}, {3.678193850253983*^9, 
  3.678193871261023*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Aunit", "[", 
    RowBox[{"\[Phi]", ",", " ", "\[Theta]"}], "]"}], "==", 
   RowBox[{"F", "[", 
    RowBox[{
    "0", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "1", ",", " ", 
     "r"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.678189897553487*^9, 3.678189946041338*^9}, {
  3.678189994641996*^9, 3.678190001840712*^9}, {3.6781900589932213`*^9, 
  3.678190095662901*^9}, {3.678190794014914*^9, 3.678190800724527*^9}, {
  3.6781922374993687`*^9, 3.678192246691208*^9}, {3.678193868077258*^9, 
  3.6781939280439568`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.6781961778909388`*^9, 3.6781962845235043`*^9, 3.678196339723682*^9, {
   3.67820362890552*^9, 3.678203651363164*^9}, 3.678206138682917*^9, 
   3.678206692106461*^9, 3.678221470676916*^9, 3.678435993080413*^9, 
   3.678465517783279*^9, 3.678549964387792*^9, 3.678549997039607*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The integrated autocorrelation under unit acceptance varying with mixing \
angle,\
\>", "Text",
 CellChangeTimes->{{3.6782015842107563`*^9, 3.678201600738537*^9}, {
  3.678201649310615*^9, 3.6782016536065903`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Aunit", "[", 
    RowBox[{"\[Tau]", ",", " ", "\[Theta]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "0", ",", " ", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<A\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.678201189654108*^9, 3.678201189854534*^9}, {
  3.6782012701903563`*^9, 3.67820128509238*^9}, {3.678201633943432*^9, 
  3.678201641191124*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]], 
     LineBox[CompressedData["
1:eJw1mXc41f/7x62sc44z3meZ2Tsyoo/1uttJNtGSUBpGEVlpCxUqoygtO6uM
irIzIkkiTYREieNwkPF7f//4/XWux3Wu1/267+c9rvt1vRU8/B0OCPDx8b3m
5+P73+/qzxbuIXHiILdG+dIoBiB5spH/6HVx2H8mVX9nOIKDeVYSI6ni4DYr
5s2StgA+6g61gUfiUH9K9nfeHVM4nsFgfywSB3piXsB1uikMGH8QbS8Rh4s/
SwvPxZtAg5vT6PNKcTAa9Hr2LeE/iMl3KLjWKg68+VOQ9NIY5hEt/dJbcVgp
5Pyq3s4YfN6/izv1XhzatPt2jw4bgc283bHDn8Why8dsb4m0EdC22hqsGxMH
cmaE+OkMQzj/WULZ+K84rDnczCrabghcv3b6qilx+Nu+MCTFM4DuJOsZ9j9x
sFF2erTTwQDSflg9nxAnQE17yucYeX0gniTkDUsQ4McnhZ7sj3oQKd6a+oVG
gIKYJsWI63rgrrctolmKABXr9/AoBD1QPr0V3dMkwFNnudgYidWQRBNdnaxD
APL4mcafmbognNUkf0WfAKfiCyu89XRhpG2zQIgJAR52hqpK2ulAgdSmV7bb
CMCLS1Ffm6cNcoVC5ZtsCBDWVn/QZbM2JKxryDJ1IMCs7bLIjUEtCDi0IVpt
FwHGhrRPK6lpgVH5OqvlwwR4YXS/RaFeA7It+c2mfQlw+X5Z2U0/DWB/rdEe
O04Aw8NFd2qkNeCfIEj0hBJANuTr1+kwdaixt3hXGEOAQprz51YrNbD8Y+Li
lksAyzK3zf06KmDhk7Iht4AA882RaaljyqA/NqXLfUyAn3+mFjJylUHqV75o
bAUBFF0UTWM1lOH3oFxFWSsBsE889RJjJejzDM/i6yBA4OwbS/KSInwY6Llu
1UWAG56zfadeKUJVX8LR/i8EcN/z7dZJF0VI+CIgSxongADZLlT7kgJc2L1P
zJVDgKXq/4SOOCtA6KfK6QczBEg9x7ONUVYAj48n2tcuE2Dy3qCM6yt5MOga
Pu1FIcIny5b4RxR56G59PVCpT4R2otj4hURZeL1N7a2wMRH332rt562yUN1y
vtLelAh7/Lx1jy7JQE6TWeLPDUTItY33lPWVgbD6wk2YMxE2OCbsk3SVBr/1
BH23nUR4p+RhHMuQBs9ab7ncvURYTq29KdglBdur5XkWB4lQrznnNO8oBbKV
13OOnCRCj6XGW+99kkAz+ZtYFk6E208tRa4oS4Lwc6uzfGeI8Lvx+8+EUTaM
lwvtSo4mQkrGsX+aoWyoeRJMqLtFhMtL5a2a91jglbfLT/IFERQSL6xfpDKh
PPDXNrsaIvTL16aqDTJA1DxE7VIDEQw0yYqT5QzIf5vUx20jgvPxll073BjA
5XY4dHwlwo7WZXPZUjqcR1uMLy0T4eSh8k1HQzHoEu3GqgRJMK7LJ+zghIFq
p9cEV4QEvif654p1MXjtdS7Xg0IC77eVwW9/0oAW+1LaQoEELX1rR1330uBB
lwHf9HoSNJKrX0vsoQL3Tt0XrS0k+M2bzbhtToXN3vbPPaxIEF+ZOx21kgqj
c34BHY4kGJ6W1j86SAH9lXmDj7xIsP7UTS2rAArUHZZv8YgiwcXNUSNxJmSg
GxRl3oolgX9R6N55ETIcXDA/1xFHgktRI94zHyRAPH63qUUKCXYzBipTAiXA
oTS5QDKHBHWme5Y3lZGgf4l4vaOFBF/etchm2BFhqZbdW/WGBFOPWaNCGkSQ
uqgsX/COBNeV5RNb+IngRDArjOklgao5yym0lACNrKOv1//C7d9o8beVI0De
6haBMlEJiBEg9bwREIfGqS7Lh0QJiJzILPzcJwY/yvsSrlEkQEYvb8ykWgxk
zGfl/NgSMFTJu/ErQgziLdVM1dQloH84/8jvf6JwwuNi4K0tEjAQxXlcISIK
CSrXKi5ZSUDwawEvv1ERKBi5zR9sKwGGWSukD7wRgWG/0ngHFwl4X1wZyE4U
AdfwH48I3hKQ9i42+KyyCJgnrhs8FSUBP99TxSrthEG4cdHJ45UEaI6fN13X
KQRZJ7JSMlsk4PFVs2bFCiHYrGT7aeSNBGDEllWmD4Qg6sy9ff7dEnAhuHOO
FCgEK0w3HIn4KQEdD/85a7KEQKg4+nSyGBk6q1MOVh4ShAw3vbpeEhmKxeXE
6h0FYSPpk5AsjQwudiN7Zi0E4cIRrdiHUmTwET1NH2UIgqBKe2KxFhle/vhC
/PJKAARSsbzX1mQogabpa6sE4MHWF79JDmT4Ylv0ylRaANbzvHTtd5ChdeLV
HEFMAM45lZf2uJGh6fX3CdkhfuAn76we9CeDQLkUezGdH/gupHctXSOD0pev
YU6S/LDsq7Gs302GFMUSXRFVPjjCtM1f9Qn3f1BYoorNB11VJ3aqfyPDh8uX
Za4S+CCPXFMiO0yGNL/rPUMDy8jp8Y5DojNkSBc+1lAYgfN87ci4OAXaLufY
5z9bQjnmf+0bNClw7Nenvme2i+gr9VxOrTYFTl4953ncZBHRhunLVToU0FVg
xNioLKJTcSb5z/UpUERXvhT0bwE5fL8oXGRCgS/ba4T8chfQwhmZylvbKBA2
UOLcQlhAdg2Wyv5HKLBig0qtw8g8Kn05HeDhQ4G0zXvL/HrmEfvp/VpnPwpM
9Hb+zWycR325c25meB/5DpR5H8icR8fic2+JhVHA/YBOp6LXPErYJUbOiKHA
nn65Ap/hOdQx0Tz3MYcCT9JXdy8uzCLD0RNb2/LweBJ5NLW/s+jmD/mU6nwK
bM/lLRzon0Xu3SGGWcW4vXee65QbZ9FEpbp/4DMK0FpCT6UnzCLKpehBUjMF
fvuKBB3RmEX2slvfrv+J/68bqXnyMA8FX6lLc/9FgaVR2c/Se3no9j+zQ5Fj
FNixcMj0gx0PjfTq8Vf8pYAYtzvi4loeikyWNtCbpcDk8xmDj6I8lE/+m7xS
jAqS/R9kNApmkLBAstuCJhVucN4q3RWcQdrHKVpSq6jw4t9GlDY3jRz6YnnG
ulR4sO+dcc7faXSn6nRCoAEV1KJddnI/TyPD8MN1o6ZUGLGKuO1QNo32c81U
e7dTYb3q6mHq0Wn0YvjHnzI/KvBa0z4v9nNRU+dt/6JjVNjdMHo24BMXdVY5
T+YEUGFH5T2/qU4uGklu4qYFU+F0T9U3yQYuom959O9sJBWKjuuE8bK4yCc7
QMwmjgrS338xfvlxkcwhfpXhAiq8C3JP2CrCRWpOFVnfi6iwVAkbtPi5SB8C
1XsfUyFbSOEW+98U2soe0morw/3flcaP/Z1CJ5qb9Z+8pMKf7oqkiz1TqE09
ASLfUOEe3/5s17wpFP5Lbg/zDxV61d/XBLjg562ydpv8pcIvx3ZDHYcpRC9Y
tdttkgq6HIV67vYpVHjMbFfWNBXOJlYIP1w/hfp4O12NlqiQfPsb67zOFNok
nOS0g0yDF2szjS1FpxDtkIxTGJUGVV4zXx8LTqFvLQ8d0zEa8OkSiSrLHBRy
9YnDMIsGE9+HvmnOcFAevcMuWJ4GbkkyZ0sGOYisRLBO1qNBUG2q/JN6Dvpy
4fr2CgMaNDFmc6urOShnWHL7tzU0kOUyNvVUctD6PHUrVRMahPg+T1Yu5aAT
epsty9fTwC/LatYok4N60dlN3Y40sPkrc3VNDAdl3RfdNO9Mg8b+e/v6L3JQ
gGDCRjlXGsgs/v2ZfI6DiE3pGw7uoYGtoZ3wyggOsrB5sW7GiwY68dPTD/w5
6OEenjkzmAbjBdibIFcOcjJ9yWGE0GDfcZvvI84cJCx1PpsRRgPxCDEdL0cO
OtIjQWVE0uCIbEVQoA0H6TuoDmJRNJAo/ujB3chBg6t/38SiaaD03Z+Uu56D
kslPrLFYGtSkln8/ABw032b+lBaH67dVm8Mz5aC6Lc6x1GQaDM05Xz9lgMer
Ko2oN3H9BhLMA/U4SHVF/xQllQZ2Iv3Lx3Q5KLbOZy8lnQa8kKK6C1oc5GB+
YTU5iwZeLGWMpMxBA/ol3cRyGoTeksy6y+SgRGroZeIzGty0iaEwGRy0ecIC
iBU08JTQO5WI4fkqeJ1LqKLBsRUau3IpuH7qAxHijTR4U7SOakDgIGWRHD3x
ZhpEV14K/yXGQd1DvsNir2nAVc/5kS3KQSYP52zF2mnwZDA030yYg/jlqEqi
3TQ4euC3TCM/Bz1Z6O4R+UiD1hn5gBd8HOT1+fYVkU802P27s6FieRI131Sf
Ef5Gg+yZIs+3i5Mo7OR4nnAfnm/f88VDC5NIe0fpPuEBXH+SyoIgzgkYtKwY
xv1d9f6a6/wkWs9ZEblihAa1HSJf4+YmEbejVX/FKA0yBndpvJmdRK5xLreF
xmkgGrqneT9vEon7ytoLTdBgnUiJzLOZSfTC6scKIQ7OqiFBTJzlxfz9BWdo
8Omwzdox7iTiJ9nIzPFocFlr1QYvnAcoq1rG52jQ+eK38NDUJKqjE4MH/+F7
08vyC744P2SPKX5apMGVvPqXi5xJdEHm9du3yzTYObyrJAlnL/nciFf8GDx8
1nlwDc6blKM1KgUxYDgn9H6ZnESq6t7dxSswiP8uQrqCs4j25vNZIhgwj78Q
2IDziK7K6ttiGCzKwAt+nJsNhL5eI2BgN2Ng2jwxiXKNf8RcImFwhrH1bDLO
saZ1RqfIGKxLN03wwfkIuv8jgIrBi1dfDm/D2WrDmYRDGAaDH0Upq3HW3rLP
3I2BgfyG/AuyOJOsLEYdWRhoJ9W10HAet5FNsZTEYM2VHf1knNsdFjYgaQyM
Jc+9oeNctOPzhKEsBvcP+SUo4Jywq+KO5kr8/KijthHOx9xubZNXwEBgZ9hD
B5ztPUJ4DCUMqA1rZ4Nx1j/okkFQweBx8rT2Q5xpR4zs+dUwOHVfdWMPzlO+
jKUZdQzClewBw+PvOs7N+62JQcB7MWUXnEuD3rsMaGNw8xd38gHOSaFPhD7q
YHBQozF/BufgU9cev1mNQfsYuDjg+htftCU8N8RANCouSgHPHztG51mhEQZf
dxpRk3CevUI6kLEWA/8qvRQKnv+KxNaqeDP8IZ0ddn/l9CRKvZl39KIFBrkx
0tolOIffjmGHAwb73pVX2eD1ZJaxJeDgRgwoHfpi6Xj9yeaortyzGQOx1uEm
e7w+lx6taLPfikHpG9PbJLx+q0vqVcy3YyCkr5B453/1XY96MXxvl3XvUl+5
NImUmuSixHZgsJAktYDh/SPUuqi/7ILrO79bkIr316vOyiujuzFw9jKuUhLg
oK0DxlDriYGPffvufLw/NYaZf8oPYBDsz9v4Q4SDxEenb+V7Y2Bkc++CIt7f
rZMlUylHMTjnw5OswPvfhn91tl8gbp+op2hD5aCJsK/v4oIwKOhVLRqhcdAN
buxC4UkMOvSK/7tK56CPP4fs/4ZjENfzbz+XxUH729MW/C9gsMPErcp0JQcJ
bbVUS4jC9ZzWmlFVwOd37Yx9cTQGD3wZnjJKHDRaap89cQUD8WsDcypq+DxM
E3E4noSBnGDWRCk+/5iMsohrKRi4qH/P5ODz8XmcR/bjWxh80NFsNzHkoKWz
Lxcm72DwJffXzdG1HHTpUGB2QBYGG//kC7bg8zh1zfeFwKcYSL7fOh6Nz3uz
oitqic8xONrgOXp8Nwd9VzdxKK3E+yWNb/SAGz7/ZJKyudUY/B5vk/b34qAC
ASuHoGYMYqMfHBI5zkE1b8uzg3vxer06JrjzCgd5WHp1Jn/GQLBDToMXj8db
T10s/4rBbJIE3/0bHGRZ7uPA68egOYk1xUrjoM7biosnRzEod/62MTGPg4YO
xzmE/sP1k9xS+66Vg3zcw/SDFjEw8fnbN/SWg7g7DtKOL2PAvmY3KNSF299o
0XlIkA7uRO8Gzy8cpCg3bu9KoMO9BHeDrD8c5N5pbW8sTYeXeUOhW2lTaKT5
Pz0DWTqEfdAMp7CmkH+1ClV3JR14n1xVB6WnUGT+YoeqEh1Eb5oXF6pMoTtR
BXZMLTrIxC5SO/+bQp9MSHbTJnRIPFcY5uY1hTz05nQnzeiw96Bk4c/DU2hU
bYj8x4IOcUMrAk75T6E5+su3g+vp4HH5x6/2sCnE/utj27WNDsE13i6E61PI
+WGbTckuOlRcWEqarZtCHYQr1sfD6NASy+8pr8tFkiGbH6VE0EFDr/TCrBEX
eQzyiVVF0uHi+CrKgAUXTb8IahA/T4fV4yFvf9lwkZTfPtOMy3TQDM0Ya/fn
ogMd+ho9t+lw7aW4t2gZFxWa/YlaTMfjn01cL1TFRbM52YNK9+mwK+WOE9bE
RbFnZe4dy6TDPstXt472clGxvjBLvJAOR97e1BBd5qL5xF4h82o6ZLWORErY
TKON/IkenrV0iBB7rm7tOo2u+trUxNTTQd9PS/W+xzSS31wf3t1EB2rj/aKY
k9NoEy+f499Bh2bKZ+n9D6ZRws4zfQ/66XBoS/Edq4VppCKn9kJUiAHWY7uf
GNfNoPSieaqKMAM+bijT0X87g5jr2r3XiTKg+9dSwOYv+H7sFYSFERmw4j6R
+XJmBg3n1h8ZozNg08cTa0a0eShrjbtkuwoDguar6J7pPCTXZOA/qsaAPOuN
s9QCHkp2FXklrMmAT1jT76+VPBQVXngM6TDgrJzc3ze9PORdu9BUbMSAo1IH
m+msWaRufSv4xhYGLD/LPhSYMovuffNpK7JkQP+lf4XknFnEPgaKbVYMmHWI
G2t7NotEb/x8I2THALtq052PPs2ikY9rVIJdGeAU/KtgeeUcyvXqfO96mAGq
EWTq5sdzSDOCoCd3mQF6NdL3gybmUXSsrBnzKn5/zKyJs9A/NHRTd4tEPAPu
fqC47WL/Q/fKHPcuXWfAf+zTkd3wDzH+psV8S2XA7p/e5Ls3/iE+D+2B9DwG
RKPG/EpYQG7HLP4k5zPgV/g2irTLAqqMtJuNK2RAcNstj0zfBRScdkLi9BMG
aLpX2ZqlLaDfXS9M9lUwwOK/kT+nZhdQzxbrGytfM+CNqgRfbuUiMtyxL53V
xgAtPUfd4a5FdN3reC65nQFJ6Xl1TuOLaPvZpOrldwyYHp382qSwhOoqvo59
72UAqUKqgHZ5CRWu8tt47xcD5lZInc30XkYXsPhpeTEmOIWYtBlk8cHDFP/I
DQQm1I2IqDU85YM6aTuRgyQmvO01KA5v4QM+ZarkIyoT0m5um9//hw8iDG+Y
rZFigocjOZRlzA9BzinnLbWYsJIv697lTn5I7D1J9FnFBCFLfbuGYX4o3eua
FKfLhJh7e25q/eMHzgHJ7PcGTDBoLBKLVhYAv+C013vNmKCw0Bp5KVQADqbc
pQZYM2HPmqJvK1cJwkXpM6mJtkz4LkVZurBREDLuuis9tWdC/SGqoOIeQRjI
Vliz4MyE0q4P7sJXBMHt2UPXKDcmXL70w+/yuCDs6M2+m+rPhK8N+T1q1UKw
Rbp4Vf01JuzN7Oq0TxSG7TJvj9beYMJQR9VHyhNhsJMdz61OYgJ1e80/Vocw
uK7UVn1xiwkl1Z4rBUgicEQpR67sPhMCVxrZ7osVgSta98jZj5lglZmsxUgU
hQTtauvMEibk4S+zpnJRSFr17fLDMiaEHgi58a5XFNJ1ZUTvPWcCwYBlwZEX
gyKDm3y3apmgdLj+/sUSMeg0TZiMfceEBH6xTYQxceg2K9KNec8E28/Oj9ox
Anw2b/e99IEJCzG1gUtmBBhExNHzvUzwlHei5CYQYHpD9EBEP56PEP5VzuZE
YG8/895vkgnp2IakoAISyFjfpfpOMcF+nfHWqq8kULCpsj06zYQjKEMrTkIC
NO0WWr3nmPBo9U/r1uMSYOoU0uDOz4Ir1c6XpizI4LbnWJkDlQWl1i9VJ8Io
cO1czthmjAXaBo/aTFIo0JDTp2DKYMGr5y+je0oooDltF6ckyYLXOhO6xHEK
8K7qeXPlWfD0e7ZQ1EEqJFRz2MmrWZCx/rfn30M0qB/StI3VZ8HC+UW3Bfxd
M0PwvBhpyIKrMbbyAQU02OP6fvLgWhYYs1Sy06dooDFZ8toYWDDdkRatfRGD
OsWgiF5bFqg5rCuoqaLD9NaCJ2/sWRAyGEoyGqGDuv/QSK0jfv7xeycDGgPi
Kp2d81xY8P75Yl+7N97XTkY64ftYsP814eUbSSZwL/K+y/izQKt0g5pxGm43
X5dJPc4CmfV0gls7C3Z1em9fEciCSnW+kLUCbKiR+/jsTzALwnbuZTN82HD1
6bNrVZEsWDQfnHqzVRJUf4VucI9jwZZYxRUxGtIgffEMLzKBBTczG3Vk/KWB
onDp0Z3rLLhG3jbeViYNc66J2OdkFiylO766u1kG2poLfzjfxZly61hNsCzU
epWlnLjPgv8qcrq4r2ShnO+F1Y2HLNgr/DwhgikHd9e2lHRk4/fF26RmVMpB
QM6P81bFLHjQPR91myAP3htHjY88YUH4z2NB3LXysKdvYiy6FNfj3kIiy1se
NrGXHBufsaDRo/pq5yt5YEezldfV4vcr9CTkXlWAKm/rBqNOFpzLRr8/WClB
iaBTiHMXC/xKHqcERitBzt1d2ie6cX2MP0SYNSrBtR7vxMefWFBT4CHpv0kZ
vLac89L+gedfhGgBjiqw80c022qIBSKKIVVyqSpgczq+7fBPnK/PfPMdUAHj
p7cNs8fweIQUw6NOqoK42lMhRS6e3z9bEjpK1WC57uUzmMHji7C23y+qDly3
Bp99syyQaz0R8HKvOnxNftd1e4EFf2zFjEkSGlAs/DuDtYINYynDUbejNCHz
AcfVSIQNiU/Tl5ijmpBqMUd0FmPD/rxlxw+2WnAhWDjoOokNbU9eKR1Q1AaX
YflNJCYbotXxFWFoFegvHygUYbNhOT5eMdpZB4jsRywBKTYEVeyyym7SgRrL
NaMzsmz4Et6ytqFEF9QLLOP7VNiwLtfy6nD3ahBojJv9pMaGV7GDjhOSevDl
2/v9HzTYsMN65miymx4kUNwMX69ig6VclMOf33owGxjQW7KGDTyDRRm3lQbQ
eeXp+kJjNiw82G/4/ZgB5GcuPMr5jw2Tjo5vTjYYgHtPVOQdczaYfegxNAkw
hBaTNKVLm9jALu1SsBhdAxmOfVfObmFD8J+7N4ttjCDSR2Um3JINxau3e/8s
MwL99KLmY9a4v87564hXjSGVv8F3lzMbBAInZTz3/wcnpMR6nFzYMOtzRlzh
+39gY2ADtjtx/8UdvqW5m4DAgY+0jXvZ8Mn/kZOnvyl8OSUbYbGPDR6b/oQK
LJpCebLH0Nr9bPAVaGoRjDeDo82/n646wIakMffI0Rpz2Nyvp6DuzYah2bgl
w/0WID8fHKt4mA27RBoN8oURHH0mkemL993/f4/8PwyYo8o=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Theta]\"", TraditionalForm], 
    FormBox["\"A\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {0., 32.155594723395765`}}, {{0, 6.283185307179586}, {
     0., 32.155594723395765`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6782011908459873`*^9, 3.678201287267968*^9, 3.678201645092907*^9, {
   3.678203628947277*^9, 3.678203651406035*^9}, 3.678206138720562*^9, 
   3.678206692143313*^9, 3.678221470731682*^9, 3.678435993230301*^9, 
   3.6784655179193983`*^9, {3.6785499582653008`*^9, 3.67854996672619*^9}, 
   3.6785499970871363`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["HMC Condition", "Section",
 CellChangeTimes->{{3.6781846727892313`*^9, 3.678184688611289*^9}, {
  3.6781891858608828`*^9, 3.678189186725843*^9}, {3.6781893679956284`*^9, 
  3.678189372177762*^9}, {3.678192625969808*^9, 3.678192633295753*^9}, {
  3.678192664855691*^9, 3.678192669831728*^9}, {3.678192916755786*^9, 
  3.6781929185232058`*^9}}],

Cell["\<\
The GHMC form can be verified by comparing to the HMC form given below,\
\>", "Text",
 CellChangeTimes->{{3.6781846898401203`*^9, 3.678184702653365*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AHMC", "[", 
   RowBox[{"\[Phi]_", ",", " ", "\[Rho]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"2", "-", "\[Rho]"}], "\[Rho]"], "+", 
   FractionBox["1", 
    RowBox[{"2", "\[Rho]", " ", 
     SuperscriptBox["\[Phi]", "2"]}]]}]}]], "Input",
 CellChangeTimes->{{3.678184718045204*^9, 3.678184782737692*^9}, {
   3.678185586573646*^9, 3.678185587412859*^9}, 3.678186473439444*^9, {
   3.6781866221170797`*^9, 3.678186639965098*^9}, {3.678189241133733*^9, 
   3.678189241388253*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Check ",
  FontWeight->"Bold"],
 "This should be equal to Equation (1) for \[Theta] = \[Pi]/2 and \[Beta]=0:"
}], "Item",
 CellChangeTimes->{
  3.678184714792104*^9, {3.678184789906178*^9, 3.6781848065562067`*^9}, {
   3.678186708204872*^9, 3.678186731363323*^9}, {3.678186942503662*^9, 
   3.678186949071375*^9}, {3.678187189043771*^9, 3.6781871967245398`*^9}, {
   3.678193974262074*^9, 3.678194044082535*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"0", ",", "\[Phi]", ",", " ", 
     RowBox[{"\[Pi]", "/", "2"}], ",", " ", "\[Rho]", ",", " ", "r"}], "]"}], 
   " ", "==", " ", 
   RowBox[{"AHMC", "[", 
    RowBox[{"\[Phi]", ",", " ", "\[Rho]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.678184813206846*^9, 3.678184929952467*^9}, {
   3.6781855538773623`*^9, 3.678185592068797*^9}, {3.678185669533718*^9, 
   3.6781856702045193`*^9}, {3.67818627152595*^9, 3.6781863563608837`*^9}, {
   3.6781864072729692`*^9, 3.678186412503985*^9}, 3.6781864530093327`*^9, {
   3.6781864925513477`*^9, 3.678186529088065*^9}, {3.6781865698067913`*^9, 
   3.67818664147665*^9}, {3.6781868088523293`*^9, 3.6781868109301147`*^9}, {
   3.678189245158505*^9, 3.678189245404129*^9}, {3.678194050194709*^9, 
   3.678194055658029*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.678196177906227*^9, 3.6781962845404053`*^9, 3.678196339749666*^9, {
   3.678203628986725*^9, 3.678203651434811*^9}, 3.6782061387464027`*^9, 
   3.678206692162429*^9, 3.67822147077479*^9, 3.678435993392789*^9, 
   3.678465517950507*^9, 3.678549977443008*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Showing the change in the HMC integrated autocorrelation varying with \
acceptance rate,\
\>", "Text",
 CellChangeTimes->{{3.67820135820119*^9, 3.678201394139328*^9}, {
  3.6782017909965057`*^9, 3.678201791412546*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"\[Tau]", ",", " ", 
     RowBox[{"\[Pi]", "/", "2"}], ",", "\[Rho]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Rho]\>\"", ",", "\"\<A\>\""}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.678201076096074*^9, 3.678201173565803*^9}, {
  3.678201205904499*^9, 3.678201239374442*^9}, {3.678201293846182*^9, 
  3.678201294109104*^9}, {3.6782013245899343`*^9, 3.678201350267584*^9}, {
  3.678201410115102*^9, 3.678201414026392*^9}, {3.6782014599620123`*^9, 
  3.678201485482244*^9}, {3.678201525966042*^9, 3.6782015411216784`*^9}, {
  3.6782017975411863`*^9, 3.678201797660614*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVxXk8lAkfAPCJ2FyhQo6tMdHkHiZy9vulWCo31dtb1iZtXpYOqVBS6XAt
UW9JUo5K1rWuNMOYGWYSuaNyR8r18DjLte/7x/fzVT8W6OojQqFQIv/n/4fE
3ZAO6SuCWgPljMsyZmg+K0Z16S8CuTQG45S0Gar6Gvh0mxaDyVB5PfOpKXY7
XiXmB4uh22b/b3fad+BxlW2r9bEU+puf0V/6mKDa+TMeTR6lsJiUt+W7kwm2
tbCygvxKga2SYRJoboK2sS72r++Vgudlia9NsiZIp4TG2Y2VwiaadKUPyxiH
B+s3eieXwZJlmk2AmjEGFpzVuz/9Ckxl/EKvzDBx3LKv5c2acjjm+T1j5yAT
/YWOIQtq5bB6j9+UQhsTT/ZoCTxtyqFxSVJJtpiJXjK9Xpr3yuFJg4WdZjAT
nX33JxXueA1W5/+aLFg0Qoa65kJdCAuG+nM/TCgbYW7OnSfLcSzoLLukESht
hLqmFDtGOgvsfHihlBVD3Ob0KSnxLQt8dX3y/j1giNRLCfqH1dgwuYPZR+QZ
ovyHpd+G2Gz4NXXwUsBeQyTj3wtXraqE3W5hjKZoBrL8C2BAsRKmGnbZnw9n
4E27mJIa3Uo4OOf4Sv8sA9Uo1hnRhyohX3xepukwA20C/wpXyK8Ex92Xs3q0
GVi31fphkgEHKpkjATIpBkgVU3Z93s2BwjB/YwB9FDt7I/bBNw6YUx8pH9PW
x+HeKWHUNAeKLpSPPFbQx2LWO/hDsgru/DCL8hvVw71B1/WMTKqgpiiVavVQ
D4M+E2tYsVWgO3GnLXVJF4VVNZUNllzgNDETfm7Vway6xYHYX7hQyz/TfZer
g5HtRpL7XbnwgPQppxXooPVYqrvwdy5IxPjHXYzTQdbG8984d7jgfnDfG6W9
OpgfSF9f+JULhyqOZ8zztfH+z7dOJCXxQHEuRt1fqIXB2yqiXR/zoP2M9S6T
V1rowZzOl8vmwb25Cyty2Vq4zt5rIaaSB7NBo8Nz0VoYE2QaHznMA51cl8Rb
zlp45e3XV8HIh2sTXXGpndvQ96K9zL9G+UDpHDWdWqFjtqr8Uc9ZPhRdVT0T
OUXHUXZHjjelGt71pt7cMkTHAJGT+wM2VMMm6oLotXd0DIq+EX3NshpOy/oG
1j+iY/gjnkRuTDXEG9X1Reyk490qK3FRvRqgpyWxlm5uxSoJo5WcPwQwlG35
ysJUE7e5M0qjLgjAHWZrQvU0MT5VP/DkNQFYuOjyq2ma6MXU6dnyQABSfPqB
8zKauHxEozKZLwBV27ijTp810DxfMfyWqhCcQ4rPCuI1sOjAwrL3GyHI13yy
vUJuwax0/rKKZi080Ni1mPKOhqci3fvAoBZSC4z8YmtoaPH7AO+4WS2IUB4q
Xq+gYaP26tu5DrXwKnNK7HouDb8X7F5vHVwLKat1wuvjaLifw6X7CmqB3+HK
veJMw6lOjnOp71uISjTtNutQR1RkP3XLrYOCMJx9PEfF1XcVAm3K6sCvS/nZ
2kkqCtcHWOzg1kFVY2l/xDAVneQ3t6q8r4Oa6+eGznVR0VM6Qqx/qQ6cBPUZ
iTwqhorYnDzlUA8/PrqRT+KpWDJepxc7Wg/6g1WGI3pU1BN0ltVoNwBWSHCT
v27CVnQbfzHeCCNyQf48qhr6S/o1tzGaQWXz0znOkDK+7TjIXhvXAj7ug675
TUroZnuob2CgFSBEmGMmoYgmadEH0zTeQ0Xrs4lfEjZg73Ji68nwdnCZ8HhY
vHU9Dto3pCvyOoDMfGKpOC+P+Q96Ljapf4QM4S1xiyY5zLwlelsr5BNAoJ9T
4X1ZnPE+PHzidSfss+yKWeySQak9N1wLlLohvFb3egldGsPkBqX7jvTAWPIq
l/f5kihdoUNpd+iFpmxqW85RCbQKdlri/eiFwvJVvl0SazAlIyZ9S0of1PTb
mtsMiKOnx/Z6iX394PXsVM8wSwyL23wSK2b7YTIg9erzvNVoVpcv8uXeZ9ht
pWRFqxZFqs2JmcQ9AzBs7fJSu10EjbcbJxR9GQAzmZx18+Ii2EPGvkmPHATV
8Jlmnu0qHGW6RCobfYG7840GnlcpuHVEb3hVyxc4eKU9UuvlCvA1zjWfihiC
+jHzb/+xX4Y/W9u8XTW+gpo3OUaVXwLCjZMgwv8KOwtbBm+PL0Chh8Jus9Pf
wMNe1vkM7wek11971L9uGBJy630cy7/DnOBI6DruMByZC81UezEPvQmVM3IB
IxARZeu5LXsOZpsslK+uHYVgXk2Xh2AWTiXROBdZo8BWXTx2p3MGlOppcgOe
Y1DGYU8xpWbArS1nUW15DE6blbjE2E4D+esT/87scQj7Us42DpmCSq+8yLX7
CWiIKW8K5ZFQ3uC/r9uRgFTRguQjHBJKdmrL57oQMBGydcqKTUKOWmaKw0EC
ZCenXERKSUjuSP475hgBhS/7uQnZJJxzvtEneZEAmniU89sEEnTwqNVPWQQs
eKXJP/ciYWueimj7cwIc9mZdST5KAm1ThzDrJQEqh0+HxB4mYeOiq7ttAQGZ
hjyZc+4kiJfZ+UWyCHga5pi3146EPoPtD0RbCCA2TrNlGSR0pk56trQREO+n
JJTUI6FDJk8jvYMA9seSw+LaJLwb0cq37iZA988PG1e2kMB6tlkQ8Y2ApYfs
6VklEsoUu2JcRgkwrG7cObuBhL8jk13VCQKUDqDcrDwJ2d4K3ZxpAj7xM+3m
pEjIbG5Oj58jYL2De978GhLSdsX7ev0g4EVCY8oPMRJS8h0MGEsEbPppTm5J
hIT/bpaaWVkh4Kx+hhSFQsI/B1MO5w==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Rho]\"", TraditionalForm], 
    FormBox["\"A\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 25.052713638447848`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6782011488846493`*^9, 3.6782011740318747`*^9}, 
   3.678201240440404*^9, 3.678201296811831*^9, 3.678201350586152*^9, {
   3.6782014111608963`*^9, 3.678201414268469*^9}, 3.678201464619265*^9, 
   3.678201545629547*^9, 3.678201800156969*^9, {3.678203629017867*^9, 
   3.6782036514672823`*^9}, 3.678206138771044*^9, 3.678206692192451*^9, 
   3.678221470826647*^9, 3.678435993441873*^9, 3.678465517986309*^9, {
   3.678549973017082*^9, 3.678550000176797*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["HMC with Unit Acceptance", "Subsection",
 CellChangeTimes->{{3.678189136793354*^9, 3.678189184204781*^9}, {
   3.6781892999811497`*^9, 3.678189309818619*^9}, {3.678189354691413*^9, 
   3.678189385673601*^9}, {3.678189423202386*^9, 3.6781894299050617`*^9}, {
   3.678192650769865*^9, 3.67819265541558*^9}, {3.678192941379877*^9, 
   3.678192954723619*^9}, 3.67819304705011*^9, {3.67819316213643*^9, 
   3.6781931749514503`*^9}}],

Cell["\<\
The GHMC form can be verified by comparing to the HMC form given below,\
\>", "Text",
 CellChangeTimes->{{3.678189158944501*^9, 3.678189171600021*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AHMCunit", "[", "\[Phi]_", "]"}], " ", ":=", 
  RowBox[{"1", "+", 
   FractionBox["1", 
    RowBox[{"2", 
     SuperscriptBox["\[Phi]", "2"]}]]}]}]], "Input",
 CellChangeTimes->{{3.6781891950337152`*^9, 3.678189196653688*^9}, {
  3.678189618695533*^9, 3.678189732557354*^9}, {3.6781941389541616`*^9, 
  3.678194171223886*^9}, {3.678194236175281*^9, 3.678194238239064*^9}}],

Cell[TextData[{
 StyleBox["Check",
  FontWeight->"Bold"],
 " This should be equal to Equation (1) for \[Theta]=\[Pi]/2, \[Beta]=0 and \
\[Rho]=1:"
}], "Item",
 CellChangeTimes->{{3.678192351309095*^9, 3.678192404668195*^9}, {
  3.678194177306016*^9, 3.678194196129973*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"AHMCunit", "[", "\[Phi]", "]"}], "==", 
   RowBox[{"F", "[", 
    RowBox[{"0", ",", " ", "\[Phi]", ",", " ", 
     RowBox[{"\[Pi]", "/", "2"}], ",", " ", "1", ",", " ", "r"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.678192413284155*^9, 3.678192429675375*^9}, {
  3.67819420307263*^9, 3.67819421356738*^9}, {3.6781943353903103`*^9, 
  3.6781943501413183`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.67819617792083*^9, 3.6781962845571327`*^9, 3.678196339774654*^9, {
   3.678203629048337*^9, 3.6782036514955597`*^9}, 3.678206138787676*^9, 
   3.6782066922077513`*^9, 3.678221470875648*^9, 3.678435993503922*^9, 
   3.678465518013588*^9, 3.678550003789514*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inverse Laplace Transforms: Regular GHMC Autocorrelations", "Chapter",
 CellChangeTimes->{{3.678192797228715*^9, 3.678192829652664*^9}, {
  3.678194906468748*^9, 3.678194962684761*^9}}],

Cell[TextData[{
 "Inverting the autocorrelation functions gets ",
 StyleBox["very",
  FontSlant->"Italic"],
 " messy and so starting in reverse order now makes more sense, leaving the \
most complicated for last."
}], "Text",
 CellChangeTimes->{{3.6781842865063543`*^9, 3.678184327593273*^9}, {
  3.678184426585253*^9, 3.678184504309751*^9}, {3.678192844933332*^9, 
  3.678192868132708*^9}, {3.6781949725565968`*^9, 3.6781950795068493`*^9}}],

Cell["\<\
There is a sepcific method provided in the paper however, partial fraction \
decomposition is not well supported in Mathematica so it makes more sense to \
simply force the result for those that are no immediately obvious.\
\>", "Text",
 CellChangeTimes->{{3.6782020902549343`*^9, 3.67820215378318*^9}}],

Cell[CellGroupData[{

Cell["HMC with Unit Acceptance", "Section",
 CellChangeTimes->{{3.678189136793354*^9, 3.678189184204781*^9}, {
   3.6781892999811497`*^9, 3.678189309818619*^9}, {3.678189354691413*^9, 
   3.678189385673601*^9}, {3.678189423202386*^9, 3.6781894299050617`*^9}, {
   3.678192650769865*^9, 3.67819265541558*^9}, {3.678192941379877*^9, 
   3.678192954723619*^9}, 3.67819304705011*^9, {3.67819316213643*^9, 
   3.6781931749514503`*^9}}],

Cell[CellGroupData[{

Cell["\<\
The following line the inverted form of the Laplace - Transformed \
Autocorrelation function and assigns it to a callable function,\
\>", "Text",
 CellChangeTimes->{{3.678199317504532*^9, 3.678199366017501*^9}, {
  3.6782002100283117`*^9, 3.678200211731779*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"iFHMCunit", " ", "=", " ", 
    RowBox[{
     RowBox[{"InverseLaplaceTransform", "[", 
      RowBox[{
       RowBox[{"FHMCunit", "[", 
        RowBox[{"\[Beta]", " ", ",", "\[Phi]", ",", " ", "r"}], "]"}], ",", 
       "\[Beta]", ",", "t"}], "]"}], " ", "//", "ToRadicals"}]}], ";"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.678200449650069*^9, 3.67820045169071*^9}, {
   3.678200550575301*^9, 3.678200616759019*^9}, {3.678201955587666*^9, 
   3.6782020249532633`*^9}, {3.678202424619438*^9, 3.678202431155465*^9}, 
   3.67820364664179*^9, {3.6782066659345093`*^9, 3.678206666718487*^9}, {
   3.678453546793118*^9, 3.678453547168086*^9}, 3.678475611436707*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CHMCunit", "[", 
   RowBox[{"t_", ",", " ", "\[Phi]_", ",", "r_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"Evaluate", "[", "iFHMCunit", "]"}]}]], "Input",
 CellChangeTimes->{{3.678199588895525*^9, 3.678199610022584*^9}, 
   3.678202434691513*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plotting shows the underdamped form for unit mass and averge trajector length \
\[Tau],\
\>", "Text",
 CellChangeTimes->{{3.678201887342808*^9, 3.678201929415758*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"CHMCunit", "[", 
     RowBox[{"t", ",", " ", "0.1", ",", " ", 
      RowBox[{"1", "/", "2"}]}], "]"}], "/", 
    RowBox[{"CHMCunit", "[", 
     RowBox[{"0", ",", "0.1", ",", " ", 
      RowBox[{"1", "/", "2"}]}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<C(t)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6781991082789793`*^9, 3.678199203811432*^9}, {
   3.678199472225458*^9, 3.678199527903089*^9}, {3.678199613854969*^9, 
   3.6781996928774014`*^9}, {3.678199945617002*^9, 3.678199951624483*^9}, {
   3.678200930265499*^9, 3.678200937354685*^9}, 3.678201025880974*^9, {
   3.678201817022689*^9, 3.678201856941826*^9}, 3.678202512819312*^9, {
   3.678453570065518*^9, 3.6784535998999453`*^9}, 3.678550013187847*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
XCHu
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"C(t)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 99.99999795918367}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6781994665789003`*^9, 3.67819952843003*^9}, {
   3.6781996789635077`*^9, 3.678199694808474*^9}, {3.678200933584544*^9, 
   3.678200938864902*^9}, {3.678201833976337*^9, 3.6782018582637463`*^9}, 
   3.678202178620438*^9, 3.6782036530415297`*^9, 3.678206140544095*^9, 
   3.678206776946876*^9, 3.678221598469907*^9, 3.678436116071333*^9, {
   3.678453574164877*^9, 3.678453602371586*^9}, {3.678550010585854*^9, 
   3.678550021007886*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["HMC without Unit Acceptance", "Subsection",
 CellChangeTimes->{{3.6781846727892313`*^9, 3.678184688611289*^9}, {
  3.6781891858608828`*^9, 3.678189186725843*^9}, {3.6781893679956284`*^9, 
  3.678189372177762*^9}, {3.678192625969808*^9, 3.678192633295753*^9}, {
  3.678192664855691*^9, 3.678192669831728*^9}, {3.678192916755786*^9, 
  3.6781929185232058`*^9}, {3.678195128922331*^9, 3.6781951674647293`*^9}}],

Cell[CellGroupData[{

Cell["\<\
The following line the inverted form of the Laplace - Transformed \
Autocorrelation function and assigns it to a callable function,\
\>", "Text",
 CellChangeTimes->{{3.678199317504532*^9, 3.678199366017501*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"iFHMC", " ", "=", " ", 
   RowBox[{
    RowBox[{"InverseLaplaceTransform", "[", 
     RowBox[{
      RowBox[{"FHMC", "[", 
       RowBox[{
       "\[Beta]", " ", ",", "\[Phi]", ",", "  ", "\[Rho]", ",", " ", "r"}], 
       "]"}], ",", "\[Beta]", ",", "t"}], "]"}], " ", "//", "ToRadicals"}]}], 
  " ", ";"}]], "Input",
 CellChangeTimes->{{3.678200449650069*^9, 3.67820045169071*^9}, {
   3.678200550575301*^9, 3.678200616759019*^9}, {3.678201955587666*^9, 
   3.6782020249532633`*^9}, 3.678202409237751*^9, {3.6782024411233463`*^9, 
   3.678202473571404*^9}, 3.6782031930503597`*^9, {3.678203254327133*^9, 
   3.6782032757268543`*^9}, {3.678206674174651*^9, 3.678206674798562*^9}, 
   3.678220328262973*^9, {3.678475599044993*^9, 3.678475601716855*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CHMC", "[", 
   RowBox[{"t_", ",", " ", "\[Phi]_", ",", " ", "\[Rho]_", ",", " ", "r_"}], 
   " ", "]"}], " ", ":=", " ", 
  RowBox[{"Evaluate", "[", "iFHMC", "]"}]}]], "Input",
 CellChangeTimes->{{3.678199588895525*^9, 3.678199610022584*^9}, 
   3.678202443387198*^9, {3.678202478987822*^9, 3.678202485603691*^9}, 
   3.678202805685627*^9, 3.678220321759775*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Plotting for varying acceptance rate at ",
 StyleBox["t",
  FontSlant->"Italic"],
 "=0,"
}], "Text",
 CellChangeTimes->{{3.678201887342808*^9, 3.678201929415758*^9}, {
  3.678202530572019*^9, 3.678202566394101*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"CHMC", "[", 
    RowBox[{"0", ",", " ", "\[Tau]", ",", " ", 
     RowBox[{"1", "/", "\[Tau]"}], ",", " ", "\[Rho]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"9.995", ",", "10.005"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Rho]\>\"", ",", "\"\<C(0)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6781991082789793`*^9, 3.678199203811432*^9}, {
   3.678199472225458*^9, 3.678199527903089*^9}, {3.678199613854969*^9, 
   3.6781996928774014`*^9}, {3.678199945617002*^9, 3.678199951624483*^9}, {
   3.678200930265499*^9, 3.678200937354685*^9}, 3.678201025880974*^9, {
   3.678201817022689*^9, 3.678201856941826*^9}, 3.678202512819312*^9, {
   3.678202543026947*^9, 3.678202590632588*^9}, 3.6782028090056143`*^9, {
   3.6785500368763847`*^9, 3.678550037163314*^9}, {3.6785500757695217`*^9, 
   3.6785501821517477`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2//6DgLJDc2N3RZdkiz2Mn1LyXrJT
cgqczzHFc+GHj0vg/O0XjNzd5dbD+RHNd24d7t4C5+dvLNad8WUnnP9pwrUT
jIz74fwTB4/tP29zCM7PrPTkjXxzBM4/yGn0f03ucTh/2eIj/6RUT8H5DmJ7
FwWvOwPn6x6/s+OY1nk4/4pD8LuV7y7A+Tlc2ZeuGlyC80/fCN/L13cZzg92
i3j45MkVON9sQXf4ApVrcP6Df5OvZNRfh/Ofep5fLHb4Bpy/Yeb9youKt+D8
pR3MnZpVt+H8r8lRr9J234HzuV3agjaK34PzawSe8jyMuQ/n8+zTZrju+wDO
ty3z/3v4F4I/Z0nPYuU5D+H8uFCTs5zej+D8rVdTJ+/7huBbntnA9GzaYzhf
wTXt62SXJ3C+qYnpxC3PEPz7n3pPLm59Cue/MQ5slTR6BuervdZ9xXgZwT+i
UnqpoPE5nN9/5WpykMoLOP998IGJTEcQ/E2hos6WhS/h/MVnm+c+EnoF538/
HlMtdAjBfzBx/1eBvNdw/reL1pJNfG/g/IIpSgcq9yD44meVBJ7EvUXE79U1
f2T+Ifif4hfm3Fn1Ds7fn7C+lc/nPZyv7RBry74MwZ8uz/31/38EHwDTOibC

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Rho]\"", TraditionalForm], 
    FormBox["\"C(0)\"", TraditionalForm]},
  AxesOrigin->{0, 9.995000000000001},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 0.9999999795918367}, {9.995, 10.005}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.678221966147588*^9, 3.678436462779587*^9, 3.6785500284797*^9, {
   3.678550171316196*^9, 3.678550191936727*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "Subsection",
 CellChangeTimes->{{3.678188585872508*^9, 3.678188600837685*^9}, {
   3.678189387441862*^9, 3.678189419441227*^9}, 3.678192560960918*^9, {
   3.678192926500181*^9, 3.6781929313712*^9}, {3.678202332404532*^9, 
   3.67820233412418*^9}, {3.678202369057662*^9, 3.678202372700097*^9}}],

Cell[CellGroupData[{

Cell["GHMC with Unit Acceptance", "Section",
 CellChangeTimes->{{3.678189136793354*^9, 3.678189184204781*^9}, {
   3.6781892999811497`*^9, 3.678189309818619*^9}, {3.678189354691413*^9, 
   3.678189385673601*^9}, {3.678189423202386*^9, 3.6781894299050617`*^9}, {
   3.678192650769865*^9, 3.67819265541558*^9}, {3.678192941379877*^9, 
   3.678192954723619*^9}, 3.67819304705011*^9, {3.67819316213643*^9, 
   3.6781931749514503`*^9}, 3.6782023783077803`*^9}],

Cell[CellGroupData[{

Cell["\<\
The following line the inverted form of the Laplace - Transformed \
Autocorrelation function and assigns it to a callable function,\
\>", "Text",
 CellChangeTimes->{{3.678199317504532*^9, 3.678199366017501*^9}, {
  3.6782002100283117`*^9, 3.678200211731779*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"iFunit", " ", "=", " ", 
   RowBox[{
    RowBox[{"InverseLaplaceTransform", "[", 
     RowBox[{
      RowBox[{"Funit", "[", 
       RowBox[{
       "\[Beta]", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "r"}], 
       "]"}], ",", "\[Beta]", ",", "t"}], "]"}], " ", "//", "ToRadicals"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.678200449650069*^9, 3.67820045169071*^9}, {
   3.678200550575301*^9, 3.678200616759019*^9}, {3.678201955587666*^9, 
   3.6782020249532633`*^9}, {3.678202447981296*^9, 3.678202448548009*^9}, {
   3.678202612080641*^9, 3.678202612320877*^9}, {3.6782026832960873`*^9, 
   3.678202689088736*^9}, 3.6782031420567713`*^9, {3.678203362928256*^9, 
   3.67820336749326*^9}, {3.678203460685444*^9, 3.6782034651317863`*^9}, {
   3.6782039649109907`*^9, 3.6782039652284803`*^9}, {3.678206678942416*^9, 
   3.6782066802938633`*^9}, {3.6784466181748457`*^9, 
   3.6784466189667597`*^9}, {3.678475580783049*^9, 3.6784755871575737`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cunit", "[", 
   RowBox[{"t_", ",", " ", "\[Phi]_", ",", " ", "\[Theta]_", ",", " ", "r_"}],
    "]"}], " ", ":=", " ", 
  RowBox[{"Evaluate", "[", "iFunit", "]"}]}]], "Input",
 CellChangeTimes->{{3.678199588895525*^9, 3.678199610022584*^9}, {
   3.6782026144249353`*^9, 3.678202650577466*^9}, 3.678203089645481*^9, {
   3.678203374983965*^9, 3.678203379414605*^9}, {3.678203466635894*^9, 
   3.678203467557362*^9}, {3.678203498164155*^9, 3.678203498467454*^9}, {
   3.6782039701018476`*^9, 3.678203970380374*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["varying with mixing angle \[Theta],", "Text",
 CellChangeTimes->{{3.678201887342808*^9, 3.678201929415758*^9}, {
  3.678203331574971*^9, 3.67820333847758*^9}, {3.678549480460771*^9, 
  3.678549501197304*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"normed", "[", 
    RowBox[{
    "t_", ",", " ", "\[Phi]_", ",", " ", "\[Theta]_", ",", " ", "r_"}], "]"}],
    " ", "=", " ", 
   FractionBox[
    RowBox[{"Cunit", "[", 
     RowBox[{"t", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "r"}], 
     "]"}], 
    RowBox[{"Cunit", "[", 
     RowBox[{"0", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "r"}], 
     "]"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.678549707047168*^9, 3.678549743784614*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot1", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"normed", "[", 
      RowBox[{"t", ",", " ", "\[Tau]", ",", " ", 
       RowBox[{"\[Pi]", "/", "2"}], ",", 
       RowBox[{"1", "/", "\[Tau]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<C(t)\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"plot2", " ", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"CHMCunit", "[", 
       RowBox[{"t", ",", " ", "\[Tau]", ",", " ", 
        RowBox[{"1", "/", "\[Tau]"}]}], "]"}], "/", 
      RowBox[{"CHMCunit", "[", 
       RowBox[{"0", ",", "\[Tau]", ",", " ", 
        RowBox[{"1", "/", "\[Tau]"}]}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<C(t)\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plot1", ",", "plot2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.678549496772285*^9, 3.678549496780361*^9}, 
   3.678549557549226*^9, {3.678549591327683*^9, 3.678549667949695*^9}, 
   3.678549699838067*^9, {3.678549758778562*^9, 3.678549760872456*^9}, {
   3.678549882478738*^9, 3.6785498873332653`*^9}, {3.678550233318347*^9, 
   3.678550274464011*^9}, {3.678550322817655*^9, 3.678550406722939*^9}, {
   3.678550468802348*^9, 3.678550471583888*^9}, {3.6785505025670977`*^9, 
   3.678550556882443*^9}, {3.678550593296501*^9, 3.6785505952287807`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], CapForm["Butt"],
       LineBox[CompressedData["
1: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
ppzcpZFOvJt/lIrYDoM2p49I1XTM0sgK2k+HcZRqe1cZ6chtuyv7+d0wXOc8
HX9IpIN+7uJSXtAwHj/7nfBaLB27ahVym8KIfHo+uv1XOB1PS7ZIL8YOI62Z
tOMlXzrOJOZIqhcO4/v3m7EbWdNhLxw5c61sGBw8CS4h69JBinqT8rBqGFwc
Zww5V9Ow6cPVQ+Etw9g4FP1iGy0NHS8YD8xShzF25+dVvsw0MP/7OsFEH0ad
z3amM7FpkHncFcPzfRgC5mVOEsT7NcQmfp/y0jAeCti9O/80DTeuned/v2kE
7Ps81srPpMGfIjOUsHUEwWnn4zfJpKHqokB46Y4RPBUWbOQ7kIYDGvO89L0j
OPX4jEsgaxpmZEJ2yEuP4KJkVetUXSqebJ1gHzMawVjMftJ74rwU689UGjQZ
gQhzsAT1cCr6Pj+z6709gl9mByv+7U6FzAm+wWabEcR531VLX0rBj2sXkwrd
R9ByK6ZrMTkFpkkV6oHJI2BR1dL8uCUFGqoRr87+GYHfB7G6jwVJYC89xNB7
fhQ+gVqW9CoSvmsKZHtqj0IxwFRQN5GEloHt5ooXRxGW9oc3h7iPfVf+tsYa
jGJJmCJpQbyPOI+3RdqZjqJ8wBOk2XjwJNuB02kUpKIj3w7tiodQaInL+ZhR
jLleYhq2i8X6g5lSjPGjcDGeE/93JRaTeXGT2Qmj6N03HiB1Ohbx3b5afGmj
ePTkF7WDIxZi227yTxeMAqIMyeykGBx5w1L6pnUU3CKCH5ZHP+OU/YW/5NVR
5PmJXf1h/gmLFnRn9b+j2LK8g3eL3iekX3++2vJvFDL3Ngpo4RP2qWct9TGP
4XJ85BsJ7k9g5ds5N7t5DG2PSJNu1dHoqhie3L1/DDPtns+qxaLhk+twK1p4
DC+1hK9x8kTjbNLWcRHRMVxMnKpwXx+NwkDlsaOHx2B5geHkwGgUou7EDZw9
MYbfR2e36YdEwZLDus323Bjam0Lt87ZFQWTdhgsr5wkuP1njxBiFkcXIZhft
MXjq3DVooEZCd7S9wePSGFbVkqrvf46EbNbx6sjrY8R8q3Xjk2gkmA3/FjTa
juHMlEvZsHIESs8HyerYj+GS0mnTuAMRcFCWzOtxHMPfn0yTZPYIfD1kkj32
dAzPdxr8Y6B8RNtaVerS6zEkDg9sePXwI8JjvD/vDx/D0JeKmaq8cFz/75jC
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
MEZNz1232TwBP782n5q1D/AMMDksLjMBlUGrj4m/gjAy97b+88sJ8P42u2Ta
FIjxf0+iLr2ZwIHeoHDPgkDQ2S0dNnhNgCuuKjwnLhA/RDSE7/lNILLaLYXn
eSAYrrI8lwqbQO1vl6MCMoHYR3aRrUifwE6PD/fDogNwO+B+/PDABOJOuLGd
f+4PiyhjF7/hCZh4vGCuu+8P65Tzl5THJrBbhktfz9gfDrWHmOImJ3Dnvv/D
T/L+ePN7ytjq5wRGMsfs+JfeIcH0Bvcflkk82SIyO/rgHb4d03nJKzWJP271
LomOfqiPGxf5KD2JyfPX7b9Y+CGO17FO4MQkwtj4g3HNDzf+RWwSVZjENkse
FillP3Q2fHsnozqJ0vLTG6Q5/FBo8ibi4pVJXFUpUQq94IsPXbuVeo0mER6Q
7CN4whd2Z9PGrlyfBMv8q5gBfl9IHO4Rumk2iTPtp//SZ3zwaXl/ko31JP5N
c1dbvfOBh29Z3lu3SQiV0TafGX2L2+suGm57OYmNbDWR7I1vofxocjXw9SQq
9142Yct9iz9XOBTDvScxFsXREOv9FjYiV6sSgyZh4a+5yVjhLQxKFttqEyfR
cLklbjDWG8ePeD48lzIJYyfy8t8Ab3B+3rO9NW0S5ZEqk3pu3mh6c+ZyT/Yk
kl397n2+7g3o+Q+Nl06i1qw0vILPGyLTh78ydk7CP1DI+0eUF9hZW2OLuifB
mXBWU/ydF+aFbEweUSbRvNvqYuxzL5QbZ1LoQ5OwCmR/oGXqhSsdMrWt9En4
GtxkdDjoBaXZXjeP6UnYr/QKftjthQPsTor/zUxC/dRC5RyHFxZUinJy5yfx
YH7O6eq8J3wKEPNxbRIkGRH613JP2PWMXr/MOIUFW0WNkWxPXJ1/vnsb8xTi
D2KQPcETooer/N03TkFGbOtpTn9PVEapPb+3fQqmEu+dim97glTyRUF45xRy
N4d12Rh5wrffc3mYl1hPSt/vqq4njLY339fdO4WcHI/IDkVP/HqtY3xSbAq1
Srnz8rs8MRgzxzsvPoWD2t0ngrcR61cEdCdLToHiMB52YCOh93e3psDxKZzY
SWIeXvaA6P0r8huUpoh560RDeL8HNnv/XixXnsKrCgvPl50e+EUKz3ysMoU6
hbHqj00eqKQOH5zRmIIDU0LFlTIPGOmb8nRfmsKZm1fYVuI8oGzL3OVjMAVn
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
       
       "]]}}, {}}, {{{}, {}, 
     {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], CapForm["Butt"], LineBox[CompressedData["
1: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
M83SL7+24MDP1eLueeLdbCe28nihBc81rK+LdhZA5eujenumVhSue12kn12A
uk8yl422tGLxcsd+FdsCeFu/2K8p1Io2Nw7S6qkC6NJHF49ItOLVaxuPSKkC
dE8GBe1QbkVGRVSy5Vw+wq0+mfFotuLOePGmgK58mNFO7Pt3phUPX5VuDinM
x8Toj2qaVSv642mUvZ75+DFg9DPVrxW9H8t9bonko8A0szLqdStkrvOEneXK
hxt1jf/Lt63Yd2uD9kZi3mDuLRC9m9sKxa+GCWyteag12vDdsrwVRcfeFyiV
5sG760a50YdWCO/aoaeWmoeNHfznFQdbUSvcEFbzIg/dZ+7ulpxqBd0x0P2o
Sx7etH6c2TFL5Nfid+HxzTxcOL27lGe5FZXUH3JBF/Mg1Oz24h9LGxhr3Xhu
6+WBptN19jt3G+xzbjD41PKQ/HG/8ARfG65cTiz1UciD9IehonrJNvTmqnJ9
FMkD38ytb0GH21AlpLi+e1semLb+Frmo2ob6fvGQD+vz8PmY73mxU23IFbMR
TmAn4rMU8Js9R9jTEJO3/JeLCh9SZfGVNnhJXlJnX84FiXzk19NbbeC4tKXS
/2cugvvqJfSc2qC/4wbnr5lcPFw9d4n/CRHv+xQvpS+5uC429YrmR7xr1z3w
MmfkQl/XsT4jrA1T1+dNzKdzoeTA+tspvg1PrQq1FadyIRoZLHsiow12G7je
fJ7MxfpqkatchW2o1WJ2cyDWl+jk8J7qNrAgULSD+J62XrXlbXMb9uzJqGb+
lIvmw23MNn3EO5vlzn1WYg4vMDNXkKe1IbZZ6lL3bC7inn6zWf3aBvVHYYH3
fuXCN+3h24bFNvjf7RMcIvIrYayx0WZuh9ZI7voNxNwu+/C0VxY7cU/apFiv
W0vM7Rtex27mbsefb6wSHwn9BN4NFblsasdVYozTJfQNUBDtGuZrR/W1vVlB
wnlgbbz1TU2wHft0+gxCJYl581LuWpJIOwbPMG09dzgPll5qyvek2uGYEnZ/
zek89G3zPd93sB1Rzm6UOdM86KZ32CsfaYeCI2tw0I08HO68ksSu1g7/aIv+
Sa88pF0jVd46Sfjz3D8QGkr0y/Jsf7tuO6TSKbfmEon5V9h9fZRxOz7XSgvF
f8jDkF2Ms6xdO8bKevpStuTDgHnqVei9dmx51/vGYV8+6kOlMpad2+Eh/PEw
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
ae5x8g7D+dUKU/+/4xbjNmG7ziYM/wP5zY1g
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"C(t)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{412.1640625, Automatic},
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 0.9999999795918367}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.678549560744166*^9, {3.678549592336059*^9, 3.678549668530116*^9}, 
   3.678549763524886*^9, 3.6785499217719507`*^9, 3.6785502016857557`*^9, 
   3.678550307186309*^9, 3.6785503975004797`*^9, 3.678550492336996*^9, 
   3.6785505790383873`*^9, 3.678550616806826*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GHMC without Unit Acceptance", "Subsection",
 CellChangeTimes->{{3.678189136793354*^9, 3.678189184204781*^9}, {
   3.6781892999811497`*^9, 3.678189309818619*^9}, {3.678189354691413*^9, 
   3.678189385673601*^9}, {3.678189423202386*^9, 3.6781894299050617`*^9}, {
   3.678192650769865*^9, 3.67819265541558*^9}, {3.678192941379877*^9, 
   3.678192954723619*^9}, 3.67819304705011*^9, {3.67819316213643*^9, 
   3.6781931749514503`*^9}, 3.6782023783077803`*^9, {3.678203847110159*^9, 
   3.678203847326118*^9}}],

Cell["\<\
The following line the inverted form of the Laplace - Transformed \
Autocorrelation function and assigns it to a callable function,\
\>", "Text",
 CellChangeTimes->{{3.678199317504532*^9, 3.678199366017501*^9}, {
   3.6782002100283117`*^9, 3.678200211731779*^9}, 3.678549107157805*^9, {
   3.678549231210799*^9, 3.678549237990143*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"iF", " ", "=", " ", 
   RowBox[{"InverseLaplaceTransform", "[", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{
      "\[Beta]", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", "  ", 
       "\[Rho]", ",", " ", "r"}], "]"}], ",", "\[Beta]", ",", "t"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"CF", "[", 
   RowBox[{
   "t_", ",", " ", "\[Phi]_", ",", " ", "\[Theta]_", ",", "  ", "\[Rho]_", 
    ",", " ", "r_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Evaluate", "[", "iF", "]"}]}]}], "Input",
 CellChangeTimes->{{3.678549239219179*^9, 3.6785492392277412`*^9}}],

Cell["\<\
This equation is rather large and is therefore dumped to a text file. The \
text file should not be opened manually as it will be about 20 MB. It is best \
to clean up manually with python code. The cleaned version is 170 KB and can \
be found in __CmainBody.txt which is evaluated directly in the function expC.\
\
\>", "Text",
 CellChangeTimes->{{3.678549233528633*^9, 3.678549257622505*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<equation.txt\>\"", ",", 
    RowBox[{"ToString", "[", 
     RowBox[{
      RowBox[{"CF", "[", 
       RowBox[{
       "t", ",", " ", "phi", ",", " ", "theta", ",", " ", "pa", ",", " ", 
        "r"}], "]"}], ",", "FortranForm"}], "]"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.678550284989772*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
CellGrouping->Manual,
WindowSize->{922, 851},
WindowMargins->{{0, Automatic}, {Automatic, 23}},
ShowCellTags->True,
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 342, 5, 122, "Text"],
Cell[CellGroupData[{
Cell[947, 31, 210, 4, 51, "Subtitle"],
Cell[1160, 37, 669, 12, 49, "Text"],
Cell[1832, 51, 637, 14, 49, "Text"],
Cell[2472, 67, 214, 6, 28, "Item"]
}, Open  ]]
}, Open  ]],
Cell[2713, 77, 142, 1, 30, "Text"],
Cell[2858, 80, 202, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[3085, 89, 312, 4, 65, "Chapter"],
Cell[3400, 95, 309, 9, 30, "Text"],
Cell[3712, 106, 8627, 245, 241, "Input",
 InitializationCell->True],
Cell[12342, 353, 277, 6, 30, "Text"],
Cell[12622, 361, 2649, 71, 73, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[15296, 436, 223, 3, 44, "Subsection"],
Cell[15522, 441, 180, 4, 30, "Text"],
Cell[15705, 447, 791, 21, 67, "Input"],
Cell[16499, 470, 1686, 49, 59, "Input"],
Cell[18188, 521, 244, 6, 28, "Item"],
Cell[18435, 529, 606, 14, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19078, 548, 98, 1, 64, "Section"],
Cell[19179, 551, 262, 5, 30, "Text"],
Cell[19444, 558, 1465, 37, 57, "Input"],
Cell[20912, 597, 278, 6, 28, "Item"],
Cell[CellGroupData[{
Cell[21215, 607, 825, 15, 28, "Input"],
Cell[22043, 624, 318, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22398, 634, 433, 6, 44, "Subsection"],
Cell[22834, 642, 161, 3, 30, "Text"],
Cell[22998, 647, 1007, 29, 57, "Input"],
Cell[24008, 678, 213, 5, 28, "Item"],
Cell[CellGroupData[{
Cell[24246, 687, 496, 11, 28, "Input"],
Cell[24745, 700, 320, 5, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25138, 713, 191, 6, 65, "Chapter"],
Cell[25332, 721, 529, 10, 68, "Text"],
Cell[25864, 733, 658, 14, 51, "Input"],
Cell[26525, 749, 333, 7, 28, "Item"],
Cell[CellGroupData[{
Cell[26883, 760, 392, 10, 28, "Input"],
Cell[27278, 772, 313, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27628, 782, 223, 3, 44, "Subsection"],
Cell[27854, 787, 180, 4, 30, "Text"],
Cell[28037, 793, 951, 25, 57, "Input"],
Cell[28991, 820, 306, 7, 28, "Item"],
Cell[CellGroupData[{
Cell[29322, 831, 605, 13, 28, "Input"],
Cell[29930, 846, 335, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30302, 856, 224, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[30551, 865, 551, 14, 28, "Input"],
Cell[31105, 881, 20415, 350, 249, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51581, 1238, 348, 5, 64, "Section"],
Cell[51932, 1245, 163, 3, 30, "Text"],
Cell[52098, 1250, 531, 13, 51, "Input"],
Cell[CellGroupData[{
Cell[52654, 1267, 439, 9, 28, "Item"],
Cell[CellGroupData[{
Cell[53118, 1280, 860, 16, 28, "Input"],
Cell[53981, 1298, 313, 5, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54343, 1309, 228, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[54596, 1318, 796, 17, 28, "Input"],
Cell[55395, 1337, 4333, 83, 249, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59777, 1426, 433, 6, 44, "Subsection"],
Cell[60213, 1434, 161, 3, 30, "Text"],
Cell[60377, 1439, 407, 9, 51, "Input"],
Cell[60787, 1450, 273, 7, 28, "Item"],
Cell[CellGroupData[{
Cell[61085, 1461, 438, 10, 28, "Input"],
Cell[61526, 1473, 315, 5, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61914, 1486, 191, 2, 65, "Chapter"],
Cell[62108, 1490, 441, 9, 49, "Text"],
Cell[62552, 1501, 313, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[62890, 1510, 430, 6, 64, "Section"],
Cell[CellGroupData[{
Cell[63345, 1520, 272, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[63642, 1529, 709, 15, 28, "Input"],
Cell[64354, 1546, 282, 6, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64673, 1557, 177, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[64875, 1565, 1050, 23, 46, "Input"],
Cell[65928, 1590, 14130, 243, 260, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80107, 1839, 413, 5, 44, "Subsection"],
Cell[CellGroupData[{
Cell[80545, 1848, 221, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[80791, 1856, 788, 16, 28, "Input"],
Cell[81582, 1874, 398, 8, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82017, 1887, 233, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[82275, 1898, 1066, 22, 28, "Input"],
Cell[83344, 1922, 1818, 42, 247, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[85237, 1972, 303, 4, 44, "Subsection"],
Cell[CellGroupData[{
Cell[85565, 1980, 455, 6, 50, "Section"],
Cell[CellGroupData[{
Cell[86045, 1990, 272, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[86342, 1999, 995, 19, 28, "Input"],
Cell[87340, 2020, 549, 10, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87926, 2035, 214, 3, 30, "Text"],
Cell[88143, 2040, 510, 14, 51, "Input"],
Cell[CellGroupData[{
Cell[88678, 2058, 2200, 51, 97, "Input"],
Cell[90881, 2111, 52389, 873, 278, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143319, 2990, 511, 7, 44, "Subsection"],
Cell[143833, 2999, 345, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[144203, 3009, 605, 16, 46, "Input"],
Cell[144811, 3027, 404, 7, 68, "Text"],
Cell[CellGroupData[{
Cell[145240, 3038, 328, 9, 28, "Input"],
Cell[145571, 3049, 77, 1, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

