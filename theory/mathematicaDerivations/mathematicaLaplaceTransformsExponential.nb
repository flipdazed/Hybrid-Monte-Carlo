(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    676743,      15471]
NotebookOptionsPosition[    662971,      15036]
NotebookOutlinePosition[    663368,      15054]
CellTagsIndexPosition[    663325,      15051]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Autocorrelations for Generalised Hybrid Monte Carlo", \
"Title"]], "Text",
 CellChangeTimes->{
  3.67817938154908*^9, {3.6781794314068117`*^9, 3.6781794685753527`*^9}, {
   3.678179545069066*^9, 3.6781795663555193`*^9}, {3.678193359044594*^9, 
   3.678193366940531*^9}, {3.6781934792035913`*^9, 3.678193536257924*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Quadratic Operators with ",
 StyleBox["Exponentially Distributed",
  FontWeight->"Bold"],
 " Trajectories"
}], "Subtitle",
 CellChangeTimes->{{3.678193507844821*^9, 3.6781935459618053`*^9}, {
  3.6781952473676853`*^9, 3.678195254703648*^9}}],

Cell[TextData[{
 "Based on the paper,",
 StyleBox[" \[OpenCurlyDoubleQuote]Cost of the Generalised Hybrid Monte Carlo \
Algorithm for Free Field Theory\[CloseCurlyDoubleQuote],",
  FontSlant->"Italic"],
 " this notebook contains a Mathematica format for selected equations. The \
aim is to provide a dynamic method of working with the theory."
}], "Text",
 CellChangeTimes->{{3.6781795848660307`*^9, 3.678179667993949*^9}, {
  3.6781796994743423`*^9, 3.6781797254330187`*^9}, {3.6781797613084507`*^9, 
  3.67817984330331*^9}, {3.678179910966352*^9, 3.678179942436851*^9}, {
  3.678179976124398*^9, 3.678179976805286*^9}, {3.67818943346625*^9, 
  3.678189440593206*^9}}],

Cell[TextData[{
 "The paper provides the ",
 StyleBox["Laplace Transform",
  FontWeight->"Bold"],
 " of the autocorrelations which will be denoted by ",
 StyleBox["F[...]", "Code"],
 " where \[Beta] is the Laplace transformed time, ",
 StyleBox["t",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.6781800559197083`*^9, 3.67818014398647*^9}, {
  3.67818024207262*^9, 3.678180271767714*^9}, {3.678180304351842*^9, 
  3.678180474244748*^9}, {3.678180537756089*^9, 3.678180671985888*^9}, {
  3.678189441913189*^9, 3.678189514879827*^9}, {3.67818955822323*^9, 
  3.678189561815913*^9}, {3.678189592726706*^9, 3.678189592838373*^9}}],

Cell[TextData[{
 " ",
 StyleBox["Unless explicitly stated, all equations are in Laplace Transformed \
format",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.6781895164261417`*^9, 3.6781895409514837`*^9}}]
}, Open  ]],

Cell["Throughout the plots, the following parameters will be used:", "Text",
 CellChangeTimes->{{3.678200991843731*^9, 3.678201038136747*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Tau]", ",", "r", ",", "\[Phi]", ",", "\[Theta]", ",", "\[Rho]", ",", 
    " ", "tf", ",", " ", "steps", ",", " ", "dtau", ",", " ", "traj", ",", 
    " ", "rate", ",", " ", "j", " ", ",", " ", "k", ",", " ", "\[Mu]", ",", 
    " ", "\[Nu]", ",", " ", "pacc"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", " ", 
   RowBox[{
   "F", ",", " ", "rawF", ",", " ", "Funit", ",", " ", "FHMC", ",", " ", 
    "FHMCunit"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "iF", ",", " ", "iFunit", ",", "iFHMC", ",", " ", "iFHMCunit", ",", 
    "iFHMC", ",", " ", "iFHMCunit"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"A", ",", " ", "Aunit", ",", " ", "AHMC", ",", " ", "AHMCunit"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"CF", ",", " ", "CFunit", ",", " ", "CHMC", ",", " ", "CHMCunit"}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"Cunit", ",", " ", "Cunitn"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "CFn", ",", " ", "CFunitn", ",", " ", "CHMCn", ",", " ", "CHMCunitn"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "tmp0", ",", " ", "tmp1", ",", " ", "tmp2", ",", " ", "hmcTmp2", ",", " ", 
    "hmcTmp"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "a0", ",", " ", "a1", ",", " ", "a2", ",", " ", "a3", ",", " ", "a4", ",", 
    " ", "a5", ",", " ", "a6", ",", " ", "a7", ",", " ", "a8", ",", " ", 
    "a9"}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6782010355311728`*^9, 3.678201040920895*^9}, 
   3.67854979537468*^9, {3.678717695639628*^9, 3.6787177157110243`*^9}, {
   3.678717764870552*^9, 3.67871779306749*^9}, {3.678718207207212*^9, 
   3.678718207324728*^9}, 3.678718239885303*^9, {3.678718571744549*^9, 
   3.678718591533174*^9}, {3.678718654149425*^9, 3.678718745271521*^9}, {
   3.678718892333974*^9, 3.678718939427335*^9}, {3.678720601600732*^9, 
   3.678720601818578*^9}, {3.6787207234221163`*^9, 3.678720723523795*^9}, {
   3.678729926389674*^9, 3.678729926627783*^9}, {3.678732711095449*^9, 
   3.678732711253034*^9}, {3.678733001356915*^9, 3.678733001836149*^9}, {
   3.6788300576111937`*^9, 3.6788301166483583`*^9}, {3.678833580580124*^9, 
   3.67883358160006*^9}, {3.6788336344129133`*^9, 3.678833640322474*^9}, {
   3.678833696784812*^9, 3.6788337662531347`*^9}, {3.678833936321987*^9, 
   3.678833967776429*^9}, {3.678931614165484*^9, 3.678931673857102*^9}, {
   3.679070362237768*^9, 3.679070362738873*^9}, {3.679096018250813*^9, 
   3.679096019210874*^9}, {3.679096381489421*^9, 3.6790963816423883`*^9}}],

Cell["\<\
Derivation of Laplace Transformed GHMC Autocorrelation Function\
\>", "Chapter",
 CellChangeTimes->{{3.678181358024951*^9, 3.678181374482401*^9}, {
   3.6781815082853403`*^9, 3.6781815092288857`*^9}, {3.678192522794112*^9, 
   3.678192523049375*^9}, 3.6781925655616407`*^9, {3.678192832420581*^9, 
   3.678192833568637*^9}, {3.6788222867258863`*^9, 3.678822317990271*^9}, {
   3.678827411750813*^9, 3.6788274881801033`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "B", ",", " ", "g", ",", " ", "gp", ",", " ", "gm", ",", " ", "gp20", ",", 
    " ", "gm00", ",", " ", "gp11", ",", " ", "gp02"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "gn0", ",", " ", "gn1", ",", " ", "gn2", ",", " ", "gn3", ",", " ", "gd0", 
    ",", " ", "gd1", ",", " ", "gd2", ",", " ", "gd3"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"fG", ",", " ", "fGHMC"}], "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.67908085267892*^9, 3.679080859234372*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "The following functions ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["G", "+"], TraditionalForm]]],
 " (",
 StyleBox["gp", "Code"],
 ") and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["G", "-"], TraditionalForm]]],
 " (",
 StyleBox["gm", "Code"],
 ") are defined for the exponentially distributed trajectories as,"
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.678822320301816*^9, 3.6788223478535013`*^9}, {
  3.678822407431609*^9, 3.678822417767671*^9}, {3.67882261637894*^9, 
  3.6788227548713903`*^9}, {3.678823916740828*^9, 3.678823922491276*^9}, {
  3.678824774415885*^9, 3.678824783228941*^9}, {3.678827176524753*^9, 
  3.678827252713022*^9}, {3.678827324972301*^9, 3.678827335465375*^9}, {
  3.678827580266521*^9, 3.678827591392871*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"B", "[", "k_", "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"IntegerQ", "[", 
      RowBox[{"k", "/", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", " ", "\[Tau]"}], "+", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"j", "+", "k", "-", 
        RowBox[{"2", " ", "\[Mu]"}], " ", "-", " ", 
        RowBox[{"2", " ", "\[Nu]"}]}], ")"}], "\[Phi]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", " ", "[", 
    RowBox[{"j_", ",", "k_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Binomial", "[", 
         RowBox[{"j", ",", "\[Mu]"}], "]"}], "  ", 
        RowBox[{"Binomial", "[", 
         RowBox[{"k", ",", "\[Nu]"}], "]"}], 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", "2"], ")"}], 
           RowBox[{"j", "+", "k"}]], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"\[Nu]", "+", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "2"], "k"}], ")"}]}]], 
          RowBox[{"B", "[", "k", "]"}]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Beta]", " ", "\[Tau]"}], "+", "1"}], ")"}], "2"], "+", 
          RowBox[{
           SuperscriptBox["\[Phi]", "2"], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"j", "+", "k", "-", 
              RowBox[{"2", "\[Mu]"}], "-", 
              RowBox[{"2", "\[Nu]"}]}], ")"}], "2"]}]}]]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Nu]", ",", " ", "0", ",", " ", "k"}], "}"}]}], "]"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", " ", "0", ",", " ", "j"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"gp", "[", 
    RowBox[{"j_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
   RowBox[{"\[Rho]", "  ", 
    RowBox[{"g", "[", " ", 
     RowBox[{"j", ",", "k"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gm", "[", 
    RowBox[{"j_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Rho]"}], ")"}], 
    RowBox[{"g", "[", 
     RowBox[{"j", ",", "k"}], "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6788247856780767`*^9, 3.678824826682672*^9}, {
   3.678824858437647*^9, 3.678824859644261*^9}, {3.6788248914077797`*^9, 
   3.67882491839616*^9}, {3.6788249501646*^9, 3.6788249661783743`*^9}, {
   3.678825218344473*^9, 3.678825220575226*^9}, {3.678825681397854*^9, 
   3.6788257059488363`*^9}, {3.678826407934886*^9, 3.678826414929022*^9}, {
   3.6788266188062*^9, 3.6788266191738873`*^9}, {3.678826678371067*^9, 
   3.678827035130293*^9}, {3.678827070652335*^9, 3.678827099859428*^9}, {
   3.678827161422243*^9, 3.678827187035804*^9}, {3.678827575034686*^9, 
   3.678827577625759*^9}, {3.6788276218874207`*^9, 3.678827736202661*^9}, {
   3.678827773323975*^9, 3.6788277751475677`*^9}, {3.678827891152993*^9, 
   3.678827904494985*^9}, {3.678827959196834*^9, 3.6788279632346888`*^9}, {
   3.6788279954638577`*^9, 3.678827996999329*^9}, {3.678830026650957*^9, 
   3.678830027922841*^9}, {3.678830457867765*^9, 3.678830469753937*^9}, {
   3.678831115683155*^9, 3.678831142020903*^9}, {3.678831924929502*^9, 
   3.6788319420568438`*^9}, {3.678831978641245*^9, 3.678832005406542*^9}, {
   3.6788320563230143`*^9, 3.6788320954328213`*^9}, {3.6788322422250023`*^9, 
   3.678832245408866*^9}, {3.678832343131654*^9, 3.6788323448643703`*^9}, {
   3.678833168938674*^9, 3.6788331707773647`*^9}, {3.678833247646604*^9, 
   3.678833256652747*^9}, {3.67883338040521*^9, 3.678833381515341*^9}, {
   3.678833466934928*^9, 3.678833553671253*^9}, {3.678833591509419*^9, 
   3.678833656035613*^9}, {3.6788338168251457`*^9, 3.678833819391407*^9}, {
   3.678833930146521*^9, 3.6788339309780807`*^9}, {3.678834037024705*^9, 
   3.678834065965961*^9}, {3.67883411066689*^9, 3.6788341241993*^9}, {
   3.678834249769265*^9, 3.6788342515532503`*^9}, 3.678834390185989*^9, {
   3.67907006508247*^9, 3.679070074598337*^9}, {3.67907027727837*^9, 
   3.679070277580674*^9}, {3.679070492350788*^9, 3.6790705013216963`*^9}, 
   3.679070980859769*^9, {3.679075005893673*^9, 3.679075020381485*^9}, {
   3.679075465803667*^9, 3.679075467857976*^9}, {3.6790754997605343`*^9, 
   3.6790755059595346`*^9}, {3.679080252563862*^9, 3.679080256619046*^9}, {
   3.6790807598241796`*^9, 3.679080760879868*^9}, {3.679083615564337*^9, 
   3.679083615874762*^9}, {3.679083663015572*^9, 3.679083675718745*^9}, {
   3.679085002339489*^9, 3.67908500269093*^9}}],

Cell["\<\
and are used to populate the following equations to obtain the Laplace \
Tranformed autocorrelation functions. 
The general case is given by populating,\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.6788271637708406`*^9, 3.678827164028417*^9}, {
  3.678827215549466*^9, 3.678827223858073*^9}, {3.6788272554011297`*^9, 
  3.678827312234812*^9}, {3.6788273893516893`*^9, 3.6788273920475883`*^9}, {
  3.678827541378449*^9, 3.678827566225526*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gp20", "=", " ", 
   RowBox[{"gp", "[", 
    RowBox[{"2", ",", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gm00", " ", "=", " ", 
   RowBox[{"gm", "[", 
    RowBox[{"0", ",", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gp11", " ", "=", " ", 
   RowBox[{"gp", "[", 
    RowBox[{"1", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gp02", " ", "=", " ", 
   RowBox[{"gp", "[", 
    RowBox[{"0", ",", "2"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.678828117733069*^9, 3.678828200162051*^9}, {
   3.678830473978902*^9, 3.6788304779048*^9}, {3.6788305480618896`*^9, 
   3.67883058630945*^9}, {3.6788306271795177`*^9, 3.6788306696780043`*^9}, {
   3.678831032440515*^9, 3.678831062501285*^9}, {3.67907093503688*^9, 
   3.6790709385725183`*^9}, {3.679070973820757*^9, 3.679070974747223*^9}, {
   3.679080728907597*^9, 3.6790807320806437`*^9}, 3.679080843085033*^9, {
   3.679082042399*^9, 3.6790820449354553`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gn0", ":=", 
   RowBox[{"gp20", "+", "gm00"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gn1", ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"gp20", "^", "2"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"gp11", "^", "2"}]}], "+", 
    RowBox[{"gp02", " ", "gm00"}], "+", 
    RowBox[{"gp02", " ", "gp20"}], "+", 
    RowBox[{"gm00", "^", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gn2", ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"gp20", "-", "gp02", "+", "gm00"}], ")"}]}], " ", 
    RowBox[{"(", 
     RowBox[{"gm00", "+", "gp20", "+", "gp02"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gn3", ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"gm00", "+", "gp20", "+", "gp02"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"gp20", "^", "2"}], "-", 
      RowBox[{"2", " ", "gp02", " ", "gp20"}], "+", 
      RowBox[{"gp02", "^", "2"}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"gp11", "^", "2"}]}], "-", 
      RowBox[{"gm00", "^", "2"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gd0", ":=", 
   RowBox[{"1", "-", "gm00", "-", "gp20"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gd1", ":=", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"gp02", " ", "gm00"}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"gp11", "^", "2"}]}], "+", 
      RowBox[{"gm00", "^", "2"}], "+", 
      RowBox[{"gp20", " ", "gp02"}], "-", "gm00", "+", "gp20", "-", 
      RowBox[{"gp20", "^", "2"}], "-", "gp02"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gd2", ":=", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"gp20", "^", "2"}]}], "+", "gm00", "-", 
      RowBox[{"2", " ", "gp20", " ", "gm00"}], "+", 
      RowBox[{"gp02", "^", "2"}], "-", 
      RowBox[{"gm00", "^", "2"}], "+", "gp20"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gd3", ":=", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"gp11", "^", "2"}]}], "-", 
    RowBox[{"gp02", "^", "3"}], "-", 
    RowBox[{"4", " ", 
     RowBox[{"gp11", "^", "2"}], " ", "gm00"}], "+", 
    RowBox[{"gp02", " ", 
     RowBox[{"gp20", "^", "2"}]}], "-", 
    RowBox[{"gp02", " ", "gp20"}], "+", 
    RowBox[{
     RowBox[{"gp02", "^", "2"}], " ", "gp20"}], "-", 
    RowBox[{"gp02", " ", "gm00"}], "+", 
    RowBox[{"gp20", " ", 
     RowBox[{"gm00", "^", "2"}]}], "-", 
    RowBox[{"gp20", "^", "3"}], "+", 
    RowBox[{"gp20", "^", "2"}], "-", 
    RowBox[{"gm00", "^", "2"}], "-", 
    RowBox[{"4", " ", "gp20", " ", 
     RowBox[{"gp11", "^", "2"}]}], "-", 
    RowBox[{
     RowBox[{"gp20", "^", "2"}], " ", "gm00"}], "-", 
    RowBox[{"4", " ", 
     RowBox[{"gp11", "^", "2"}], " ", "gp02"}], "+", 
    RowBox[{"gp02", " ", 
     RowBox[{"gm00", "^", "2"}]}], "-", 
    RowBox[{
     RowBox[{"gp02", "^", "2"}], " ", "gm00"}], "+", 
    RowBox[{"gm00", "^", "3"}], "+", 
    RowBox[{"2", " ", "gp02", " ", "gp20", " ", "gm00"}]}]}], ";"}]}], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.678828253542272*^9, 3.678828401892552*^9}, {
  3.6788284434097853`*^9, 3.6788284742572536`*^9}, {3.678828540240038*^9, 
  3.6788288861337852`*^9}, {3.6788305352710657`*^9, 3.6788305425116987`*^9}, {
  3.678830601315806*^9, 3.678830658966031*^9}, {3.6788308303661327`*^9, 
  3.678830866986247*^9}, {3.678830980498481*^9, 3.678831023887747*^9}, {
  3.6788310906440897`*^9, 3.6788310973155622`*^9}, {3.678832277969808*^9, 
  3.678832296556327*^9}, {3.679080700527231*^9, 3.679080704698041*^9}, {
  3.679080808784143*^9, 3.67908081669324*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fG", "[", 
   RowBox[{
   "\[Beta]_", ",", " ", "\[Phi]_", ",", " ", "\[Theta]_", ",", "\[Rho]_", 
    ",", " ", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   FractionBox[
    RowBox[{"gn0", "+", 
     RowBox[{"gn1", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", "+", " ", 
     RowBox[{"gn2", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
     RowBox[{"gn3", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}]}], 
    RowBox[{"gd0", "+", 
     RowBox[{"gd1", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"gd2", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", " ", 
     RowBox[{"gd3", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}]}]], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6788275684872*^9, 3.67882761768522*^9}, {
  3.678827757374064*^9, 3.6788277698524237`*^9}, {3.6788280292150793`*^9, 
  3.678828090810761*^9}, {3.678828133744852*^9, 3.678828295481037*^9}, {
  3.678828409514818*^9, 3.678828534439883*^9}, {3.679070790698838*^9, 
  3.679070795552301*^9}, {3.6790807224844427`*^9, 3.6790807230809717`*^9}, {
  3.679080804297475*^9, 3.67908080678179*^9}, {3.6790809739845047`*^9, 
  3.6790809745009937`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["HMC Condition", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.678827398605946*^9, 3.678827401615584*^9}, {
  3.67882749497199*^9, 3.678827500801009*^9}}],

Cell["The HMC case is given by,", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.6788275060036993`*^9, 3.6788275240042*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fGHMC", "[", 
   RowBox[{
   "\[Beta]_", ",", " ", "\[Phi]_", ",", "\[Rho]_", ",", " ", "\[Tau]_"}], 
   "]"}], " ", ":=", 
  RowBox[{"Evaluate", "[", 
   FractionBox[
    RowBox[{"gp20", " ", "+", " ", "gm00"}], 
    RowBox[{"1", "-", "gp20", " ", "-", " ", "gm00"}]], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.678827374929203*^9, 3.678827382080018*^9}, {
  3.678828978389965*^9, 3.678829006306101*^9}, {3.6788306271656227`*^9, 
  3.678830644848837*^9}, {3.678831205402739*^9, 3.67883121593221*^9}, {
  3.6790864177528477`*^9, 3.6790864203401413`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Laplace Transformed GHMC Autocorrelation Function", "Chapter",
 CellChangeTimes->{{3.678181358024951*^9, 3.678181374482401*^9}, {
   3.6781815082853403`*^9, 3.6781815092288857`*^9}, {3.678192522794112*^9, 
   3.678192523049375*^9}, 3.6781925655616407`*^9, {3.678192832420581*^9, 
   3.678192833568637*^9}}],

Cell[TextData[{
 "The form is exceedingly long and so has been broken apart into testable \
segments specified by ",
 StyleBox["a", "Code"],
 StyleBox["n", "Code",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["[...]", "Code"],
 ","
}], "Text",
 CellChangeTimes->{{3.6781895649144287`*^9, 3.678189581606763*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a0", "[", 
   RowBox[{"\[Theta]_", ",", "\[Rho]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", "\[Rho]"}]}], ")"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   "4"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a1", "[", 
   RowBox[{"\[Theta]_", ",", "\[Rho]_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", "\[Rho]"}]}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "-", 
   RowBox[{"3", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "-", 
      RowBox[{"6", "\[Rho]"}]}], ")"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   "6"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a2", "[", 
   RowBox[{"\[Theta]_", ",", "\[Rho]_", ",", " ", "\[Phi]_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", "\[Rho]"}], "-", "2"}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"2", "\[Rho]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[Rho]", "-", "2"}], ")"}], 
       SuperscriptBox["\[Phi]", "2"]}], "+", "3", "-", 
      RowBox[{"6", "\[Rho]"}]}], ")"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", "\[Rho]"}], "-", "4"}], ")"}], 
       SuperscriptBox["\[Phi]", "2"]}], "-", "3"}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"8", "-", 
      RowBox[{"4", "\[Rho]"}]}], ")"}], 
    SuperscriptBox["\[Phi]", "2"]}], "+", "4"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a3", "[", 
   RowBox[{"\[Theta]_", ",", "\[Rho]_", ",", " ", "\[Phi]_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", "\[Rho]"}], "-", "2"}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"4", "-", 
         RowBox[{"4", "\[Rho]"}]}], ")"}], 
       SuperscriptBox["\[Phi]", "2"]}], "+", "3", "-", 
      RowBox[{"6", "\[Rho]"}]}], ")"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "\[Rho]"}], "-", "4"}], ")"}], 
       SuperscriptBox["\[Phi]", "2"]}], "-", "3"}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"8", "+", 
      RowBox[{"2", "\[Rho]"}]}], ")"}], 
    SuperscriptBox["\[Phi]", "2"]}], "+", "4"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a4", "[", 
   RowBox[{"\[Theta]_", ",", "\[Rho]_", ",", " ", "\[Phi]_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}], "2"], 
       SuperscriptBox["\[Phi]", "2"]}], "-", "1", "+", 
      RowBox[{"2", "\[Rho]"}]}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", "\[Rho]"}], "-", "4"}], ")"}], 
       SuperscriptBox["\[Phi]", "2"]}], "-", "1"}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"2", "\[Rho]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[Rho]", "-", "2"}], ")"}], 
       SuperscriptBox["\[Phi]", "2"]}], "+", "1", " ", "-", 
      RowBox[{"2", "\[Rho]"}]}], ")"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", "-", 
      RowBox[{"2", "\[Rho]"}]}], ")"}], 
    SuperscriptBox["\[Phi]", "2"]}], "+", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a5", "[", 
   RowBox[{"\[Theta]_", ",", "\[Rho]_", ",", " ", "\[Phi]_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"2", "\[Rho]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"\[Rho]", "-", "2"}], ")"}], 
       SuperscriptBox["\[Phi]", "2"]}], "-", "1", "+", 
      RowBox[{"2", "\[Rho]"}]}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], 
       SuperscriptBox["\[Phi]", "2"]}], "-", "1"}], ")"}], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "\[Rho]"}], "-", "4"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}], 
       SuperscriptBox["\[Phi]", "2"]}], "+", "1", "-", 
      RowBox[{"2", "\[Rho]"}]}], ")"}], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", "\[Rho]"}], "+", "4"}], ")"}], 
    SuperscriptBox["\[Phi]", "2"]}], "+", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a6", "[", 
   RowBox[{"\[Theta]_", ",", "\[Rho]_", ",", " ", "\[Phi]_"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"2", "\[Rho]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}], 
    SuperscriptBox["\[Phi]", "2"], 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"]}], "-", 
   RowBox[{"2", 
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "\[Rho]", " ", 
    SuperscriptBox["\[Phi]", "2"]}], " ", "-", " ", 
   RowBox[{"2", "\[Rho]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], " ", "+", " ", "\[Rho]"}], ")"}], 
    SuperscriptBox["\[Phi]", "2"], 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{"2", "\[Rho]", " ", 
    SuperscriptBox["\[Phi]", "2"]}]}]}], "\[LineSeparator]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6781705993977413`*^9, 3.678170723924141*^9}, {
   3.678170784707287*^9, 3.6781707848671637`*^9}, {3.678170879795224*^9, 
   3.6781708801535873`*^9}, {3.6781710022319*^9, 3.678171361003139*^9}, {
   3.678171427258727*^9, 3.678171603270768*^9}, {3.678171670925613*^9, 
   3.678171789835837*^9}, {3.678171853460781*^9, 3.6781719703231564`*^9}, {
   3.678172024274287*^9, 3.67817213862227*^9}, {3.678172231453321*^9, 
   3.678172261750602*^9}, 3.678172312291767*^9, {3.678172466889328*^9, 
   3.6781724752122517`*^9}, {3.678176070777915*^9, 3.678176125483067*^9}, {
   3.6781761680737963`*^9, 3.678176304014147*^9}, {3.6781763517114983`*^9, 
   3.678176441940083*^9}, {3.678176522995295*^9, 3.6781765275225983`*^9}, {
   3.678176644664815*^9, 3.678176701105344*^9}, {3.6781768956529818`*^9, 
   3.678177105443372*^9}, {3.678177143747411*^9, 3.678177211507164*^9}, {
   3.678177266850424*^9, 3.678177309737246*^9}, {3.678177476716489*^9, 
   3.678177536774128*^9}, 3.678177676043185*^9, {3.678177724866435*^9, 
   3.678177730324374*^9}, {3.678177863457358*^9, 3.678178033667737*^9}, {
   3.6781781424977303`*^9, 3.678178310992465*^9}, {3.67817836326357*^9, 
   3.6781783810411053`*^9}, {3.678178425367749*^9, 3.6781784255343857`*^9}, {
   3.678178485423057*^9, 3.6781786180511827`*^9}, {3.67817865211693*^9, 
   3.678178654595337*^9}, {3.6781788661518793`*^9, 3.678178962189233*^9}, {
   3.6781789989271383`*^9, 3.678179005731943*^9}, {3.678179177145434*^9, 
   3.678179178580381*^9}, {3.678179872319964*^9, 3.678179904278742*^9}, {
   3.67818000328503*^9, 3.67818001834373*^9}, {3.678182317225333*^9, 
   3.678182336111772*^9}, {3.678183974672194*^9, 3.67818397500705*^9}, {
   3.6781861992600822`*^9, 3.678186199499769*^9}, {3.6781871041160393`*^9, 
   3.678187148135289*^9}, {3.6781917965891*^9, 3.678191796983512*^9}, 
   3.678191845517189*^9, 3.678192268330546*^9}],

Cell["\<\
The Laplace Transform of the autocorrelation for quadratic operators is given \
by,\
\>", "Text",
 CellChangeTimes->{{3.678180148754225*^9, 3.6781802284485273`*^9}, {
  3.678181104003924*^9, 3.678181126291298*^9}, {3.6781813559358892`*^9, 
  3.6781813564958344`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{
   "\[Beta]_", ",", " ", "\[Phi]_", ",", " ", "\[Theta]_", ",", " ", 
    "\[Rho]_", ",", " ", "r_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"r", " ", 
      SuperscriptBox["\[Beta]", "4"]}], "+", 
     RowBox[{
      RowBox[{"a0", "[", 
       RowBox[{"\[Theta]", ",", "\[Rho]"}], "]"}], 
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox["\[Beta]", "3"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a1", "[", 
         RowBox[{"\[Theta]", ",", "\[Rho]"}], "]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"4", "-", 
           RowBox[{"2", "\[Rho]"}]}], ")"}], 
         SuperscriptBox["\[Phi]", "2"]}]}], ")"}], 
      SuperscriptBox["r", "3"], 
      SuperscriptBox["\[Beta]", "2"]}], " ", "+", 
     RowBox[{
      RowBox[{"a2", "[", 
       RowBox[{"\[Theta]", ",", "\[Rho]", ",", " ", "\[Phi]"}], "]"}], 
      SuperscriptBox["r", "4"], "\[Beta]"}], "+", 
     RowBox[{
      RowBox[{"a4", "[", 
       RowBox[{"\[Theta]", ",", "\[Rho]", ",", " ", "\[Phi]"}], "]"}], 
      SuperscriptBox["r", "5"]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Beta]", "5"], "+", 
     RowBox[{
      RowBox[{"a0", "[", 
       RowBox[{"\[Theta]", ",", "\[Rho]"}], "]"}], "r", " ", 
      SuperscriptBox["\[Beta]", "4"]}], "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a1", "[", 
         RowBox[{"\[Theta]", ",", "\[Rho]"}], "]"}], "+", 
        RowBox[{"4", 
         SuperscriptBox["\[Phi]", "2"]}]}], ")"}], 
      SuperscriptBox["r", "2"], 
      SuperscriptBox["\[Beta]", "3"]}], " ", "+", 
     RowBox[{
      RowBox[{"a3", "[", 
       RowBox[{"\[Theta]", ",", "\[Rho]", ",", " ", "\[Phi]"}], "]"}], 
      SuperscriptBox["r", "3"], 
      SuperscriptBox["\[Beta]", "2"]}], "+", " ", 
     RowBox[{
      RowBox[{"a5", "[", 
       RowBox[{"\[Theta]", ",", "\[Rho]", ",", " ", "\[Phi]"}], "]"}], 
      SuperscriptBox["r", "4"], "\[Beta]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"a6", "[", 
       RowBox[{"\[Theta]", ",", "\[Rho]", ",", " ", "\[Phi]"}], "]"}], 
      SuperscriptBox["r", "5"]}]}], ")"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6781786578668623`*^9, 3.6781786588351517`*^9}, {
   3.678178730873884*^9, 3.678178739020939*^9}, {3.678178873753688*^9, 
   3.678178880769476*^9}, 3.678178925583243*^9, {3.678178981678124*^9, 
   3.678179155594836*^9}, {3.678179236026767*^9, 3.678179247312392*^9}, 
   3.6781814102544327`*^9, {3.6781823465845757`*^9, 3.6781823580104094`*^9}, 
   3.67818700236744*^9}],

Cell[CellGroupData[{

Cell["Unit Acceptance", "Subsection",
 CellChangeTimes->{{3.678188585872508*^9, 3.678188600837685*^9}, {
   3.678189387441862*^9, 3.678189419441227*^9}, 3.678192560960918*^9, {
   3.678192926500181*^9, 3.6781929313712*^9}}],

Cell["\<\
Under unit acceptance, \[Rho]=1 the Laplace Transformed Autocorrelation is \
given by,\
\>", "Text",
 CellChangeTimes->{{3.6781885889962473`*^9, 3.6781886478131866`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"a7", "[", "\[Theta]_", "]"}], ":=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", "2", "-", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"a8", "[", "\[Theta]_", "]"}], ":=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], "-", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "-", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", "1"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.678188931825486*^9, 3.678188946994108*^9}, {
   3.6781889951758633`*^9, 3.6781890126878653`*^9}, 3.678189864251596*^9, 
   3.6781922878644333`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Funit", "[", 
   RowBox[{
   "\[Beta]_", ",", " ", "\[Phi]_", ",", " ", "\[Theta]_", ",", " ", "r_"}], 
   "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Beta]", "2"], "r"}], "+", " ", 
    RowBox[{"\[Beta]", " ", 
     SuperscriptBox["r", "2"], 
     RowBox[{"a7", "[", "\[Theta]", "]"}]}], " ", "+", 
    RowBox[{
     SuperscriptBox["r", "3"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], "-", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "-", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
       RowBox[{"2", 
        SuperscriptBox["\[Phi]", "2"]}], "+", "1"}], ")"}]}]}], 
   RowBox[{
    SuperscriptBox["\[Beta]", "3"], "+", 
    RowBox[{
     SuperscriptBox["\[Beta]", "2"], "r", " ", 
     RowBox[{"a7", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"\[Beta]", " ", 
     SuperscriptBox["r", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a8", "[", "\[Theta]", "]"}], "+", 
       RowBox[{"4", 
        SuperscriptBox["\[Phi]", "2"]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["r", "3"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
        SuperscriptBox["\[Phi]", "2"]}], "+", 
       RowBox[{"2", 
        SuperscriptBox["\[Phi]", "2"]}]}], ")"}]}]}]]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.678188649425643*^9, 3.678188980248062*^9}, {
  3.678189021040278*^9, 3.6781890327288*^9}, {3.6781890745354137`*^9, 
  3.678189117271049*^9}, {3.67854980941556*^9, 3.678549812438047*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["HMC Condition", "Section",
 CellChangeTimes->{{3.678192970072377*^9, 3.678192995386291*^9}}],

Cell["\<\
The GHMC form can be verified by comparing to the HMC form given below,\
\>", "Text",
 CellChangeTimes->{{3.678181420354692*^9, 3.678181433160824*^9}, {
  3.6781814846050167`*^9, 3.67818150174854*^9}, {3.678181536347907*^9, 
  3.6781816037396717`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FHMC", "[", 
   RowBox[{"\[Beta]_", ",", "\[Phi]_", ",", " ", "\[Rho]_", ",", " ", "r_"}], 
   "]"}], ":=", " ", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Beta]", "2"], "r"}], "+", " ", 
    RowBox[{"2", 
     SuperscriptBox["r", "2"], " ", "\[Beta]"}], " ", "+", "  ", 
    RowBox[{
     SuperscriptBox["\[Phi]", "2"], 
     RowBox[{"(", 
      RowBox[{"4", "-", 
       RowBox[{"2", "\[Rho]"}]}], ")"}], 
     SuperscriptBox["r", "3"]}], " ", "+", 
    SuperscriptBox["r", "3"]}], 
   RowBox[{
    SuperscriptBox["\[Beta]", "3"], "+", 
    RowBox[{"2", "r", " ", 
     SuperscriptBox["\[Beta]", "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", 
        SuperscriptBox["\[Phi]", "2"]}], "+", "1"}], ")"}], 
     SuperscriptBox["r", "2"], "\[Beta]"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["r", "3"], 
     SuperscriptBox["\[Phi]", "2"], "\[Rho]"}]}]]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.678179501827902*^9, 3.67817951325175*^9}, {
  3.678181917040097*^9, 3.6781819186222754`*^9}, {3.678182821296464*^9, 
  3.67818286364867*^9}, {3.678182900673832*^9, 3.678182907305026*^9}, {
  3.678182940984475*^9, 3.678182985861847*^9}, {3.678183525407305*^9, 
  3.678183545014916*^9}, {3.6781843559467*^9, 3.6781843562562943`*^9}, {
  3.67818803099131*^9, 3.678188034343802*^9}, {3.6781882638373747`*^9, 
  3.6781882657967653`*^9}, {3.678189203133258*^9, 3.678189210196767*^9}}],

Cell[CellGroupData[{

Cell["HMC with Unit Acceptance", "Subsection",
 CellChangeTimes->{{3.678189136793354*^9, 3.678189184204781*^9}, {
   3.6781892999811497`*^9, 3.678189309818619*^9}, {3.678189354691413*^9, 
   3.678189385673601*^9}, {3.678189423202386*^9, 3.6781894299050617`*^9}, {
   3.678192650769865*^9, 3.67819265541558*^9}, {3.678192941379877*^9, 
   3.678192954723619*^9}, 3.67819304705011*^9, {3.67819316213643*^9, 
   3.6781931749514503`*^9}}],

Cell["\<\
The GHMC form can be verified by comparing to the HMC form given below,\
\>", "Text",
 CellChangeTimes->{{3.678189158944501*^9, 3.678189171600021*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FHMCunit", "[", 
   RowBox[{"\[Beta]_", ",", " ", "\[Phi]_", ",", " ", "r_"}], "]"}], " ", ":=", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Beta]", "2"], "r"}], "+", " ", 
    RowBox[{"2", "\[Beta]", " ", 
     SuperscriptBox["r", "2"]}], " ", "+", 
    RowBox[{"2", 
     SuperscriptBox["r", "3"], 
     SuperscriptBox["\[Phi]", "2"]}], "+", 
    SuperscriptBox["r", "3"]}], 
   RowBox[{
    SuperscriptBox["\[Beta]", "3"], "+", 
    RowBox[{"2", 
     SuperscriptBox["\[Beta]", "2"], "r"}], "+", 
    RowBox[{"\[Beta]", " ", 
     SuperscriptBox["r", "2"], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"4", 
        SuperscriptBox["\[Phi]", "2"]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["r", "3"], "2", 
     SuperscriptBox["\[Phi]", "2"]}]}]]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6781891950337152`*^9, 3.678189196653688*^9}, {
  3.678189618695533*^9, 3.678189732557354*^9}, {3.678194223767931*^9, 
  3.678194256447359*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Regular GHMC ",
 StyleBox["Integrated",
  FontSlant->"Italic"],
 " Autocorrelation Function"
}], "Chapter",
 CellChangeTimes->{{3.678192797228715*^9, 3.678192829652664*^9}}],

Cell[TextData[{
 "The integrated autocorrelation for GHMC is obtained by setting \[Beta] = 0 \
for the autocorrelation in Equation (1). As it no longer contains a \
dependancy upon \[Beta], this is also ",
 StyleBox["equivalent to the Inverse Laplace Transform",
  FontWeight->"Bold"],
 " i.e. the non-Transformed Integrated Autocorrelation Function,"
}], "Text",
 CellChangeTimes->{{3.6781842865063543`*^9, 3.678184327593273*^9}, {
  3.678184426585253*^9, 3.678184504309751*^9}, {3.678192844933332*^9, 
  3.678192868132708*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "[", 
   RowBox[{"\[Phi]_", ",", " ", "\[Theta]_", ",", " ", "\[Rho]_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"a4", "[", 
    RowBox[{"\[Theta]", ",", "\[Rho]", ",", " ", "\[Phi]"}], "]"}], 
   RowBox[{"a6", "[", 
    RowBox[{"\[Theta]", ",", "\[Rho]", ",", " ", "\[Phi]"}], 
    "]"}]]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.678184329422174*^9, 3.678184365048195*^9}, {
   3.678184508982873*^9, 3.678184522653902*^9}, {3.6781846080063133`*^9, 
   3.678184627819827*^9}, {3.678184664372088*^9, 3.678184674963822*^9}, {
   3.6781855362939243`*^9, 3.678185543670506*^9}, 3.6781861543024607`*^9, 
   3.678186229627256*^9}],

Cell[CellGroupData[{

Cell["Unit Acceptance", "Subsection",
 CellChangeTimes->{{3.678188585872508*^9, 3.678188600837685*^9}, {
   3.678189387441862*^9, 3.678189419441227*^9}, 3.678192560960918*^9, {
   3.678192926500181*^9, 3.6781929313712*^9}}],

Cell["\<\
Under unit acceptance, \[Rho]=1 the Laplace Transformed Autocorrelation is \
given by,\
\>", "Text",
 CellChangeTimes->{{3.6781885889962473`*^9, 3.6781886478131866`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Aunit", "[", 
   RowBox[{"\[Phi]_", ",", " ", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "3"], "-", 
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "-", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
     RowBox[{"2", 
      SuperscriptBox["\[Phi]", "2"]}], "+", "1"}], 
    RowBox[{"2", 
     SuperscriptBox["\[Phi]", "2"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "-", "1"}], 
      ")"}]}]]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.678188649425643*^9, 3.678188980248062*^9}, {
  3.678189021040278*^9, 3.6781890327288*^9}, {3.6781890745354137`*^9, 
  3.678189117271049*^9}, {3.6781936731756897`*^9, 3.6781936740401707`*^9}, {
  3.678193739543025*^9, 3.678193836293252*^9}, {3.678193880485087*^9, 
  3.678193887429722*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["HMC Condition", "Section",
 CellChangeTimes->{{3.6781846727892313`*^9, 3.678184688611289*^9}, {
  3.6781891858608828`*^9, 3.678189186725843*^9}, {3.6781893679956284`*^9, 
  3.678189372177762*^9}, {3.678192625969808*^9, 3.678192633295753*^9}, {
  3.678192664855691*^9, 3.678192669831728*^9}, {3.678192916755786*^9, 
  3.6781929185232058`*^9}}],

Cell["\<\
The GHMC form can be verified by comparing to the HMC form given below,\
\>", "Text",
 CellChangeTimes->{{3.6781846898401203`*^9, 3.678184702653365*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AHMC", "[", 
   RowBox[{"\[Phi]_", ",", " ", "\[Rho]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"2", "-", "\[Rho]"}], "\[Rho]"], "+", 
   FractionBox["1", 
    RowBox[{"2", "\[Rho]", " ", 
     SuperscriptBox["\[Phi]", "2"]}]]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.678184718045204*^9, 3.678184782737692*^9}, {
   3.678185586573646*^9, 3.678185587412859*^9}, 3.678186473439444*^9, {
   3.6781866221170797`*^9, 3.678186639965098*^9}, {3.678189241133733*^9, 
   3.678189241388253*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["HMC with Unit Acceptance", "Subsection",
 CellChangeTimes->{{3.678189136793354*^9, 3.678189184204781*^9}, {
   3.6781892999811497`*^9, 3.678189309818619*^9}, {3.678189354691413*^9, 
   3.678189385673601*^9}, {3.678189423202386*^9, 3.6781894299050617`*^9}, {
   3.678192650769865*^9, 3.67819265541558*^9}, {3.678192941379877*^9, 
   3.678192954723619*^9}, 3.67819304705011*^9, {3.67819316213643*^9, 
   3.6781931749514503`*^9}}],

Cell["\<\
The GHMC form can be verified by comparing to the HMC form given below,\
\>", "Text",
 CellChangeTimes->{{3.678189158944501*^9, 3.678189171600021*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AHMCunit", "[", "\[Phi]_", "]"}], " ", ":=", 
  RowBox[{"1", "+", 
   FractionBox["1", 
    RowBox[{"2", 
     SuperscriptBox["\[Phi]", "2"]}]]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6781891950337152`*^9, 3.678189196653688*^9}, {
  3.678189618695533*^9, 3.678189732557354*^9}, {3.6781941389541616`*^9, 
  3.678194171223886*^9}, {3.678194236175281*^9, 3.678194238239064*^9}}],

Cell[TextData[{
 StyleBox["Check",
  FontWeight->"Bold"],
 " This should be equal to Equation (1) for \[Theta]=\[Pi]/2, \[Beta]=0 and \
\[Rho]=1:"
}], "Item",
 CellChangeTimes->{{3.678192351309095*^9, 3.678192404668195*^9}, {
  3.678194177306016*^9, 3.678194196129973*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"AHMCunit", "[", "\[Phi]", "]"}], "==", 
   RowBox[{"F", "[", 
    RowBox[{"0", ",", " ", "\[Phi]", ",", " ", 
     RowBox[{"\[Pi]", "/", "2"}], ",", " ", "1", ",", " ", "r"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.678192413284155*^9, 3.678192429675375*^9}, {
  3.67819420307263*^9, 3.67819421356738*^9}, {3.6781943353903103`*^9, 
  3.6781943501413183`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.67819617792083*^9, 3.6781962845571327`*^9, 3.678196339774654*^9, {
   3.678203629048337*^9, 3.6782036514955597`*^9}, 3.678206138787676*^9, 
   3.6782066922077513`*^9, 3.678221470875648*^9, 3.678435993503922*^9, 
   3.678465518013588*^9, 3.678550003789514*^9, 3.678716422412225*^9, 
   3.678717079876396*^9, 3.678717724788439*^9, 3.678717937074174*^9, 
   3.6787180569161463`*^9, 3.678718218961405*^9, 3.67871857744347*^9, {
   3.678718926552218*^9, 3.678718948495696*^9}, 3.67871911408613*^9, 
   3.678720606635673*^9, 3.67872076032204*^9, 3.6787299320268993`*^9, 
   3.6787327153917503`*^9, {3.678732988289691*^9, 3.678733008427595*^9}, 
   3.678825396321085*^9, 3.678835346402027*^9, 3.678835519712607*^9, 
   3.678939328959399*^9, 3.679061104643959*^9, 3.6790669044940977`*^9, 
   3.6790701956645327`*^9, 3.679071199007011*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inverse Laplace Transforms: Regular GHMC Autocorrelations", "Chapter",
 CellChangeTimes->{{3.678192797228715*^9, 3.678192829652664*^9}, {
  3.678194906468748*^9, 3.678194962684761*^9}}],

Cell[TextData[{
 "Inverting the autocorrelation functions gets ",
 StyleBox["very",
  FontSlant->"Italic"],
 " messy and so starting in reverse order now makes more sense, leaving the \
most complicated for last."
}], "Text",
 CellChangeTimes->{{3.6781842865063543`*^9, 3.678184327593273*^9}, {
  3.678184426585253*^9, 3.678184504309751*^9}, {3.678192844933332*^9, 
  3.678192868132708*^9}, {3.6781949725565968`*^9, 3.6781950795068493`*^9}}],

Cell["\<\
There is a sepcific method provided in the paper however, partial fraction \
decomposition is not well supported in Mathematica so it makes more sense to \
simply force the result for those that are not immediately obvious.\
\>", "Text",
 CellChangeTimes->{{3.6782020902549343`*^9, 3.67820215378318*^9}, 
   3.678719384339726*^9}],

Cell[CellGroupData[{

Cell["HMC with Unit Acceptance", "Section",
 CellChangeTimes->{{3.678189136793354*^9, 3.678189184204781*^9}, {
   3.6781892999811497`*^9, 3.678189309818619*^9}, {3.678189354691413*^9, 
   3.678189385673601*^9}, {3.678189423202386*^9, 3.6781894299050617`*^9}, {
   3.678192650769865*^9, 3.67819265541558*^9}, {3.678192941379877*^9, 
   3.678192954723619*^9}, 3.67819304705011*^9, {3.67819316213643*^9, 
   3.6781931749514503`*^9}}],

Cell[CellGroupData[{

Cell["\<\
The following line the inverted form of the Laplace - Transformed \
Autocorrelation function and assigns it to a callable function,\
\>", "Text",
 CellChangeTimes->{{3.678199317504532*^9, 3.678199366017501*^9}, {
  3.6782002100283117`*^9, 3.678200211731779*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"iFHMCunit", " ", "=", " ", 
   RowBox[{
    RowBox[{"InverseLaplaceTransform", "[", 
     RowBox[{
      RowBox[{"FHMCunit", "[", 
       RowBox[{"\[Beta]", " ", ",", "\[Phi]", ",", " ", "r"}], "]"}], ",", 
      "\[Beta]", ",", "t"}], "]"}], " ", "//", "ToRadicals"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"CHMCunit", "[", 
   RowBox[{"t_", ",", " ", "\[Phi]_", ",", "r_"}], " ", "]"}], " ", ":=", " ", 
  RowBox[{"Evaluate", "[", "iFHMCunit", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"CHMCunitn", "[", 
   RowBox[{"t_", ",", " ", "\[Phi]_", ",", "r_"}], " ", "]"}], " ", ":=", " ", 
  FractionBox[
   RowBox[{"CHMCunit", "[", 
    RowBox[{"t", ",", " ", "\[Phi]", ",", "r"}], "]"}], 
   RowBox[{"CHMCunit", "[", 
    RowBox[{"0", ",", " ", "\[Phi]", ",", "r"}], " ", "]"}]]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.678200449650069*^9, 3.67820045169071*^9}, {
   3.678200550575301*^9, 3.678200616759019*^9}, {3.678201955587666*^9, 
   3.6782020249532633`*^9}, {3.678202424619438*^9, 3.678202431155465*^9}, 
   3.67820364664179*^9, {3.6782066659345093`*^9, 3.678206666718487*^9}, {
   3.678453546793118*^9, 3.678453547168086*^9}, 3.678475611436707*^9, {
   3.678717214974468*^9, 3.678717218533619*^9}, 3.6788253888293858`*^9, 
   3.678825435907756*^9, 3.679074877054058*^9}],

Cell[CellGroupData[{

Cell["HMC without Unit Acceptance", "Subsection",
 CellChangeTimes->{{3.6781846727892313`*^9, 3.678184688611289*^9}, {
  3.6781891858608828`*^9, 3.678189186725843*^9}, {3.6781893679956284`*^9, 
  3.678189372177762*^9}, {3.678192625969808*^9, 3.678192633295753*^9}, {
  3.678192664855691*^9, 3.678192669831728*^9}, {3.678192916755786*^9, 
  3.6781929185232058`*^9}, {3.678195128922331*^9, 3.6781951674647293`*^9}}],

Cell[CellGroupData[{

Cell["\<\
The following line the inverted form of the Laplace - Transformed \
Autocorrelation function and assigns it to a callable function,\
\>", "Text",
 CellChangeTimes->{{3.678199317504532*^9, 3.678199366017501*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"iFHMC", " ", "=", " ", 
   RowBox[{
    RowBox[{"InverseLaplaceTransform", "[", 
     RowBox[{
      RowBox[{"FHMC", "[", 
       RowBox[{
       "\[Beta]", " ", ",", "\[Phi]", ",", "  ", "\[Rho]", ",", " ", "r"}], 
       "]"}], ",", "\[Beta]", ",", "t"}], "]"}], " ", "//", "ToRadicals"}]}], 
  " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CHMC", "[", 
    RowBox[{"t_", ",", " ", "\[Phi]_", ",", " ", "\[Rho]_", ",", " ", "r_"}], 
    " ", "]"}], " ", ":=", " ", 
   RowBox[{"Evaluate", "[", "iFHMC", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CHMCn", "[", 
    RowBox[{"t_", ",", " ", "\[Phi]_", ",", " ", "\[Rho]_", ",", " ", "r_"}], 
    " ", "]"}], " ", ":=", 
   FractionBox[
    RowBox[{"CHMC", "[", 
     RowBox[{"t", ",", " ", "\[Phi]", ",", " ", "\[Rho]", ",", " ", "r"}], 
     "]"}], 
    RowBox[{"CHMC", "[", 
     RowBox[{"0", ",", " ", "\[Phi]", ",", " ", "\[Rho]", ",", " ", "r"}], 
     "]"}]]}], " ", ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.678200449650069*^9, 3.67820045169071*^9}, {
   3.678200550575301*^9, 3.678200616759019*^9}, {3.678201955587666*^9, 
   3.6782020249532633`*^9}, 3.678202409237751*^9, {3.6782024411233463`*^9, 
   3.678202473571404*^9}, 3.6782031930503597`*^9, {3.678203254327133*^9, 
   3.6782032757268543`*^9}, {3.678206674174651*^9, 3.678206674798562*^9}, 
   3.678220328262973*^9, {3.678475599044993*^9, 3.678475601716855*^9}, {
   3.678716565334423*^9, 3.678716582708107*^9}, 3.6790748885897493`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GHMC with Unit Acceptance", "Section",
 CellChangeTimes->{{3.678189136793354*^9, 3.678189184204781*^9}, {
   3.6781892999811497`*^9, 3.678189309818619*^9}, {3.678189354691413*^9, 
   3.678189385673601*^9}, {3.678189423202386*^9, 3.6781894299050617`*^9}, {
   3.678192650769865*^9, 3.67819265541558*^9}, {3.678192941379877*^9, 
   3.678192954723619*^9}, 3.67819304705011*^9, {3.67819316213643*^9, 
   3.6781931749514503`*^9}, 3.6782023783077803`*^9}],

Cell[CellGroupData[{

Cell["\<\
The following line the inverted form of the Laplace - Transformed \
Autocorrelation function and assigns it to a callable function,\
\>", "Text",
 CellChangeTimes->{{3.678199317504532*^9, 3.678199366017501*^9}, {
  3.6782002100283117`*^9, 3.678200211731779*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"iFunit", " ", "=", " ", 
   RowBox[{
    RowBox[{"InverseLaplaceTransform", "[", 
     RowBox[{
      RowBox[{"Funit", "[", 
       RowBox[{
       "\[Beta]", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "r"}], 
       "]"}], ",", "\[Beta]", ",", "t"}], "]"}], " ", "//", "ToRadicals"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Cunit", "[", 
    RowBox[{
    "t_", ",", " ", "\[Phi]_", ",", " ", "\[Theta]_", ",", " ", "r_"}], "]"}],
    " ", ":=", " ", 
   RowBox[{"Evaluate", "[", "iFunit", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Cunitn", "[", 
    RowBox[{
    "t_", ",", " ", "\[Phi]_", ",", " ", "\[Theta]_", ",", " ", "r_"}], "]"}],
    " ", "=", " ", 
   FractionBox[
    RowBox[{"Cunit", "[", 
     RowBox[{"t", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "r"}], 
     "]"}], 
    RowBox[{"Cunit", "[", 
     RowBox[{"0", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "r"}], 
     "]"}]]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.678200449650069*^9, 3.67820045169071*^9}, {
   3.678200550575301*^9, 3.678200616759019*^9}, {3.678201955587666*^9, 
   3.6782020249532633`*^9}, {3.678202447981296*^9, 3.678202448548009*^9}, {
   3.678202612080641*^9, 3.678202612320877*^9}, {3.6782026832960873`*^9, 
   3.678202689088736*^9}, 3.6782031420567713`*^9, {3.678203362928256*^9, 
   3.67820336749326*^9}, {3.678203460685444*^9, 3.6782034651317863`*^9}, {
   3.6782039649109907`*^9, 3.6782039652284803`*^9}, {3.678206678942416*^9, 
   3.6782066802938633`*^9}, {3.6784466181748457`*^9, 
   3.6784466189667597`*^9}, {3.678475580783049*^9, 3.6784755871575737`*^9}, 
   3.679074897896702*^9}],

Cell[CellGroupData[{

Cell["GHMC without Unit Acceptance", "Subsection",
 CellChangeTimes->{{3.678189136793354*^9, 3.678189184204781*^9}, {
   3.6781892999811497`*^9, 3.678189309818619*^9}, {3.678189354691413*^9, 
   3.678189385673601*^9}, {3.678189423202386*^9, 3.6781894299050617`*^9}, {
   3.678192650769865*^9, 3.67819265541558*^9}, {3.678192941379877*^9, 
   3.678192954723619*^9}, 3.67819304705011*^9, {3.67819316213643*^9, 
   3.6781931749514503`*^9}, 3.6782023783077803`*^9, {3.678203847110159*^9, 
   3.678203847326118*^9}}],

Cell["\<\
The following line the inverted form of the Laplace - Transformed \
Autocorrelation function and assigns it to a callable function,\
\>", "Text",
 CellChangeTimes->{{3.678199317504532*^9, 3.678199366017501*^9}, {
   3.6782002100283117`*^9, 3.678200211731779*^9}, 3.678549107157805*^9, {
   3.678549231210799*^9, 3.678549237990143*^9}}],

Cell[TextData[{
 StyleBox["Warning:",
  FontWeight->"Bold"],
 " ",
 StyleBox["Extremely large computation time!",
  FontSlant->"Italic"]
}], "Subsubsection",
 CellChangeTimes->{{3.678719730908935*^9, 3.6787197857576103`*^9}}],

Cell[TextData[{
 StyleBox["This equation is ", "Item"],
 StyleBox["huge", "Item",
  FontWeight->"Bold"],
 StyleBox[" and crashes Mathematica with even 8GB RAM and so the result is \
saved to a text file", "Item"]
}], "Item",
 CellChangeTimes->{{3.678719751984264*^9, 3.67871996239876*^9}}],

Cell[TextData[{
 StyleBox["The text file ", "Item"],
 StyleBox["should not be opened manually", "Item",
  FontWeight->"Bold"],
 StyleBox[" as it will be about 20 MB and will also crash most text editors", 
  "Item"]
}], "Item",
 CellChangeTimes->{{3.678719751984264*^9, 3.678719888670712*^9}, {
  3.678719940806918*^9, 3.678719982657144*^9}}],

Cell["\<\
Cleaning up the string with python code can reduce the total size to ~170 KB\
\>", "Item",
 CellChangeTimes->{{3.678719751984264*^9, 3.678719888667101*^9}, {
  3.678719989541951*^9, 3.678720015208228*^9}}],

Cell[TextData[{
 "A cleaned version can be found in ",
 StyleBox["theory/__CmainBody.txt", "Code"]
}], "Item",
 CellChangeTimes->{{3.678719751984264*^9, 3.678719888667101*^9}, {
  3.678719989541951*^9, 3.678720106771989*^9}, {3.6787201597198477`*^9, 
  3.678720164302724*^9}}],

Cell[TextData[{
 "The text file is evaluated directly as python code by ",
 StyleBox["eval()", "Code"],
 " in ",
 StyleBox["theory._mathematicaFunctions.expC()", "Code"]
}], "Item",
 CellChangeTimes->{{3.678719751984264*^9, 3.678719888667101*^9}, {
  3.678719989541951*^9, 3.678720154222734*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"iF", " ", "=", " ", 
     RowBox[{"InverseLaplaceTransform", "[", 
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{
        "\[Beta]", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", "  ", 
         "\[Rho]", ",", " ", "r"}], "]"}], ",", "\[Beta]", ",", "t"}], 
      "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"CF", "[", 
      RowBox[{
      "t_", ",", " ", "\[Phi]_", ",", " ", "\[Theta]_", ",", "  ", "\[Rho]_", 
       ",", " ", "r_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Evaluate", "[", "iF", "]"}]}]}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<equation.txt\>\"", ",", 
      RowBox[{"ToString", "[", 
       RowBox[{
        RowBox[{"CF", "[", 
         RowBox[{
         "t", ",", " ", "phi", ",", " ", "theta", ",", " ", "pa", ",", " ", 
          "r"}], "]"}], ",", "FortranForm"}], "]"}]}], "]"}], ";"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.678549239219179*^9, 3.6785492392277412`*^9}, 
   3.6787178993216267`*^9, {3.678719719993828*^9, 3.67871972280374*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interesting Plots", "Chapter",
 CellChangeTimes->{{3.6790958789287453`*^9, 3.679095889534965*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Tau]", ",", "r", ",", "\[Phi]", ",", "\[Theta]", ",", "\[Rho]", ",", 
    " ", "tf", ",", " ", "steps", ",", " ", "dtau", ",", " ", "traj", ",", 
    " ", "rate", ",", " ", "j", " ", ",", " ", "k", ",", " ", "\[Mu]", ",", 
    " ", "\[Nu]", ",", " ", "pacc", ",", " ", "minT", ",", " ", "maxT"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tf", " ", "=", " ", "50"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"length", " ", "to", " ", "plot", " ", "along", " ", "t"}], "-", 
    RowBox[{
    "axis", " ", "set", " ", "as", " ", "constant", " ", "for", " ", "each", 
     " ", "plot", " ", "comparison"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"minT", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "\[Pi]"}], "/", "2"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"min", " ", "angle"}], " ", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxT", " ", "=", " ", 
   RowBox[{"5", 
    RowBox[{"\[Pi]", "/", "2"}]}]}], 
  RowBox[{"(*", " ", 
   RowBox[{"max", " ", "angle"}], " ", "*)"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.679096036653021*^9, {3.679096365923665*^9, 3.6790963792598867`*^9}, {
   3.679096656661788*^9, 3.679096657094521*^9}, {3.679096728338882*^9, 
   3.679096728797132*^9}, {3.679096830126951*^9, 3.679096891700444*^9}}],

Cell["Integrated Autocorrelations", "Section",
 CellChangeTimes->{{3.679095896659028*^9, 3.679095990318915*^9}}],

Cell["GHMC vs. \[Theta] for fixed \[Tau]", "Subsection",
 CellChangeTimes->{{3.67909606163861*^9, 3.6790960883995743`*^9}, {
  3.6790961207246237`*^9, 3.6790961355729647`*^9}}],

Cell[CellGroupData[{

Cell["\<\
The integrated autocorrelation under unit acceptance varying with mixing \
angle,\
\>", "Text",
 CellChangeTimes->{{3.6782015842107563`*^9, 3.678201600738537*^9}, {
  3.678201649310615*^9, 3.6782016536065903`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "traj", ",", " ", "steps", ",", " ", "dtau", ",", "\[Theta]", ",", " ", 
    "phi"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"steps", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtau", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mass", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"traj", " ", "=", " ", 
   RowBox[{"steps", "*", "dtau"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phi", " ", "=", " ", 
   RowBox[{"traj", "*", "mass"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Aunit", "[", 
    RowBox[{"phi", ",", " ", "\[Theta]"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", " ", "minT", ",", " ", "maxT"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<A\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.678201189654108*^9, 3.678201189854534*^9}, {
   3.6782012701903563`*^9, 3.67820128509238*^9}, {3.678201633943432*^9, 
   3.678201641191124*^9}, {3.678717092788486*^9, 3.678717094642087*^9}, {
   3.678717130981327*^9, 3.678717131363373*^9}, 3.678717840974184*^9, {
   3.678732593995397*^9, 3.678732727787867*^9}, {3.678732791402092*^9, 
   3.678732836577301*^9}, {3.678732920928495*^9, 3.6787329767489557`*^9}, {
   3.6787330258112698`*^9, 3.6787330264655457`*^9}, {3.678835255491971*^9, 
   3.6788352568023653`*^9}, 3.678931693113056*^9, {3.679096627531144*^9, 
   3.679096665782686*^9}, {3.679096856157234*^9, 3.679096856733245*^9}, {
   3.6790968946036386`*^9, 3.6790968949882193`*^9}, {3.679097102312353*^9, 
   3.679097128362094*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
NcUPaqD9b6XOKyOM/wdmkzE1
      "]], LineBox[CompressedData["
1:eJw1mHk8VO/7xseYGWTJli0JIVvWyH7fZQkVpUipSCVpsSQqUlQUWT9SKUpF
aVGSUogkW5RskSJrss8ZY2as3/n98fvrvN5nez3nvu7rep7nKHn7uxwik0ik
SB4S6f+OVZlVerW3qqBltlz/uQmipNxGfX2iCjoL1owFBwPW3JexS3evBlXt
kNWth6wwXGt4N29ZNdTYubR8PmiJAxbxl1rjakCnZMzwZ4w5pn/ed8uKqIF2
D/qyo0/M0MlJL++Rey2E6Gw7deCHKb7xbP5xRrUOdpdfN6A5maDf0MPR3rg6
4A/a6nUtbR0qBIbwbCbqQDCpM073rzHGRMlqKZR9gYQN99hEphFaCI5AjGo9
DNiPKZlTjXDyv5Idk3H1wLExKBwPXIvu2Z4RFe4N8D14v5fRXkMU0tH/T6us
AYrUt/Wqdhpg+Rvy41TVr6BP2BaY7zNAjZrs7z7EVwjpawyvDdLHc8xTKVS7
RgilUTP6MnSx/V2XvNmZRmgO7Nz9q0sHDSI2PjrxrBEKr9rVP1XTwUGabMkP
8e+w3pc37WqtNuKXSDshu++g82QFmUdFG9MThxvxzHeg7LfIUbykhU4yJQO5
3d8hcjvn8s4dmvj4l0pAl3gTCC9+FGJ90kByVvyMuF0TnG9hjTiZaOAbDc+l
4c+aIDJ+xc7dOuq40pxs6nSmGfj3HpJpcVTDs4t+n6KeNUPGsallyzpVseVT
85a33c2Qu92w9tUJVbyyOdtb0a4FPK7fjjp3VwUn99pfI8RboTQ2YQVn1Sp0
VM6XWm3XCg3Cge+Lvyjjw0HZLI8zrSCpUEIwTimju/9IYWV3KwgWdFYd+a6E
Hy8kdKc9a4PJbSH1yvcVMX2m6fDBX20gleL1a8hTEYODpSf1hX4Az/nhcMeV
iqjue4/UcPQHHOVXSXW3XYlJzq+UeLXa4S9lfEr/1Ar0q53ObdzdDhGxo5x6
vhVoY21ukBnbDsunHZX/3pFHlnHlBtPhdujuHXi3+ety3KfQdsA/twMWPsaH
jW+SQ5ObcqMWHR2w3lU0J2FSFsXFPYOXCPyEK0nFOWo3ZPEzdehStu9P2Gn+
8yp1WAa1xzjZnas7QdnU9bRwtjTOFK8Y2pjzC1JknXYq+CzDFiPvgGVtvyAs
bY1npMoyzHuRw+6l/obdZ48Oa/RL4v4HugIRh36DhkRQnuZhSayJXa/5WqUL
zqXm8EuESeB9SvSryB1dkBqpvK1mgwSGR9SZOV/qggOWyXkxghKoF7R903Bf
FzwNeSUreE8cb+w6dEzxQTfsyfeyC28Rw4Dm3Kmxpm4oadfc1f5ADLPVQj/s
5fkD0bZKoqLBYnj+XrGdlv4fqE8u2bwgJYaGqTY7q5L+wLesWLFtPqKYHuZ2
es65Bzy21vWqOIlgUUjOb7/DPfA699nSNKoItgVOb+iI6IF2akmazgdhFPdN
E37zvAfCOZb+pQbCGLuj7b6/YC9k1a+ef6kuhGfXuDX0VvWC9Xjg213WS/Cm
eo7Btq5e8DD9OluwZAm+WTV9o4zZC/0mHw71NwkgIZvmfUelD16MyQa+PSSA
frQ2lmtUH5Q/f6L0PpUfd3e7Ktda9kN2hkGQzDI+PP0zO2adaz80WWvbrxii
YVorczT7WD+YXblh/bGYhk1frr+Nut0PDq9KznUepKFjUetmC04/pMsJa4p8
oKJZsmvoi9cDMDKpdMcmloLu17J/ragfgBtSh0qX+FAwJIa5/lrfAIg05xU4
bKDgq3PXhY6ID4L5aR1TzTle1PRrzVIOGIRcQYk7eIoXl1u71l/X+gvHTv1L
NA0j4+ZPLtJk27/w/Uca2diDjBHWW71P7PsLoz8b9t0zJ2Ov9Sa2XfJfuB16
LeHtPA/m2qxXYU//BcPm66SyaB5cZ7cmfHfFEPSP98/VPCGhb5VmdVXnECyN
Xff8VxIJ0+3UxQ2ZQ6BNm9O0DSXhgt2qx4Lq/0DMVNh1qS0JP2+UbSmJ/wcR
YZHBdTWLsN2Bqr1y1zDcjBdMWOW9AJdqyaFxQcMQr7X3QuW6BXjjQKpgxQ3D
acnEh8PCCyDnOLuz8cMwkDex2j8Uz0OPI/1ipMoI5LiX225fMQ/+m3939k2M
gLnjuc1PpmfhXv1Pta0Co6CaiKp1zbPQtLk9sER5FNpHzB135M+C8ZZmvuuu
o/BpdeHHrOOzML+l1tCueBQUXqbUzAzPQJxzYdzj6DHom5P/cpHFgfAn91z3
Z3J5TSHt+i8OnKBeWyn3Zgw2euc50D9ywKXYuyBuYAzUJ4S9YuI5ILNatPOE
zTiowuQ/MXUOPFzw0zQiT4CKheDy0SNsSNvlNjUmOwEi90WFNm1nQ8zr9R9y
9CdAWrrs8JAFG/z8ZFxk9k9AaEf03U5RNui3fT4zWzYBkAU+ycUs6HZL6v9j
NQn+UTVyz5ezwJ0S7VDqOAkzTc6nsvlZ0JgflnfLbRIaO1Ldm5jTUCF0+LTL
iUlQlNVMrG6chpwKS6HKjEmwvJdFEbs6Dcd0RgwfzU0CT7POxZfkaRjo/HPz
Ij8dHFLrjr8mmLDvatu8pyQdJlIOiQ30MsG5/2O1jDYdyNRXX+o+McEg/aZH
rAcdDh1DjzsxTGBT7S4ef0+H4/9SVRelmDBzSrzTvpoOukluWy/wM2F+oMtA
pYUO4o/Ov9SZmQJyVWjvzzE6LM1OcxHrmgLh6Nz19koEzAkZ2/Y+mgJlmjBp
1RUCtp69a7vLegpUQzp2LqQS8Dp6RXn4uilQH8x+0ZFFwAFSiWa11hSsqbLy
TCom4EKlYuA3ySkwiQ74MD9OwMq4Rf+HQwzYQmsJb3dlQEQiPJa9wYCtIfda
CrwZ8HmQJ+FyPANcBo9pJ/oz4CNbNVjiEgPcq6i/bK8yYHv2kjWpgQzwjl5n
XlDCfc784YySEwMOTfP+l1DLgOMWBy+n2TLA16dx+EgbA6hP4nm0LLnn7Y6k
K04y4EgmueOVNgNO025z4ldNgf0a4uI6YQacDTm87YjeFAgKtohnUxlwbtAw
18ZyCkp43Mr1FgiIqqp3n3WbgpGTHplZEwTERy+89Y2dgi7zsJy+ZgLu07xD
rOlTYJzbcaGUW4dS18+ZvfNTwFhftkT0DgHtD9WrI5dwdXwQ9TI8jYCl1hPS
5auYEFvk9fJBHAHh58PfWbgxYdxf1lEllIAbX7t7Or2Z0G84E2IdRMCrFdZL
wvyZwLh8MjnsOAH/igU83l1hgo5KGq/xQQLc2GlzRsVMODVOaDW6EBC4cUal
tZoJH6TLRAucCLiWtndLcAsTVm/78/O5IwGf1qpkvhpjQvDarOzhDQToBeaD
ruI0dPi/+HNuLQGbyiV9v2pPg5N7x1t5fQJ8lp5OOm46DUwNzcSmNQTceW7V
89RlGkr6L7dGrSZAYPhLlPrladDKEiMxlhOgYqr7tDp5Gs6XVUtslCUAr6Q0
+2ROg6qIxIF8KQJC1HapZL+dhoaSnR41YgQknyrZbFM5DUU43R68lIBnlStP
9XF9EhkUZL5OmIBe78HPSsPTILX/6N55fgLm8x3Gy6enYVR+PZPER4AMz3Mp
L14WXBp8qCxHJcD57snDmfIsiMv9yLjGQ4DfeFuipQYL3G4ePzm4SIdoS7Oi
X0YseCF4DV0X6FDSSRJY7swCnX9d54Nm6fBD86D+ew8WFMxf+a44QwfiTPWu
Xb4soN1L1O1n00GkVjOKHcyCSdOPsSUsOmjIJDy5EcmCKzt3teRO08HmML3J
OIEF0eKkhadMOni92THbms6CI1G1nIopOoRRi1adesQCF32j9+MMOqTtWL5Z
8jUL4q+vMdDlcv6DiOCCcha0JvK5XiLoUE/03HFpYIHaeKTUOJ0OQ+ttP9M7
WLCGUel3jMu8yY/HkgZZsLF3v93iJB0U/ghK6TFYQElyyczhspmuv9W3RRYo
sdiHvbnsGtHkc0KIDUuaFG4ZcDmgwShRWJYNr02Yq6W5PCIgympSYcPxPSd6
l3LZx2543009NnDyRGzkuNwTVVm1l5uTff+abI25vKcsU2eVPRsS2ZSeA1z+
MXs6bYibq90fzZc+4LKLyfaF555suDO1u47B5a/Ba3xOHmXDx7YUITfu+B3y
+b6ahLIhQtqrsZbLlWM9RgtRbFj+ME7Umfv9qFmS8SmBm9PnNWsGuFzsk0a9
ms6GijsZRDy3XsYPAo475bBhvjg5biO3vvndjq0Sr9gQ7LiYIM6tv7a8qmVH
KRuW2WpyxrmsfL1D6GArGwoerJ/q5OqX8b0gWKOHzV1v6Jwf5eorI5Lwa3yU
DTL2nQdFuPqLxGx4dobCgWsieeui5+hw9ZO8JIhyoChDR+nXPB0oJFYYRZ4D
cYHK+6y5/TV7+ummREMOtPtu+2pL5vZ74eWCHcCBJ1+sSD28BBB0z+Vym7jz
FpP3Yjy3X4f8JEceenPAcVdBmJwAAS17zsW+T+bAU/IhJwrXH863dhLnMzhg
/qxCVlOCgLpW/d22uRwYvNBmtX8ZAeVOgxqN5RxoOql+j1eOgOfoXDswwYEl
R62lZFUIUD+nof90lgMTwaKUOjUCHr7jvRXANwNl7z0OX9MgIN2gyHdWYQaW
lM5n2eoSEK2ixC/mNAOMn5siY80J4Nk/69+2awY0aN9eVVtx8yqj9cftQzMw
zfl+RYqbHyelYh+pnZuBVoUc+GdPgBc/w87i2QwEFAi/PbCTANPRysuHl8xC
cqRc7WtuvlmNnPqjJT0L3vKlif7hBNgMq5lPrpoF/X23GyCSAKehK5OnLWfh
tfO3cUVuPnr3b/aIDZiF8FWRd//eJSD2V4ve87ZZkL9bIXSjgYDEzstxgX2z
cORk1/t8bh6n/jQeNJqchZ+JhVJ9HQRktt+8/UFgDq7jbePYQW6etuyhNVrM
AaW5oWGUxICf9f2dxP05WD5yvlnOjAHdX64bv30xBzuM1955tp4B/XV2yWEl
c8Au+dDg5sCA8ZrHdpS2Oeg6LDc+5c4A8udj+csE5sHhe2iHxxkGaJZORZv4
z0NmynvZqQ8M0C3J7pkLmwc1J6bIihoGrC12s/h4ZR6CIoc/en1ngNW7IrrD
/XnYY9ItbNrPnf8Kw/d4tM7D9MtaRQPBKTj7nGIQYb4ACvlJVf77pqD7lna9
78YF0Anc4XjXdwpsonf4bN++AAXWER+GgqZAxPNhuvpR7jouNGlNXcwUZIna
8DanL0BGs5t1/aspqDl5sWX1zALUbDGIZAszYY3X0xPitEXwc56p+C3LhJTN
zfzzYotw4d3dFX9UmbBHdZVlk8YihJGNyZZWTJhsq8gO37UIT54Ms/YGMEHa
jBz6vWgR7ngIDAX9ZEK4mqZYSeUifP67ZZPdEBP+iLs8zWlchJSigjKzaSY8
GcnqDhtaBNa3fzMx4tNw96uiioQQCX8Zqn4t3jwNhhfKr5Wak/B9xb+lDdXT
sLtvca/4bRJq45kS5k8WNJmdV4nJIqGactzF5RMscEhZGJ59RMLwe1Uep3jZ
YLJ+PnTgNQlz9ZdHVWtzfX93JrnoKwlfT3hymJFsaNzN/LyPzIOZmVHWtHUc
sH8VfK2ZnwcrnHUnCp04UCYw5WK/lAclKC4/HvhwIK+I6NaX50ETUUF7yxtc
n0tNcijGPJi1UFIVxvWVXdPwmqdHeHCs0HLoZ+MMfNDwm1oZwIOW5Zcf1o/O
gFHkv/epITy4Y3VEg4DALKjoDW2MuMiDdcGqhn4bZoEnYWD/tgweJAW/b+8q
moUShz/XWY08eEno0MOowjlYm+W559gPHiz9q+Ofw+27p+wu5Z7fPBj8tXBM
jT0H6Y9+v6gb5sGdvjsFrC3m4TS1szaDQkb9ZD0Zodp5MPzYOm9tQsatL51G
ZKYXwPjKvWfpVmQcFRlMpMsvgpnzUQ+6DRktD0TfNbVZhA2/Se8yt5Gx2yHf
VSF1EbZytII5fmR0eUIRfS1PwhP6UcN5GWS007AkVzaQMIi9+Rb1IRntHytS
JAZIeKpM2n7PEzLuGhKwfzzH1WXL82yBt2QU5o/5lavNg3FH2r0ONpJxtVGk
m3oSDz7O0vkhy8uLdu71bxV8yPjMl3M5QIAXE+sUhfZFkfGlbuXa6qW8uG49
OYCVSca3pbtSguV50UnsPzurDjJWdVza8s2IF302VQptdOHFPrHOT5d8eTHw
P0fNop0UHGzPDuo8wYvRRqWWu89ScPhugJIBd5/2Qv7xz8AMChJraOe7I3lR
OIAYFxigIMlR38zsNi9a4fZvsmepqBAV83KigRe9KDkXP5dy95Nlwuc7mnnR
pjw16d8ADS/P/7flUwcvTrjG5l4X4cPR0/eG0wZ4sey1alrifj4s9n+nYjXP
i1cbhyO3ivCj+96Rm9e0KXi60SfhyGUBFLodeDjEgIJVTgMVm98KYFk7y8jL
hIK2dkv2DfwTQLUdlGZDGwreflSUZLNtCTIdVwh3elCQ3zlZSlFDEFNMnCM1
4iiYqn3wSgVJGO1CWp0lkikoCSUXa0EYOQUeCvNpFLRhm01XnxdGL13f4sb7
FDSX3pNVRhZBXbVIZuh7Ct4BFSu9ZUux9wBf5f5ybp3eXLS7smcppmXFp2yq
ouCnhgB1SvZSXJBP113ZRMGExr125fKiWC9RcKTqHwX3143E3C8SxQvbTE1e
TlCwv8yC16xHFNcmltHSmRQMj2lsiVgihreX1D84zkPFmpyjQoqeYujHM/Bb
UpaKRs7nxNeKiSPfhJTLAXsqXt2SP5F9RwJJCfzp9U5UVLu5EFnQJoFs7Zke
I1cqVhQZGw+JSeKw3+9Afm8qOsbw5w/GSWL94IPk52FULGr8waOauAwrL1/v
kIqiYmbGGb6dzcuwVCVG6cIVKhZaryazZKQwz9sv3+U6FS0239715LEUJnXp
fWflUXFgTUqAVKc0XjmnLLu/kIofc0xejGnJYKS85P66Yir+o3s7J0XIYNBu
1uSdGioKHoqfOqEhi65tpaIbeqnYuSU7z+CGHDqdeuH+dIiKka426WS2HNpJ
Zt2TnKCibIqi+nKP5Wjicknv7ywV8+oi5wPU5VHuq+PWa8toGJVoVz/YswLF
j1vcZC6nofxN3SM6OxVQUEjnzz5lGh7Z8jfvyDcFnHMQC9DXpeFjT7NY5dqV
2PX5R2KbPQ15xaVT3AlFbDtY+wOcadhwLDpkm5kSfuMtXpnrSkNzPtZB80tK
WL4+80WYNw2b7067aiko44PSg98Uw2lofzZz1dNjq/DOHjfp2CgarjqTMuhW
tQpTZzd6Mq7QcCjGoTtDWQWjTbUmPl+n4XWB5WqH+1Qwol1+ne4dLqP2bSV7
VQwNFTl/8z4NhdLbSv6+UEXfQrrI0Rfc60HtD6SvqqHXjj63lkIaapfMDH6e
UcNdjJZMyxIayla48AsErEZH/SId0Voa+t41fzRySB21n0c4FfbS8JZFi+/E
RU1sqdB6kz9EQ921tlR5YS08196+Im+chnMehap56Vr4lddwLGeGhmXK0sI1
n7QxRPbPjgckPoxu3Kf3znMNrtSNL7lL48N/bbVjvSQdDNj9N+6mOB+OOzwk
tW7XRZmAVEaqDB+WjvY5iPLq4cfL6z2SFfjwlV39b1dPPRTPv60Zq8mHmV3n
BzqU9PE139basA18uOtv2toLzQa4Z8W83ml77v2G/NPbHA2RavjkZrATHzZP
fUgu/myIbvsovsd38+E33fkZ5y9rceFk/rcjXny4yYkhQXYzwkdX963z8eHD
Z2Ort3gMGiH7dRHNM4gPqxanUzbKrsN7dYdOeJzmwxcF3hZxJevQ4Y94284I
PpwiqFbtPiaYLng8e2ssHwY9e65k1mSK1kpywluS+BC3aAibpprhqHF1sEMa
9/3mYr+lPM3R0lvJZsN9Prx0adV/z8QscTD061Orx3yobOv6++6MJSbEh0mY
5/GhxrIF0ZFxK7So3LSM/y0f/v////8BqXh19Q==
      "]], LineBox[CompressedData["
1:eJw9mGk4ld/Xx810zuHMAyljkihEUrG/pEmoRCQhpUmJVEpFM1IpZCoSmVJR
SoNCEiKkFI0qZWr6uc1j//O8eV7d1+da9772Gr57rWtvDe+djj5SEhISRyQl
JP7vq5p5XLX5NA2NI6VGN+YAdodnK0hH0/D8XzKj4TRBxaakBq8EGq5vqcbR
I5Z4OMt7o2oGDf3T3N50np8PE5UKg+BcGsLrv/7py52HmxJ6A023aCjXSdrY
/nIurtR2R8QU0/DbT+9JwxxzqNxxXtVdTkMp54NzXPAcxCY9UF1eQ8NFodXa
N+VmCN98JI/WTINHlPmZev/ZkHL4sW/LZxpcQ6lFWQ2mOGiy1LriOw1pC94p
GZmbYqck+82RbhouJN2QalMxweqLqcODNDoamD/MKTVjvDwiU76aTUd+/5Y3
C24YwXbLljN3hHRULpHs/WlpBAtTQ3V/bTr4Xe0/fPwMUTgxtrNWj44gCwXW
a7ohDKUGb083ouNB1oVviWtmQru+ZGG7BR01r2Q/7+82QMpdLeZCGzo4tQ27
qxYZQHQprDnNlg5jFamI3iv6oG9d7uvhQofqpW1U85bpoKRazr3xp8Py6e8m
G+NpUPUa31+xl45OlxlWW+/rYtHjSRvuHaRjZt6sLC1rXSQGuZsmhtMx20Rj
f63nVODXu3fuqXS8/arjtad0CrYtHSqzz6Qju6U945HnFMRkiq5bXqeD0RVw
LktyCtq8XELU74vXWxmMy9tr48ybRs3v9XQcvfzl2ql/mig07qW/eSP2/4uf
UcgtTXyJ4vY9+0DH3r1Lh3b4aMLE1rEyq52OxT+1s8dfaeB9cb2v7z86AhMr
Bg2fqkNG9a+TuywD7VNqo+2PqWPGfiVLezoDcey6hr826jgyy541U8iAfCYX
0xLVoJtdfYeawUD5If34pc2T4CjbldxqwkBLaaK/l98kHPSeENY4lwGWX1HB
W7lJqFddsqZwEQNr43PVkyxVsff8s7H9HgxQ+iF3r1eqIPXP97ZtGxn4ev/q
aKefCqqXybxcu42B9TkB+fIiFUySW5BmsZcBz6Vd3LydyigPLl0keZYB25wb
71bOEuFPU8tMKoaBmL397FkdQohM/4laExk4ebUOF1KE8P1r8bM8gwF/wUal
O0whOBuLosIfM5Dk2bbCUUoAT/vCZuZvBr4FpLje1+Chjm4173APAwft7s/q
+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
UKjZVhHuzv59Nk2RwHtnssh4h+j/3///B9jhsz4=
      "]], LineBox[CompressedData["
1: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
lmMINQ==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Theta]\"", TraditionalForm], 
    FormBox["\"A\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{Rational[-1, 2] Pi, Rational[5, 2] Pi}, {0., 
     32.44278547213585}}, {{-1.5707963267948966`, 7.853981633974483}, {0., 
    32.44278547213585}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6782011908459873`*^9, 3.678201287267968*^9, 3.678201645092907*^9, {
   3.678203628947277*^9, 3.678203651406035*^9}, 3.678206138720562*^9, 
   3.678206692143313*^9, 3.678221470731682*^9, 3.678435993230301*^9, 
   3.6784655179193983`*^9, {3.6785499582653008`*^9, 3.67854996672619*^9}, 
   3.6785499970871363`*^9, 3.678716422303385*^9, {3.678717079679151*^9, 
   3.678717095016831*^9}, 3.678717132050206*^9, 3.6787177246170797`*^9, 
   3.6787179369304113`*^9, 3.678718056768195*^9, 3.67871821883321*^9, 
   3.678718577228663*^9, {3.678718926350562*^9, 3.6787189482557173`*^9}, 
   3.678719113891905*^9, 3.678720606490057*^9, 3.678720760162889*^9, 
   3.6787299318754263`*^9, {3.678732595168394*^9, 3.678732715188476*^9}, 
   3.6787327671731977`*^9, {3.6787327987904463`*^9, 3.678732836898376*^9}, {
   3.678732979038334*^9, 3.6787330082778187`*^9}, 3.678733051688335*^9, 
   3.678825396164362*^9, 3.6788351095343246`*^9, 3.678835248946443*^9, 
   3.678835282221237*^9, 3.6788353462732353`*^9, 3.678835519531204*^9, 
   3.678939328847013*^9, 3.679061104545233*^9, 3.679066904276259*^9, 
   3.67907019552074*^9, 3.679071198729105*^9, 3.6790966681557837`*^9, {
   3.6790968956176157`*^9, 3.679096899982052*^9}}]
}, Open  ]]
}, Open  ]],

Cell["HMC vs. \[Rho] for fixed \[Tau]", "Subsection",
 CellChangeTimes->{{3.67909606163861*^9, 3.679096114837829*^9}, {
  3.6790961513347607`*^9, 3.67909615426823*^9}}],

Cell[CellGroupData[{

Cell["\<\
Showing the change in the HMC integrated autocorrelation varying with \
acceptance rate,\
\>", "Text",
 CellChangeTimes->{{3.67820135820119*^9, 3.678201394139328*^9}, {
  3.6782017909965057`*^9, 3.678201791412546*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "traj", ",", " ", "steps", ",", " ", "dtau", ",", "\[Theta]", ",", " ", 
    "phi", ",", " ", "theta", ",", " ", "mass"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"steps", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtau", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mass", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"traj", " ", "=", " ", 
   RowBox[{"steps", "*", "dtau"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phi", " ", "=", " ", 
   RowBox[{"traj", "*", "mass"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta", " ", "=", 
   RowBox[{"\[Pi]", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"phi", ",", " ", "theta", ",", "\[Rho]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Rho]\>\"", ",", "\"\<A\>\""}], "}"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.678201076096074*^9, 3.678201173565803*^9}, {
   3.678201205904499*^9, 3.678201239374442*^9}, {3.678201293846182*^9, 
   3.678201294109104*^9}, {3.6782013245899343`*^9, 3.678201350267584*^9}, {
   3.678201410115102*^9, 3.678201414026392*^9}, {3.6782014599620123`*^9, 
   3.678201485482244*^9}, {3.678201525966042*^9, 3.6782015411216784`*^9}, {
   3.6782017975411863`*^9, 3.678201797660614*^9}, {3.6787170845788937`*^9, 
   3.6787170851702023`*^9}, {3.678717147669211*^9, 3.6787171488427343`*^9}, 
   3.678717825140409*^9, {3.679096682336882*^9, 3.67909671686866*^9}, {
   3.679097141320673*^9, 3.679097184557061*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
hIT/bpaaWVkh4Kx+hhSFQsI/B1MO5w==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Rho]\"", TraditionalForm], 
    FormBox["\"A\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 25.052713638447848`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6782011488846493`*^9, 3.6782011740318747`*^9}, 
   3.678201240440404*^9, 3.678201296811831*^9, 3.678201350586152*^9, {
   3.6782014111608963`*^9, 3.678201414268469*^9}, 3.678201464619265*^9, 
   3.678201545629547*^9, 3.678201800156969*^9, {3.678203629017867*^9, 
   3.6782036514672823`*^9}, 3.678206138771044*^9, 3.678206692192451*^9, 
   3.678221470826647*^9, 3.678435993441873*^9, 3.678465517986309*^9, {
   3.678549973017082*^9, 3.678550000176797*^9}, 3.6787164223728523`*^9, {
   3.678717079794249*^9, 3.678717089380127*^9}, 3.6787171496404448`*^9, 
   3.6787177247263813`*^9, 3.6787179370297527`*^9, 3.678718056873886*^9, 
   3.6787182189214687`*^9, 3.678718577390017*^9, {3.678718926497827*^9, 
   3.678718948416717*^9}, 3.678719114041367*^9, 3.678720606607236*^9, 
   3.678720760271154*^9, 3.678729931985301*^9, 3.678732715349577*^9, {
   3.6787329882119703`*^9, 3.6787330083537273`*^9}, 3.678825396276456*^9, 
   3.678835346377315*^9, 3.678835519685123*^9, 3.678939328921919*^9, 
   3.6790611046108437`*^9, 3.6790669044505367`*^9, 3.679070195620598*^9, 
   3.6790711989183483`*^9, 3.679096719935828*^9, 3.679097153867716*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "HMC with Unit Acceptance vs. Ficticious Sample time, ",
 StyleBox["t",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.67909606163861*^9, 3.679096114837829*^9}, {
  3.6790961513347607`*^9, 3.679096226863229*^9}}],

Cell[CellGroupData[{

Cell["\<\
Plotting shows the underdamped form for unit mass and averge trajector length \
\[Tau],\
\>", "Text",
 CellChangeTimes->{{3.678201887342808*^9, 3.678201929415758*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "traj", ",", " ", "steps", ",", " ", "dtau", ",", " ", "t", ",", " ", 
    "rate", ",", " ", "phi", ",", " ", "mass"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"steps", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtau", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mass", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"traj", " ", "=", " ", 
   RowBox[{"steps", "*", "dtau"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phi", " ", "=", " ", 
   RowBox[{"traj", "*", "mass"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rate", " ", "=", " ", 
   RowBox[{"1", "/", "traj"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"CHMCunitn", "[", 
    RowBox[{"t", ",", " ", "phi", ",", " ", "rate"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "tf"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<C(t)\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6781991082789793`*^9, 3.678199203811432*^9}, {
   3.678199472225458*^9, 3.678199527903089*^9}, {3.678199613854969*^9, 
   3.6781996928774014`*^9}, {3.678199945617002*^9, 3.678199951624483*^9}, {
   3.678200930265499*^9, 3.678200937354685*^9}, 3.678201025880974*^9, {
   3.678201817022689*^9, 3.678201856941826*^9}, 3.678202512819312*^9, {
   3.678453570065518*^9, 3.6784535998999453`*^9}, 3.678550013187847*^9, {
   3.67871700306319*^9, 3.678717016521514*^9}, 3.678717051439777*^9, {
   3.678717155852412*^9, 3.67871720189362*^9}, {3.678717235998796*^9, 
   3.678717244332367*^9}, {3.6787178088703423`*^9, 3.6787178409962273`*^9}, {
   3.678718027490181*^9, 3.678718028815855*^9}, {3.6787186163014383`*^9, 
   3.678718626424376*^9}, {3.6787189141934547`*^9, 3.678718914197785*^9}, {
   3.678718954731336*^9, 3.6787189587142153`*^9}, {3.678720641327458*^9, 
   3.6787206416528883`*^9}, {3.6787206989195423`*^9, 3.678720699134927*^9}, {
   3.678939342877687*^9, 3.67893934404661*^9}, {3.678939411981687*^9, 
   3.6789394125332603`*^9}, {3.679096732747549*^9, 3.679096825375021*^9}, {
   3.679097158302272*^9, 3.679097196343566*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"C(t)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 49.99999897959184}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6781994665789003`*^9, 3.67819952843003*^9}, {
   3.6781996789635077`*^9, 3.678199694808474*^9}, {3.678200933584544*^9, 
   3.678200938864902*^9}, {3.678201833976337*^9, 3.6782018582637463`*^9}, 
   3.678202178620438*^9, 3.6782036530415297`*^9, 3.678206140544095*^9, 
   3.678206776946876*^9, 3.678221598469907*^9, 3.678436116071333*^9, {
   3.678453574164877*^9, 3.678453602371586*^9}, {3.678550010585854*^9, 
   3.678550021007886*^9}, {3.678716428158781*^9, 3.67871644443188*^9}, {
   3.678716995479123*^9, 3.678717041788842*^9}, {3.678717164255151*^9, 
   3.678717248799322*^9}, 3.678717734039336*^9, 3.6787179420506372`*^9, 
   3.678718057610957*^9, 3.678718219663588*^9, 3.6787185781581573`*^9, {
   3.678718621416398*^9, 3.678718632209835*^9}, {3.67871892777388*^9, 
   3.678718953484819*^9}, 3.6787191189491568`*^9, {3.67872061479869*^9, 
   3.678720644532502*^9}, 3.678720707192113*^9, 3.678720765340979*^9, 
   3.678729940176139*^9, 3.6787327206445093`*^9, {3.6787329931901197`*^9, 
   3.678733013544423*^9}, 3.678825401707426*^9, 3.678835350670127*^9, 
   3.6788355241469584`*^9, 3.67893933401201*^9, 3.67893937472255*^9, 
   3.679061109249456*^9, 3.67906690956802*^9, 3.679070200577628*^9, 
   3.679071204157556*^9, 3.679097169717429*^9}]
}, Open  ]]
}, Open  ]],

Cell["Autocorrelations (Inverted Laplace Transforms)", "Section",
 CellChangeTimes->{{3.679095896659028*^9, 3.679095992330186*^9}}],

Cell[TextData[{
 "GHMC and HMC both with unit acceptance vs. Ficticious Sample Time, ",
 StyleBox["t ",
  FontSlant->"Italic"],
 "for fixed \[Phi], \[Tau]"
}], "Subsection",
 CellChangeTimes->{{3.67909606163861*^9, 3.679096114837829*^9}, {
  3.6790961513347607`*^9, 3.67909615426823*^9}, {3.679096292772253*^9, 
  3.679096322877247*^9}, {3.6790964248303223`*^9, 3.679096472191986*^9}, {
  3.6790965576786757`*^9, 3.6790965746286993`*^9}}],

Cell[CellGroupData[{

Cell["Comparing HMC and GHMC cases,", "Text",
 CellChangeTimes->{{3.678201887342808*^9, 3.678201929415758*^9}, {
  3.678203331574971*^9, 3.67820333847758*^9}, {3.678549480460771*^9, 
  3.678549501197304*^9}, {3.678719148571925*^9, 3.678719166250798*^9}, {
  3.679096477961604*^9, 3.679096489007703*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "traj", ",", " ", "steps", ",", " ", "dtau", ",", " ", "t", ",", " ", 
    "rate", ",", " ", "f1", ",", " ", "f2", ",", " ", "phi", ",", " ", 
    "mass"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"steps", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtau", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mass", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"traj", " ", "=", " ", 
   RowBox[{"steps", "*", "dtau"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phi", " ", "=", " ", 
   RowBox[{"traj", "*", "mass"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rate", " ", "=", " ", 
    RowBox[{"1", "/", "traj"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", " ", "=", " ", 
   RowBox[{"CHMCunitn", "[", 
    RowBox[{"t", ",", "phi", ",", " ", "rate"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f2", " ", "=", 
    RowBox[{"Cunitn", "[", 
     RowBox[{"t", ",", " ", "phi", ",", " ", 
      RowBox[{"\[Pi]", "/", "2"}], ",", "rate"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot1", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{"f1", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<C(t)\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", " ", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"f2", ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tf"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<C(t)\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plot1", ",", "plot2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.678549496772285*^9, 3.678549496780361*^9}, 
   3.678549557549226*^9, {3.678549591327683*^9, 3.678549667949695*^9}, 
   3.678549699838067*^9, {3.678549758778562*^9, 3.678549760872456*^9}, {
   3.678549882478738*^9, 3.6785498873332653`*^9}, {3.678550233318347*^9, 
   3.678550274464011*^9}, {3.678550322817655*^9, 3.678550406722939*^9}, {
   3.678550468802348*^9, 3.678550471583888*^9}, {3.6785505025670977`*^9, 
   3.678550556882443*^9}, {3.678550593296501*^9, 3.6785505952287807`*^9}, {
   3.67871733532838*^9, 3.678717362215597*^9}, {3.67871742807614*^9, 
   3.678717503189146*^9}, {3.678717553235668*^9, 3.678717586021976*^9}, {
   3.6787176516776133`*^9, 3.6787176808138514`*^9}, {3.678717754279175*^9, 
   3.6787177588231773`*^9}, {3.678717841031213*^9, 3.678717844982978*^9}, {
   3.6787179920627832`*^9, 3.678718009744957*^9}, {3.6787181136476727`*^9, 
   3.6787181149415007`*^9}, {3.678718914223936*^9, 3.678718914229024*^9}, {
   3.678719208911759*^9, 3.678719211611806*^9}, {3.678720713151126*^9, 
   3.678720714901877*^9}, {3.6790969196566563`*^9, 3.679096964403528*^9}, {
   3.6790971725324717`*^9, 3.67909719278304*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], CapForm["Butt"],
       LineBox[CompressedData["
1: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
       
       "]]}}, {}}, {{{}, {}, 
     {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], CapForm["Butt"], LineBox[CompressedData["
1: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

       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"C(t)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 49.99999897959184}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.678549560744166*^9, {3.678549592336059*^9, 3.678549668530116*^9}, 
   3.678549763524886*^9, 3.6785499217719507`*^9, 3.6785502016857557`*^9, 
   3.678550307186309*^9, 3.6785503975004797`*^9, 3.678550492336996*^9, 
   3.6785505790383873`*^9, 3.678550616806826*^9, 3.67871735239585*^9, {
   3.678717392300324*^9, 3.678717416318018*^9}, {3.678717480230057*^9, 
   3.678717511812439*^9}, 3.678717603359171*^9, {3.678717660577536*^9, 
   3.678717685992004*^9}, 3.678717754025626*^9, 3.678717981728633*^9, 
   3.6787180981484623`*^9, 3.6787182179783573`*^9, 3.678718257004722*^9, 
   3.678718615619475*^9, 3.678718937167487*^9, 3.678718990846622*^9, 
   3.678719156224555*^9, 3.678720639801979*^9, 3.678720759160379*^9, 
   3.678720802996265*^9, 3.67872999962036*^9, 3.678732757329527*^9, 
   3.678733050076097*^9, 3.6788254378148937`*^9, 3.67883538661977*^9, 
   3.678835558747896*^9, 3.6789393725428667`*^9, 3.6790611486075077`*^9, 
   3.6790669520797453`*^9, 3.679070238731298*^9, 3.679071243081915*^9, {
   3.6790969656563587`*^9, 3.6790969687526627`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "HMC vs. \[Rho] and Ficticious Sample Time, ",
 StyleBox["t ",
  FontSlant->"Italic"],
 "for fixed \[Phi], \[Tau]"
}], "Subsection",
 CellChangeTimes->{{3.67909606163861*^9, 3.679096114837829*^9}, {
   3.6790961513347607`*^9, 3.67909615426823*^9}, {3.679096292772253*^9, 
   3.679096322877247*^9}, 3.679096579584257*^9}],

Cell[CellGroupData[{

Cell["Plotting for varying acceptance rate and smaple time,", "Text",
 CellChangeTimes->{{3.678201887342808*^9, 3.678201929415758*^9}, {
  3.678202530572019*^9, 3.678202566394101*^9}, {3.679096993112739*^9, 
  3.67909700866405*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "traj", ",", " ", "steps", ",", " ", "dtau", ",", " ", "t", ",", " ", 
    "\[Rho]", ",", " ", "rate", ",", " ", "phi", ",", " ", "mass"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"steps", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtau", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mass", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"traj", " ", "=", " ", 
   RowBox[{"steps", "*", "dtau"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phi", " ", "=", " ", 
   RowBox[{"traj", "*", "mass"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rate", " ", "=", " ", 
    RowBox[{"1", "/", "traj"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"CHMCn", "[", 
    RowBox[{"t", ",", " ", "phi", ",", " ", "\[Rho]", ",", "rate"}], "]"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "tf"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Rho]\>\"", ",", "\"\<t\>\"", ",", "\"\<C(0)\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6781991082789793`*^9, 3.678199203811432*^9}, {
   3.678199472225458*^9, 3.678199527903089*^9}, {3.678199613854969*^9, 
   3.6781996928774014`*^9}, {3.678199945617002*^9, 3.678199951624483*^9}, {
   3.678200930265499*^9, 3.678200937354685*^9}, 3.678201025880974*^9, {
   3.678201817022689*^9, 3.678201856941826*^9}, 3.678202512819312*^9, {
   3.678202543026947*^9, 3.678202590632588*^9}, 3.6782028090056143`*^9, {
   3.6785500368763847`*^9, 3.678550037163314*^9}, {3.6785500757695217`*^9, 
   3.6785501821517477`*^9}, {3.6787164029205112`*^9, 
   3.6787164076370163`*^9}, {3.678716438126214*^9, 3.6787164504450274`*^9}, {
   3.678716481018956*^9, 3.678716496306636*^9}, {3.678716603238153*^9, 
   3.678716762826984*^9}, {3.678716841371263*^9, 3.678716859782816*^9}, {
   3.678716895016724*^9, 3.678716954825459*^9}, {3.678717277686432*^9, 
   3.6787172882983093`*^9}, {3.67871784100956*^9, 3.678717867314775*^9}, {
   3.6787180196991167`*^9, 3.6787180198563747`*^9}, {3.678718914205227*^9, 
   3.678718914212983*^9}, {3.678719001603417*^9, 3.6787190056672897`*^9}, {
   3.679096984654998*^9, 3.679097044685505*^9}, {3.67909720684206*^9, 
   3.679097217070231*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXk0Vd/7+ImSNBCVSihTcyrNca6SXE1CSSoalBSpVEQlIRq5EkrIFKHM
Ms9T5nm45lmmBo3E7/3+2s9zve9n/fxjrdfaa5/nvO45++y9z97PWXzqkrr+
JA4OjttTODi4/vn/+khwrP3KqwqW8cOeLt8LFcb+72+QMlyt4C5Fj6CADzaN
85Du2jFJejry1pRxLhkvtD7WKB95udc4L8qSiZSklyHPuTPOH6zOKjBiViFP
0B3nyq6nOmOMmMjfUuOck+Pfv2bkXmLjXDeq6JEkvRX507HR/+NJBq/m0xnt
yK2axvnCRRcDjJidyC+njHPz0q3rGZI9yPW9xnm1LW9qjFEvcs0743zD1pq9
zJh+5Cq649xpIKD23//AN1PjHDzbLr2cosqYTvt9NKRsomfg2+4s9p16th89
Ay/QG+MTGP2EnoFPmfSnSiy7Gz0DD5Ns0lBK7ETPwC0Xb931vLEdPQOv8Ztd
uGFFG3oGrrw5W3uPdwt6Bi56Z4TBs70ZPQOvXHDxsfLvBvQMfLNVb0hyKhM9
Az8wPJXOm1+LnoHHP/SclCtUg56Bq3xJXhvyogo9Axe8Vpd6XbsSPT+2yCym
M0RoPL357yd6Bt4zyUglza4XPQN/s+vIm9+eXegZuIGoyU/Dze3oGXh1xYdb
Bkot6Bm4HqOpx+hCA3oG7nBE9UADRy16Bi623sEkeX0legb+JKRwxqfPpegZ
uNbU/GdW+4vQM/DE2d8lvj3JQ8/AOb+Mxg/dz0LPwJ9H2l/TWJyOnoFzpZf2
LHuYjJ6B32ma4aeTEYeeL67tFos1kqK94zz2dKJn4H2zNMQPd/WgZ+CbUsqL
hbva0TPwQ8UK87qLm9Ez8NE3Z5xef6tDz8DnF3lcvmZXiZ6BO19fIfNdrBQ9
A1+5X8adb0k+egZ+rbJTJONMFnoGPlVt2pWM7FT0DNzPfMnrIol49Azc0lRb
q3BdFHoGXtqXvH9jyzv0DNxp1XzvcNob9Ax83+Kk9V1ir9GzgNSAFp2xkvbR
edmliZ6BS5dmmn873Y2egdP7KkqW2LWiZ+D9S11PBk6tR8/Abeytj/UtrkTP
wLlXnlX+nVCMnoGH3khJ3h6fg56Bi3MbiEwLSkPPwA2HM5+WyMSjZ+CaxZb3
hmiR6Bk4V3Nb1AOJEPQMfE1jzouVx/3QM/D7qfO9E2e/Qs943GlRgonqz9Az
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
KalzboqndkZ/f3A+1By8EHxqxX06JsWSO6K/G33zaJvdETko+fAfKHtFj+EO
0flKK/AzwflHS/DT4LEV9/XeKfZsj/6F4HylHXhZcO7VArwoOL/ZB7w0OHdp
C14C7sa3z82c25+f1p0sOCdX/qgcfXfa8RV4e8UWuWPj54Lj6E4aN/B42nMi
v1enPV8V9hvfF84VFLcv1vrOb2+Dp6C/KHeO8yL6PUvHwK9w/5Oy8+DY7uLc
udVyrs+LnvsnILcrbQ9tkKflvvdBftuK314G90JXjd+Wg0/jXVuAXwJPEs9A
vUnJ/zbU/eBGGpdgrPXy28I2vE65WPLP8tNjcsfzd1KvCe/6ElwX+RDlH3BL
6ai3Jfh58NfJv8nPjU3jfpfWKX7bqHktu+H69DT2TaN9fH3FOcF1fqRsrftl
t8hrov3Gnpr3lG3kD5C7FV5/n0eeyfXW6I+OjqmfRt8ZuZQyCvxbcNz9DLhL
bv7sdtldbp71cvB2uf2GeM0JjG3j4PhBPmhnZAz2U8uoNxq5Ps0p8U51c+cQ
z8rH5F5vh4N/lY8I5ivkT8XP3Y/cJ7f93ZHZHsXh3Qdum5u3ewDcLjf3rH74
M5hfVP3mWnuj+ajuyEnRNtsjOic4gDqvBudVz4EPU9xR+Hvlw8UFKp7sqJgi
mss6UjYY7ZfENZ8cvXaL1/6Ley+mfqvC8f7+slt+e0LxGPIG+X7NjWA7nql5
GBwHX065TP4g2B40R64BX0GZRZlAGR5sS1qzDg+OJ2Vns6PjyWbInuh/z2wr
R4LXZ56fnZM/31X2EL0G1kHeHh273omsVfEcVl75nHxb8B6AOFr5gYa5ORit
HfOCedYbwE1y8zHy5/ODOWxxvzVy8/Tqk5q5+drrwbvl5mlk/3OC+RjFzAuC
uf858nt6VzQXKq5B66l4gokVr5VdwadVnNcqfr4hmMdQOztpXlbsR5TrfVaa
Q35Ka3vFvkP5iNa0w4LXtUuisfqkXvJp8m3dg/tR1+tTnyq90fp2dFrj1K+H
prhC8YVwTHW7p/p6vn67WD4q+YcmKZ9oHeyPNKZdg3OE39J1mcZX77oyja/i
vSqZ4yDFQ2tSGzqn945EHkRpR9k/OM4Lyd/pPcpzr4qOL66Ojgc7p+fMjG7v
dcFxhOIJ5SmyqZ7pvbOi5fWpLdLL3i6Prqt2Kq7cNzi21DfpW/TNwwtznsor
NZ/EEYtz1BwVdyyus0bpeOA58U7gpeBNS+eEAzNzDuKlFVdKf0zh+Z6LJykc
F2kvoE7puEsxmPhTPbuPfEDFvIn4EPnCFsHc+jYV8x3iPTSf9O2Ko3LueVHj
mft+PadV7jWnQXDMOSLFzMOROwbH5yu5PrGwP6vwzOr8tgI8QLFidJx1hPxb
9DP6g4elOortxeeK11U+q/FsRGlIqYb+Xer0y72uvgXuK59R2gc/ohy0dJz5
cmFOsH0aiy6F9wXE+/VWnpmZc2uefKZ43p6F+Wdxd+0K8/avI3sV5p/FB15b
mlfuSZ8N4/rRzPn+kmjfJR+mGF8xg+L8UYXXX/F+akvHZJODCvPY4ve2T/G8
+KjrSvP9x1fMaWstU9/3Lczzi5/ctPCaJX64CmVEZr60WuF1R3xyrcJ8u3j3
6oXzYnHLAwuvHeLTBhRea8RrVQqvR+JpD8xtF1pD+ynHzsxBVamYQ9e+j/Z/
Fmkeyp4K76e8Jl9FuTUz19op5QgazyFcL8nMo2pfVXNEuc+I4HypDeXgwntG
7yk+qXhv5gvwBcgt0N9BnQ5cXw1+q/CekNop3mZCYbuqCu5cmMNfiTyk8N7Q
isK2uU+yz0YpntfezcTCdi6uaXDh/SBxsPsW3g96s7CvkM/Jk03Jv6xN43yA
BjQYi6eonlm3X8I9Cu81iCtuX3iv5w2NYfr2d7ieFpwfymbaJT/WMPknvfsi
xS+58w7ttY1OdT7L3Hd6jvxC/8JxgvjDrUvXf0n2UDp3e6XwWqo1VX2q+9QO
5avnBeeHP6Xfh6U6C3hfNeTtXO8UHX89Fv3+kakNes6I9C1zZa/BsfqwtH7r
mYrnFNOLk1EsNzj4uQOD9Yrzr43OW+eleHBoqqM4VPGocoNdxamBd0M+k/IC
5QfKlRVPKJZowm+PoDtTnHR0HPF09Dv1TH3DZam++KzW1N8DeU3h3FnvUtyr
3F2xiO5/OOUmylFmJb14qJ1Kx8/ac9F7zw7mvnS/+kFck+JT5aJqq945Pr1X
ezXK/W+Obqd090THw2egvz96v0nvV9v07Q+iG1dxTKV7xZ3dGM256TmKr+RP
FN88pVgNfEsw36i+uVq+MPq+2xQLlX7PGRXnymrnpqkdao/e17h0fXF1DaPH
6tHofuqfxkX5w4BgDke2MTr57n6pjvpBvLti+52jx1r1lestjc4R2pbuT32L
eETZxcBkM+rvianP9U2KLcVZKGeRFIdRs3TevFh5fem89SrwbcnerovmWyYH
842PJXtWex5N39Uo2lYnJ5sUN6UcSd8nTmZqMP8pjlG5iupqTk1Ndn5GmkvC
suEpyd7E2wiLL5X9TkvzvUWy9eujY+QZaUyVO+m5FyKbl87rtZ+l+aVxmoOc
Hpyjyv8objk2eO2uXZpjeTvlR9Ir5mlROt+fXdg/nZ/aIK5Cca/yuovUN8Fj
IP5K7xDXqrrTU/3F0ffcHGxjqq84X3H9zGR7mptXgp+NzgG1Dos/G5fqKP5X
HC6bXBRtoxpXzVvtW6o9isdl28oblAeLV9HzzqrYhvUMceryUfJd6kPZp8Zs
fvQeoOxEucityZakb1WaM9FckE8bkmxjbOp/ve+W1Ofq+7ql26a8+LLSef89
yMtL56b3ImeWzn3vLr0PpX5Wf6uvrgrOKdqkPF17srOD9bJdxfGK58W5NEi8
3y6lc+3//FtpDnFi8nviZxSDi+vQ981Ozzkq91omrv77xDmoz3vkjoHFi4p/
Uwyq3E6xmeI5cQnab9EaKZ51doqpFFu9lZvrFuctzk37Bdo3UPymsxA6E6FY
URyazixUSzGqYtVr0nzUvBSnp3hXuam4QeWkyk2PKJwf6VyKzgIo3tg7d9yg
+EGxpLhH8YTjo/esxMeKl/025ck6iyHeTzmpclPxk+IkTwcfWThf01kX7e0o
99CehjhJcZWnRu//iDcWf6wYT7G0YmqdjVqgNSc3j6m4WjnYX6XPqejc1IGF
+YFxyTaUD4rnWxbNbygmfDGaf9M+vvyt5of2T7RnId5AZ6EOKHxWSmd75qY4
VvGs9p0Vq2yL7CNflvmsjs4rKIdQXi+OVFyE9jTmpHVf67/OBynWF/+h2F0x
vHJ52aryWXGismHlodrDaZn728UbXJ3yEeUlyg21l3NpNP+p/FR56rXBuZ70
e0TnS1dEn02QHxInsyqai9PetPgc5ZOXIX+O3ufS/uDa6H0c7VfeWNqGJyYs
fmuoznyVPnczpOJ8fk3m+OgM6r2Seb/yA9lo5rMWOuelOqq7Iprf05644mnF
1eKKNDfkl3TGT1ycYi7xdTpfoLxWnIHiT8Vm8sMrozlD7cW/H80rai9enOyy
zDY/rnBuon1/5TvKZXRW5dTCXJ9iWuWS4ovVV+LgxMVp73VucN44A333wran
s1vKT7XnoX4LFZ8f0pkZccjiZMTNiIsWpz02Otfulp4jvvYDnjM499619g21
f1i9Yn5QXO4n0byNzqt8C+6aee9e+YjyVuWv2psXv6VzIxoLxduKu7+K3jfU
2Y+vo/cNdW7ks+j9R50PUfwa03h9E70fpzMkn0bzUToPo/3zEHw+SWeExInp
LM/PpfeTXqROs8JnxpYhD8jdNnF6ZW7OX/txJxXm97Tn+1I0/6xzLwNzx/7a
x/myNPf3jNpfmrN7Vt9XmAPU/vgehTntpcg3o3ljnZcYW5g3077zH6XPmSkf
eSuai9b5inXJbyr2fiOa99Z5ibejuWudxxhTmA/UfvQ/pc+KKWepV3h/Tedh
tiu8D6gzMM2VC4GXI2sX3hf47yxN6X2CJeAfS+/PqX+qVnw+TDy8+HjNkd7K
T6P3/nSe54fSe436xtGFczrtoe9Z+MzeC8ifSu/zCe9V+EydxmJy4f0m7Y//
XfqMnXK3jaXP2Cnnalp4j0BtW1t6n1Lt34kyCf3TyK6KUTKfV9yyYk5ZceDv
0fu/OifwW+n9BuWYuyh+yjx2NSrmu3X2Y33pfQjl7C9E733oTNRZhfcBdYbh
nML7dDo/sHXFe/M6i6L9SNmPbODMwvuJOudQs+Lzfzo3cnbh/T6deWhbmNcV
v3tYYe5OZzsbFt6H1fmZHQrvgYp/+730eUflffUL75nqXM0G2nlc5rMxy6P3
ZXS+a0Ppc5PKPddH74nrjMT/AfZdcBY=
          "]], Polygon3DBox[CompressedData["
1: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
7XrIU5Z48B14eBVvXs+99J+vdnGMNQg5n9e+w/FXnZrSxJx/t6v+FiR6aJOW
1GispfhMfDbW1AY38dystenJ3divL+OfnuAN/Xq2FiufVDPqSZzSpeawPvi5
KrUI8+Npfb4zH+txndrnE/OlNbhZmnh01ubeBv9Zx0OfEPwW+I86NcXxwa+A
f6xTkxilpIY0SZMao7Ula3aTN6n5WcuzRjdpk5qhtTtrSBM3qVFZW3qpSS1B
zaZ2s+Y2apMa1eCe3xoD1KhndvH0R2lSk9Lrt8Y4WZOa4vw9nx6h19Cn0n61
i0bc3hjS80s1pJrxxC58e2CvqU/rwjfVsGrMk7voAfWOHPONnjPKHTfq+97s
4u2qh9QLegClnx96A/KxSdrUz91LoV7Ti9SDOkeuVBJrjanGVjna5W1qAnI3
OZBcaD/6ZzL3lTwbn4HP4sqSWGxMN7arR+VUeuyXd4mhxlI9euP/MYw/hHbF
8TPto/28Opxd7m7N3tq9Y2bx3rtw2QPAM3fZg+NeHK8ZTPuokr4/zAe0Hy6J
ja4p19aRJff+u/mmRL/+7VOZ432WJdxKDiWXOq0kV57AMVd/v5NWyaHejzlR
juf+GXOlOe+6NvnRXKhmVDvqYehlyKHlgnLgOfr78dod++d5RMm9GH+/p31q
CReSI8uVfT7uRRnW/97/lnA9OaBc0N+vV7Bz/3zk9HJb9/jMDj4APF8dj3J0
8O4lXqQenl7e1eB1q+Rcc6+aUa1ybhMtqX+wWpuc5e9R06pt5fxy/2dL1ppr
wLVweUnuNeeae/Ujlm+TI/Vy9C+WaBNT9YruLIltxjxjnx7Xe31+lw/cWxJb
jHnGvntK5rZz3NhnTLcWa84w1uunLNsmZ+s1bVPi/RrTje0WJvRCHG+u2aqk
/mQdSj/ikhJuJWeTu6nh1NLXNNF2eiJ6I+5R2FUuUKL15Fxyrz1KvG49Vb3V
McFT19GTenF6IHohehp6G/oretUTcYzUhaPL1c1h5rKLS7ijnFBueEXJ/chx
5Dp6Lnov/gZ/i/6KtcyH+uehhlBLWBMo9F1awhXlkHJJPV73CpiT9X637vWC
eli9rEfs3gI1oN7xF3KOKnuI1C9vlWhLNYva5TXwJVU0iFpET0mtr4euXtPj
0et5v4qeUJOqZX9qolX1pyZrs6dEr+xdjgeraBa1ywsluVhP0PkkH5HLqKH/
KPEg5CJ6jL5/NbzP3ncwhvmwRPuoedQ+35VwLffcuD9HT0RvxBrZmMbvEi1l
jjJXfVviRbhnzPrhSyXcwxxqLn3ONVwlB5mLHgUfVoWD/V3/Lcl15lhz7dMl
uckcZi57uST3ymnkNnos8om3mngvama1szFq8i6eh97M8028kGdKcpE5z9xn
TDG2yPGnBj9VkivNgeZCY6KxUc5vPNMzuaFNzDEe6zG/2/N1vecXS7iN9+S9
vV2iHdV4aj39Q2tD1lgu6FIjsLZkDcZ4ox9oLeph8PngR0q4qZxWbqunIX/+
rInX8UaJNlYDq4WH9vpCfqE/qEfyYZUawlclNQf3uujpWouw5uDeGT1iaxHW
CNbt9Ym1A3OiufFHjq9LaiBDer3s+pVDLt7rcdfjkyXeq8/cZ6/HO3LP5+QP
ekJ6Qz/181cPTS9Nf0j/bM4+frnnSP6t56b3Zk13rC4emV6ZHrrxUQ9NL80a
8jjgB+ToVWok6vM3OW6u4iHoJegBn9TrB+e2HNu9HHJoubcet3tZ5Nx633o6
7nWQU+v16KEv1+t1vfXNev3uO1bPyYmtXVqTMp4+WMKF5LRy28vAy1fRpGrT
O0q4rJxT7rltHy9KG+9NDj1jzz/l1mok94qoYdROaiL3VqlB1ErW6NWL6kF5
rhx+op7PyV+NN3pD2zfxtq1xuFfRmqK1DzXRhD3fUyupwdzbpaZRm1nzt/av
Hp2spF7suxyhSj3Omr+1/y3AE9H/gTGnCueV+7pnxb13S1bZy/J+yVx1zqqN
jS9yQzmz3Nl4Za6SY8o13WPnXrtFquw1fq8kFhuT9XKsuesvLFpFz1r//jGh
9u/6oXsU3KuwpTGlRJPM1OujVfv5JteUo8pV9+/vb6s23ruay71Tl/X50Xqj
c3V4n4Odn3/n7ibaU7/cPTDW1M7qMt9dG3Jaua0acaxebxqrrbepjY35c/Wa
0r1C1szUmo+VaE81qlrVGs3vPf9XL1nPU2tbs5uzST1PbW6N7//3TPlXLD9R
U7pXSo2m1lRDuldLTa62VEO6N0pNp7bcs3/eY7Txjt0T4N4Aa/zu5dZv1Uuf
yrxeomnlYnIyta7+v/fl/ZlvrW+5N8j5NVWTmpL+l/6Yes36mbnryP43W/Mz
15vz9UfcU+DeAvccuDfcmoZ7XfWHrHVcX/JZfqbemjW+T+v4P/INa3pyEzmK
tT73JLs32ZrkqODrOLap4rHotVxbsrZcY3oz1ijde+oeWWuXN5RoLz0+vT5r
9O4tXapK7f6hEi2rhlJLuUfavdLWTEcvqXG6V989rdY+by3Remo8tZ57vt37
vRnnxiupsbo3Vf/G2qs1WPc+u0fM2qw1Tvc6W/Ox9mmN1b287mm19uqeH/f+
bA6eoKRGKzeVo+qPuSfZvcnWYAfSf1uJVlaDqkVvL9HKami1tHtu3XtrDXdQ
SUw3tj/cpFZyU4m2U/O92sdv/RF9Er0V94S4N0Q/0f81cI+Le13cQ+Pen3+X
zHXnvNpOfTqo15vq1RO6PEvfse/aPSjuvdEPdW+Ke2r0R/VD9R9v6e9PTam2
PKnL3HBOODfkR2pNNana1HqMWmzUKvWVA0u0uxpeL9jahXPpjiY61Hqs2muU
Kv66e0bcO+IeGP8X4MYS7atmV7u7J0Q/VT9Wf/P/AL/MDak=
          "]], 
         Polygon3DBox[CompressedData["
1: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
ifMHXznWP/ZRnEtD/P8BxioUqA==
          "]], 
         Polygon3DBox[{{1335, 621, 417, 416, 799, 1256}, {1041, 1040, 1425, 
          820, 821, 1426}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0k1LVFEABuDTmI7O+LUPHGSiXYKILsQhEwJDEZRiYELNGS1njFy0qWWr
slVBH2qEqxn7AfUHarZtKs2vrJbhRlqFm3oOuHjv857LPefcuWe6i8tTd8+E
EJ7LZSX2Sy5/+KEhhE7WmeEn9vCAOR5xnCe8wdTZENJS0S/wAfv4OK7JVxxj
jXm+5y3W49zGEM7Zd0m+GJc5INOJEL4az3CLGfdm9e04177dxt/0m+7tcI67
LLIke/o897nAgziP33mbh1zkj7gnf0atm7XuHfllXOGgPPSun43v8WNcl+94
nVVe5Uvm+Ii9vM/zzEpZT7LAv/YY428OcY8X2e87PLNXV3zGs/FARqRDHeY/
vmV7/B3clDa9xJq0xm/BqqT1detO6yl9VS/oLfoLPa8360/1a/qGJI0n+Uaa
9Am+lsZ4dlyT+FpPzBnVEVZcruiJeO768el/6T9UkUL3
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{962, 1253, 618, 1259, 1254, 1449, 1154, 1260, 1255, 1450, 
       1155, 1261, 1422, 1451, 1156, 1262, 1423, 1452, 1157, 1263, 1424, 1453,
        1158, 1264, 1649, 1256, 1335, 1648, 1265, 1257, 1454, 1159, 1266, 
       1258, 1328, 1448, 1660, 1160, 1267, 1314, 1315, 1307, 1659, 1322, 1161,
        1268, 1316, 1317, 1455, 1308, 1323, 1162, 1269, 1318, 1657, 1446, 
       1309, 1324, 1163, 1270, 1447, 1658, 1319, 1311, 1325, 1164, 1271, 1650,
        1320, 1321, 1313, 1326, 1165, 1272}], 
      Line3DBox[{964, 1336, 1552, 963, 624, 965, 1456, 1166, 966, 1457, 1167, 
       967, 1458, 1168, 968, 1459, 1169, 969, 1460, 1337, 1553, 970, 1338, 
       1554, 971, 1327, 1461, 1170, 1334, 1306, 1462, 1171, 1329, 1444, 1463, 
       1172, 1330, 1445, 1464, 1173, 1331, 1661, 1310, 1174, 1332, 1662, 1312,
        1175, 1333}], 
      Line3DBox[{973, 1339, 1555, 972, 1340, 1556, 974, 1465, 1176, 975, 1466,
        1177, 976, 1467, 1178, 977, 1468, 1179, 978, 1469, 1341, 1557, 979, 
       1342, 1558, 980, 1343, 1559, 981, 1470, 1180, 982, 1471, 1181, 983, 
       1472, 1182, 984, 1473, 1183, 985, 1474, 1184, 986}], 
      Line3DBox[{988, 1344, 1560, 987, 1345, 1561, 989, 1346, 1562, 990, 1475,
        1185, 991, 1476, 1186, 992, 1477, 1187, 993, 1478, 1347, 1563, 994, 
       1348, 1564, 995, 1349, 1565, 996, 1350, 1566, 997, 1479, 1188, 998, 
       1480, 1189, 999, 1481, 1190, 1000, 1482, 1191, 1001}], 
      Line3DBox[{1003, 1351, 1567, 1002, 1352, 1568, 1004, 1353, 1569, 1005, 
       1354, 1570, 1006, 1483, 1192, 1007, 1484, 1193, 1008, 1485, 1355, 1571,
        1009, 1356, 1572, 1010, 1357, 1573, 1011, 1358, 1574, 1012, 1359, 
       1575, 1013, 1486, 1194, 1014, 1487, 1195, 1015, 1488, 1196, 1016}], 
      Line3DBox[{1018, 1360, 1576, 1017, 1361, 1577, 1019, 1362, 1578, 1020, 
       1363, 1579, 1021, 1364, 1580, 1022, 1489, 1197, 1023, 1490, 1365, 1581,
        1024, 1366, 1582, 1025, 1367, 1583, 1026, 1368, 1584, 1027, 1369, 
       1585, 1028, 1370, 1586, 1029, 1491, 1198, 1030, 1492, 1199, 1031}], 
      Line3DBox[{1035, 1493, 1200, 1033, 1494, 1201, 1037, 1495, 1202, 1039, 
       1496, 1203, 1041, 1426, 1497, 1204, 1297, 1428, 1498, 1205, 1044, 1500,
        699, 1046, 1501, 1206, 1048, 1502, 1207, 1050, 1503, 1208, 1052, 1504,
        1209, 1054, 1505, 1210, 1056, 1506, 1211, 1058, 1508, 1213, 1060}], 
      Line3DBox[{1059, 1212, 1507, 1057, 1599, 1381, 1055, 1598, 1380, 1053, 
       1597, 1379, 1051, 1596, 1378, 1049, 1595, 1377, 1047, 1594, 1376, 1045,
        1593, 1375, 1499, 1043, 1274, 1592, 1427, 1042, 1273, 1591, 1425, 
       1040, 1590, 1374, 1038, 1589, 1373, 1036, 1588, 1372, 1032, 1587, 1371,
        1034}], 
      Line3DBox[{1062, 1382, 1600, 1061, 1509, 1214, 1063, 1510, 1215, 1064, 
       1429, 1511, 1216, 1298, 1430, 1512, 1217, 1299, 1431, 1513, 1218, 1065,
        1514, 1383, 1601, 1066, 1384, 1602, 1067, 1515, 1219, 1068, 1516, 
       1220, 1069, 1517, 1221, 1070, 1518, 1222, 1071, 1519, 1223, 1072, 1520,
        1224, 1073}], 
      Line3DBox[{1075, 1385, 1603, 1074, 1386, 1604, 1076, 1275, 1521, 1225, 
       1300, 1432, 1522, 1226, 1301, 1433, 1523, 1227, 1302, 1653, 1276, 1228,
        1077, 1524, 1387, 1605, 1078, 1388, 1606, 1079, 725, 1080, 1525, 1229,
        1081, 1526, 1230, 1082, 1527, 1231, 1083, 1528, 1232, 1084, 1529, 
       1233, 1085}], 
      Line3DBox[{1087, 1389, 1607, 1086, 1390, 1608, 1088, 1277, 1391, 1651, 
       1303, 1434, 1530, 1234, 1304, 1654, 1278, 1235, 1305, 1655, 1279, 1236,
        1089, 1531, 1392, 1609, 1090, 1393, 1610, 1091, 1394, 1611, 1092, 
       1532, 1237, 1093, 1533, 1238, 1094, 1534, 1239, 1095, 1535, 1240, 1096,
        1536, 1241, 1097}], 
      Line3DBox[{1099, 1395, 1612, 1098, 1396, 1613, 1100, 270, 885, 301}], 
      Line3DBox[{1109, 1245, 1541, 1108, 1244, 1540, 1107, 1243, 1539, 1106, 
       1242, 1538, 1105, 1617, 1400, 1104, 1616, 1399, 1103, 1615, 1398, 1102,
        1614, 1397, 1537, 1101, 273, 888, 303, 272, 887, 302, 271, 845, 271}],
       Line3DBox[{1111, 1401, 1618, 1110, 1280, 1281, 1656, 1112, 1282, 1619, 
       1435, 1113, 1436, 1620, 1283, 1114, 855, 1284, 1115, 1542, 1246, 1116, 
       1543, 1402, 1621, 1117, 1403, 1622, 1118, 1404, 1623, 1119, 1405, 1624,
        1120, 1406, 1625, 1121, 1544, 1247, 1122, 1545, 1248, 1123, 1546, 
       1249, 1124}], 
      Line3DBox[{1126, 1407, 1626, 1125, 1285, 857, 1127, 1286, 1627, 1437, 
       1128, 1438, 1628, 1287, 1129, 1439, 1629, 1288, 1130, 1547, 1250, 1131,
        1548, 1408, 1630, 1132, 1409, 1631, 1133, 1410, 1632, 1134, 1411, 
       1633, 1135, 1412, 1634, 1136, 1413, 1635, 1137, 1549, 1251, 1138, 1550,
        1252, 1139}], 
      Line3DBox[{1153, 1296, 1295, 1652, 1152, 1647, 1421, 1151, 1646, 1420, 
       1150, 1645, 1419, 1149, 1644, 1418, 1148, 1643, 1417, 1147, 1642, 1416,
        1146, 1641, 1415, 1551, 1145, 1640, 1414, 1144, 1294, 1639, 1443, 
       1143, 1293, 1638, 1442, 1142, 1441, 1637, 1292, 1141, 1440, 1636, 1291,
        1140, 863, 1289, 1290}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{409, 908, 794, 810, 795, 1451, 410, 626, 1457, 428, 637, 
       1466, 443, 652, 1475, 458, 1570, 667, 473, 1579, 682, 488, 1590, 697, 
       1496, 503, 824, 825, 1511, 518, 831, 878, 832, 1522, 533, 838, 882, 
       839, 1530, 548, 845, 886, 846, 563, 1620, 853, 891, 854, 578, 1628, 
       859, 895, 860, 593, 1638, 866, 899, 867, 870}], 
      Line3DBox[{411, 909, 796, 811, 797, 1452, 412, 627, 1458, 429, 638, 
       1467, 444, 653, 1476, 459, 668, 1483, 474, 1580, 683, 489, 1591, 820, 
       821, 1497, 504, 826, 875, 827, 1512, 519, 833, 879, 834, 1523, 534, 
       840, 883, 1654, 841, 549, 847, 887, 848, 564, 855, 892, 856, 579, 1629,
        861, 896, 862, 594, 1639, 868, 900, 869, 608}], 
      Line3DBox[{413, 910, 911, 812, 798, 1453, 414, 628, 1459, 430, 639, 
       1468, 445, 654, 1477, 460, 669, 1484, 475, 684, 1489, 490, 1592, 822, 
       874, 823, 1498, 505, 828, 876, 829, 1513, 520, 835, 880, 1653, 836, 
       535, 842, 884, 1655, 843, 550, 849, 888, 850, 565, 758, 1542, 580, 771,
        1547, 595, 1640, 784, 609}], 
      Line3DBox[{415, 913, 914, 813, 1649, 799, 416, 629, 1460, 431, 640, 
       1469, 446, 655, 1478, 461, 670, 1485, 476, 685, 1490, 491, 698, 1499, 
       1500, 506, 710, 1514, 521, 722, 1524, 536, 734, 1531, 551, 746, 1537, 
       566, 759, 1543, 581, 772, 1548, 596, 785, 1551, 610}], 
      Line3DBox[{421, 924, 802, 949, 803, 1455, 941, 931, 929, 953, 930, 1463,
        436, 645, 1471, 451, 660, 1479, 466, 1575, 675, 481, 1585, 690, 496, 
       1597, 703, 1504, 511, 715, 1517, 526, 727, 1526, 541, 739, 1533, 556, 
       751, 1538, 571, 1625, 764, 586, 1634, 777, 601, 1645, 790, 615}], 
      Line3DBox[{422, 925, 804, 950, 805, 942, 1657, 934, 932, 955, 933, 1464,
        437, 646, 1472, 452, 661, 1480, 467, 676, 1486, 482, 1586, 691, 497, 
       1598, 704, 1505, 512, 716, 1518, 527, 728, 1527, 542, 740, 1534, 557, 
       752, 1539, 572, 765, 1544, 587, 1635, 778, 602, 1646, 791, 616}], 
      Line3DBox[{423, 926, 927, 818, 944, 943, 1658, 937, 935, 956, 1661, 936,
        438, 647, 1473, 453, 662, 1481, 468, 677, 1487, 483, 692, 1491, 498, 
       1599, 705, 1506, 513, 717, 1519, 528, 729, 1528, 543, 741, 1535, 558, 
       753, 1540, 573, 766, 1545, 588, 779, 1549, 603, 1647, 792, 617}], 
      Line3DBox[{424, 903, 904, 819, 946, 1650, 945, 940, 938, 957, 1662, 939,
        439, 648, 1474, 454, 663, 1482, 469, 678, 1488, 484, 693, 1492, 499, 
       706, 1507, 1508, 514, 718, 1520, 529, 730, 1529, 544, 742, 1536, 559, 
       754, 1541, 574, 767, 1546, 589, 780, 1550, 604, 871, 1652, 872, 873}], 
      Line3DBox[{605, 781, 863, 590, 768, 1626, 575, 755, 1618, 560, 743, 
       1612, 545, 731, 1607, 530, 719, 1603, 515, 707, 1600, 500, 1493, 694, 
       1587, 485, 679, 1576, 470, 664, 1567, 455, 649, 1560, 440, 634, 1555, 
       425, 623, 1552, 406, 618, 807, 902, 901, 806}], 
      Line3DBox[{606, 782, 897, 864, 1636, 591, 769, 893, 857, 576, 756, 889, 
       1656, 851, 561, 744, 1613, 546, 732, 1608, 531, 720, 1604, 516, 1509, 
       708, 501, 1494, 695, 1588, 486, 680, 1577, 471, 665, 1568, 456, 650, 
       1561, 441, 635, 1556, 426, 624, 407, 1449, 619, 808, 327, 905}], 
      Line3DBox[{607, 783, 898, 865, 1637, 592, 770, 894, 858, 1627, 577, 757,
        890, 852, 1619, 562, 745, 885, 844, 547, 733, 1651, 881, 837, 532, 
       1521, 721, 877, 830, 517, 1510, 709, 502, 1495, 696, 1589, 487, 681, 
       1578, 472, 666, 1569, 457, 651, 1562, 442, 1465, 636, 427, 1456, 625, 
       408, 1450, 620, 809, 793, 907, 906}], 
      Line3DBox[{611, 786, 1641, 597, 773, 1630, 582, 760, 1621, 567, 747, 
       1614, 552, 735, 1609, 537, 723, 1605, 522, 711, 1601, 507, 699, 1593, 
       492, 686, 1581, 477, 671, 1571, 462, 656, 1563, 447, 641, 1557, 432, 
       630, 1553, 417, 621, 1648, 814, 916, 915, 912}], 
      Line3DBox[{612, 787, 1642, 598, 774, 1631, 583, 761, 1622, 568, 748, 
       1615, 553, 736, 1610, 538, 724, 1606, 523, 712, 1602, 508, 1501, 700, 
       1594, 493, 687, 1582, 478, 672, 1572, 463, 657, 1564, 448, 642, 1558, 
       433, 631, 1554, 418, 1454, 622, 815, 919, 918, 917}], 
      Line3DBox[{613, 788, 1643, 599, 775, 1632, 584, 762, 1623, 569, 749, 
       1616, 554, 737, 1611, 539, 725, 524, 1515, 713, 509, 1502, 701, 1595, 
       494, 688, 1583, 479, 673, 1573, 464, 658, 1565, 449, 643, 1559, 434, 
       1461, 632, 960, 951, 961, 419, 1660, 959, 958, 816, 800, 921, 920}], 
      Line3DBox[{614, 789, 1644, 600, 776, 1633, 585, 763, 1624, 570, 750, 
       1617, 555, 1532, 738, 540, 1525, 726, 525, 1516, 714, 510, 1503, 702, 
       1596, 495, 689, 1584, 480, 674, 1574, 465, 659, 1566, 450, 1470, 644, 
       435, 1462, 633, 952, 928, 954, 420, 948, 1659, 947, 817, 801, 923, 
       922}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Rho]\"", TraditionalForm], 
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"C(0)\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{300.6746560526953, 226.51134697214906`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 50}, {0, 1}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.9027480704096225`, -0.15510649027714393`, 1.732049542134149},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.678221966147588*^9, 3.678436462779587*^9, 3.6785500284797*^9, {
   3.678550171316196*^9, 3.678550191936727*^9}, {3.678716410516066*^9, 
   3.678716451617931*^9}, {3.678716487383745*^9, 3.6787164971333323`*^9}, {
   3.678716580196487*^9, 3.678716589074972*^9}, {3.6787166277461033`*^9, 
   3.678716636473835*^9}, {3.6787168446751213`*^9, 3.678716860438266*^9}, 
   3.6787168988691998`*^9, {3.678716939994894*^9, 3.678716966527564*^9}, 
   3.678717007979105*^9, 3.678717302430998*^9, 3.678717747764655*^9, 
   3.678717955940105*^9, 3.678718071600807*^9, 3.678718231460524*^9, 
   3.678718589725439*^9, 3.678718932735272*^9, 3.678718965135652*^9, 
   3.678719018283204*^9, 3.678719131058365*^9, 3.6787206274877577`*^9, 
   3.6787207771787024`*^9, 3.678729952800159*^9, 3.6787327324766283`*^9, {
   3.678733005827497*^9, 3.678733025324135*^9}, 3.678825413666913*^9, 
   3.678835361877551*^9, 3.678835534461825*^9, 3.678939346278943*^9, 
   3.679061121600978*^9, 3.679066922325808*^9, 3.679070211755492*^9, 
   3.679071215759869*^9, 3.6790972293404713`*^9}],

Cell[TextData[{
 "HMC vs. Ficticious Sample Time, ",
 StyleBox["t ",
  FontSlant->"Italic"],
 "for fixed \[Phi], \[Tau]"
}], "Subsection",
 CellChangeTimes->{{3.67909606163861*^9, 3.679096114837829*^9}, {
   3.6790961513347607`*^9, 3.67909615426823*^9}, {3.679096292772253*^9, 
   3.679096359841342*^9}, 3.6790965914874783`*^9}],

Cell["Plotting for non unit acceptance and a small mass,", "Text",
 CellChangeTimes->{{3.678939417721225*^9, 3.678939437328787*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "traj", ",", " ", "steps", ",", " ", "dtau", ",", " ", "t", ",", " ", 
    "pacc", ",", "rate", ",", " ", "phi", ",", " ", "mass"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"steps", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtau", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mass", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"traj", " ", "=", " ", 
   RowBox[{"steps", "*", "dtau"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phi", " ", "=", " ", 
   RowBox[{"traj", "*", "mass"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rate", " ", "=", " ", 
   RowBox[{"1", "/", "traj"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pacc", " ", "=", " ", "0.65"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"CHMCn", "[", 
    RowBox[{"t", ",", " ", "phi", ",", "pacc", ",", " ", "rate"}], "]"}], ",",
    " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "tf"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<C(t)\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.678939459876808*^9, 3.6789394713388653`*^9}, {
  3.679096503184976*^9, 3.679096504088491*^9}, {3.679096543852662*^9, 
  3.679096544679185*^9}, {3.679097052184111*^9, 3.679097073731155*^9}, {
  3.679097222127699*^9, 3.6790972283966637`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
Lt9teXtbF+kt+Zjm5JTgf6I7orc=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"t\"", TraditionalForm], 
    FormBox["\"C(t)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0., 49.99999897959184}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.678939479451189*^9, 3.679061123020035*^9, 3.679066923600338*^9, 
   3.679070213017111*^9, 3.6790712170077*^9, {3.679096507970118*^9, 
   3.679096537301732*^9}, 3.6790965996902323`*^9, 3.679097077927808*^9, 
   3.679097234032449*^9}]
}, Open  ]],

Cell["", "Subsection",
 CellChangeTimes->{{3.678188585872508*^9, 3.678188600837685*^9}, {
   3.678189387441862*^9, 3.678189419441227*^9}, 3.678192560960918*^9, {
   3.678192926500181*^9, 3.6781929313712*^9}, {3.678202332404532*^9, 
   3.67820233412418*^9}, {3.678202369057662*^9, 3.678202372700097*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unit Test Results", "Chapter",
 CellChangeTimes->{{3.679056951654107*^9, 3.679056964068139*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "bRng", ",", " ", "thetaRng", ",", " ", "rhoRng", ",", " ", "phiRng", ",", 
   " ", "tauRng", ",", " ", "tRng", ",", " ", "nVars", " ", ",", " ", 
   "ltSave", ",", " ", "iacSave", ",", " ", "iltSave", ",", " ", "prec", ",", 
   " ", "zero"}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.679062936931716*^9, 3.6790629638539886`*^9}, {
  3.6790651925322104`*^9, 3.679065193320188*^9}, {3.6790661631766863`*^9, 
  3.67906616967257*^9}, {3.679068968199992*^9, 3.6790689688961763`*^9}, {
  3.67907681002386*^9, 3.679076820508209*^9}}],

Cell["\<\
Here are compiled a selectino of results to compare with the python \
implementation to verify correctness.\
\>", "Text",
 CellChangeTimes->{{3.6790569661434507`*^9, 3.6790570076024237`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"prec", " ", "=", " ", "4"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Number", " ", "Precision"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inf", " ", "=", " ", 
    SuperscriptBox["10", "14"]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Inifinity", " ", "threshold"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zero", " ", "=", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "14"}]]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Zero", " ", "threshold"}], " ", "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.679068975045005*^9, 3.679068995655014*^9}, {
  3.679074461391883*^9, 3.679074494133082*^9}, {3.679076812256119*^9, 
  3.6790768123586807`*^9}}],

Cell["Test Ranges", "Subsubsection",
 CellChangeTimes->{{3.6790578758332787`*^9, 3.679057886436117*^9}, {
  3.679061042040143*^9, 3.679061042518301*^9}}],

Cell["\<\
The test ranges are selected to hit key values as well as floating points \
that shouldn\[CloseCurlyQuote]t allow any simple cancellations,\
\>", "Text",
 CellChangeTimes->{{3.679061046197274*^9, 3.67906108764485*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bRng", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{"0", ",", " ", "4.192"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thetaRng", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "\[Pi]"}], ",", "0.12459"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rhoRng", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{"1", ",", " ", "0.539"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phiRng", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{"0.07", ",", " ", "4.79"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tauRng", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0.07", ",", " ", "2.7"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tRng", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", " ", "1", ",", " ", "5.79"}], "}"}]}], ";"}]}], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.679057912844595*^9, 3.67905793765034*^9}, {
  3.679057983153281*^9, 3.6790579878566923`*^9}, {3.6790580379671583`*^9, 
  3.6790580825654488`*^9}, {3.679060160540641*^9, 3.6790603814699*^9}, {
  3.6790604531235237`*^9, 3.679060821140974*^9}, {3.679060987907099*^9, 
  3.679061033656726*^9}, {3.679061147178084*^9, 3.679061423376424*^9}, {
  3.6790614903809423`*^9, 3.67906150050273*^9}, {3.679061752042818*^9, 
  3.679061755082274*^9}, {3.679062088660103*^9, 3.679062090219462*^9}, {
  3.679062170474489*^9, 3.679062176552289*^9}, {3.679062242516913*^9, 
  3.67906227978655*^9}, {3.679063917145699*^9, 3.67906391724724*^9}, {
  3.679064492882595*^9, 3.679064530745523*^9}, {3.679065999322784*^9, 
  3.6790660016016207`*^9}}],

Cell["Save Names", "Subsubsection",
 CellChangeTimes->{{3.6790578758332787`*^9, 3.679057886436117*^9}, {
  3.679061042040143*^9, 3.679061042518301*^9}, {3.6790660262082367`*^9, 
  3.67906602732813*^9}}],

Cell["\<\
The save locations for the data created to be compared to the python \
implementation,\
\>", "Text",
 CellChangeTimes->{{3.6790661375667458`*^9, 3.679066157896736*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ltSave", " ", "=", " ", "\"\<__MMunittestLTexp_LT.csv\>\""}], 
   ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"laplace", " ", "transform"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"iacSave", "=", "\"\<__MMunittestLTexp_iAC.csv\>\""}], ";"}], " ", 
  
  RowBox[{"(*", " ", 
   RowBox[{"integrated", " ", "autocorrelation"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"iltSave", "=", "\"\<__MMunittestLTexp_iLT.csv\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"inverse", " ", "laplace", " ", "transform", " ", 
    RowBox[{"(", "autocorrelations", ")"}]}], " ", "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.67906603991214*^9, 3.679066131449315*^9}, {
  3.67906642790904*^9, 3.679066434106975*^9}, {3.679068870533268*^9, 
  3.679068938305018*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Laplace Transforms", "Section",
 CellChangeTimes->{{3.679057085382023*^9, 3.679057090615081*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"ltDataset", ",", " ", "nVars"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.679065305071731*^9, 3.679066292288113*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nVars", " ", "=", " ", "5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Number", " ", "of", " ", "Function", " ", 
    RowBox[{"Variables", ":", " ", 
     RowBox[{"To", " ", "create", " ", "Table"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6790570662482758`*^9, 3.679057073975793*^9}, {
   3.679057662677533*^9, 3.679057663547969*^9}, {3.679061130441186*^9, 
   3.679061130505837*^9}, {3.679062362974847*^9, 3.679062615711731*^9}, {
   3.6790626529920177`*^9, 3.679062904432295*^9}, {3.67906297240806*^9, 
   3.6790629756222267`*^9}, 3.679064961922614*^9, {3.67906520546733*^9, 
   3.679065250381364*^9}, {3.6790653064012537`*^9, 3.67906530774436*^9}, {
   3.679066182648841*^9, 3.679066192298048*^9}, {3.679066290185261*^9, 
   3.679066291104747*^9}, {3.679066828104354*^9, 3.6790668505965757`*^9}, {
   3.679067335076661*^9, 3.679067696761799*^9}, {3.6790680775597277`*^9, 
   3.6790680823496428`*^9}, {3.679068509786077*^9, 3.679068530288*^9}, {
   3.6790686788033113`*^9, 3.6790687763175898`*^9}, {3.679068832484454*^9, 
   3.679068859236195*^9}, {3.679069005911765*^9, 3.6790690082876377`*^9}, {
   3.679070098255464*^9, 3.679070126724306*^9}, {3.6790701577536697`*^9, 
   3.679070177114786*^9}, {3.679070255635233*^9, 3.679070259185068*^9}, {
   3.679070533888596*^9, 3.679070589772599*^9}, {3.67907112137883*^9, 
   3.679071123204687*^9}, {3.6790712816085873`*^9, 3.6790714039357853`*^9}, {
   3.6790715246785316`*^9, 3.6790718311022167`*^9}, {3.679071885385289*^9, 
   3.6790718975246677`*^9}, {3.6790724972271833`*^9, 3.679072529815874*^9}, {
   3.6790725981352262`*^9, 3.6790726315076237`*^9}, {3.6790726964806767`*^9, 
   3.679072745420443*^9}, {3.6790739365504827`*^9, 3.679074132971834*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ltDataset", " ", "=", " ", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
        "\"\<beta\>\"", ",", "\"\<phi\>\"", ",", " ", "\"\<theta\>\"", ",", 
         " ", "\"\<p_acc\>\"", ",", "\"\<tau\>\"", ",", "\[IndentingNewLine]",
          " ", "\"\<F[beta, phi, theta, p_acc, 1/tau]\>\"", ",", 
         "\[IndentingNewLine]", " ", 
         "\"\<fG[beta, phi, theta, p_acc, tau]\>\""}], "}"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Title", " ", "Line"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\[Beta]", ",", "\[Phi]", ",", " ", "\[Theta]", ",", "\[Rho]", 
               ",", "\[Tau]", ",", " ", 
               RowBox[{"F", "[", 
                RowBox[{
                "\[Beta]", ",", "\[Phi]", ",", " ", "\[Theta]", ",", "\[Rho]",
                  ",", " ", 
                 FractionBox["1", "\[Tau]"]}], "]"}], ",", " ", 
               RowBox[{"fG", "[", 
                RowBox[{
                "\[Beta]", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", 
                 "\[Rho]", ",", " ", "\[Tau]"}], "]"}]}], " ", "}"}], ",", 
             RowBox[{"(*", 
              RowBox[{"Columns", " ", "in", " ", "Table"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\[Beta]", ",", " ", "bRng"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Phi]", ",", " ", "phiRng"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Theta]", ",", " ", "thetaRng"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Rho]", ",", "rhoRng"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Tau]", ",", " ", "tauRng"}], "}"}]}], " ", "]"}], 
           RowBox[{"(*", 
            RowBox[{"Iterate", " ", 
             RowBox[{"ranges", ".", " ", "Silence"}], " ", 
             RowBox[{"errors", "."}]}], "*)"}], "\[IndentingNewLine]", "/.", 
           " ", 
           RowBox[{
            RowBox[{"x_", "/;", 
             RowBox[{"NumericQ", "[", "x", "]"}]}], " ", ":>", 
            RowBox[{"Re", "[", 
             RowBox[{"ComplexExpand", "[", "x", "]"}], "]"}]}]}], " ", 
          RowBox[{"(*", " ", 
           RowBox[{"Remove", " ", "zero", " ", "complex", " ", "parts"}], " ",
            "*)"}], "\[IndentingNewLine]", "/.", 
          RowBox[{
           RowBox[{"x_", "/;", " ", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"Simplify", "[", "x", "]"}], "]"}], ">", " ", "inf"}]}],
            " ", "\[RuleDelayed]", " ", "\"\<NaN\>\""}]}], 
         RowBox[{"(*", " ", 
          RowBox[{
          "replace", " ", "floating", " ", "point", " ", "infinities"}], " ", 
          "*)"}], "\[IndentingNewLine]", "/.", 
         RowBox[{
          RowBox[{"x_", "/;", " ", 
           RowBox[{
            RowBox[{"Abs", "[", "x", "]"}], "<", " ", "zero"}]}], " ", 
          "\[RuleDelayed]", " ", "0"}]}], 
        RowBox[{"(*", " ", 
         RowBox[{"replace", " ", "floating", " ", "point", " ", "zeros"}], 
         " ", "*)"}], "\[IndentingNewLine]", "//", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"#", ",", "prec"}], "]"}], "&"}]}], " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Force", " ", "number", " ", "precision"}], " ", "*)"}], 
       "\[IndentingNewLine]", "//", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"#", ",", 
          RowBox[{"nVars", "-", "1"}]}], "]"}], "&"}]}]}], "]"}], " ", "//", 
    "Quiet"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Flatten", " ", "to", " ", 
    RowBox[{"List", ".", " ", "Silence"}], " ", "Errors"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ltDataset", "//", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], "&"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Create", " ", "Grid"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.679074138376869*^9, 3.6790742860285797`*^9}, {
   3.679074321613174*^9, 3.6790744560711927`*^9}, {3.679074506936219*^9, 
   3.679074547370248*^9}, {3.6790750790518513`*^9, 3.679075152396902*^9}, {
   3.679075183480541*^9, 3.6790752872375793`*^9}, {3.6790753875610437`*^9, 
   3.679075420367806*^9}, {3.679075539017832*^9, 3.679075609807604*^9}, {
   3.679075659807428*^9, 3.679075683165296*^9}, {3.679075795159906*^9, 
   3.679075802455372*^9}, {3.679075837702816*^9, 3.679076095085272*^9}, 
   3.679076674737576*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"beta\"\>", "\<\"phi\"\>", "\<\"theta\"\>", "\<\"p_acc\"\>", \
"\<\"tau\"\>", "\<\"F[beta, phi, theta, p_acc, 1/tau]\"\>", "\<\"fG[beta, \
phi, theta, p_acc, tau]\"\>"},
    {"0", "0.07`", "6.2831853071795864769252867665590083999`4.", "1.`4.", 
     "0.07`", "\<\"NaN\"\>", "\<\"NaN\"\>"},
    {"0", "0.07`", "6.2831853071795864769252867665590083999`4.", "1.`4.", 
     "2.7`", "\<\"NaN\"\>", "\<\"NaN\"\>"},
    {"0", "0.07`", "6.2831853071795864769252867665590083999`4.", "0.539`", 
     "0.07`", "\<\"NaN\"\>", "\<\"NaN\"\>"},
    {"0", "0.07`", "6.2831853071795864769252867665590083999`4.", "0.539`", 
     "2.7`", "\<\"NaN\"\>", "\<\"NaN\"\>"},
    {"0", "0.07`", "0.12459`", "1.`4.", "0.07`", "65.54723434797897`", 
     "489043.2892622897`"},
    {"0", "0.07`", "0.12459`", "1.`4.", "2.7`", "65.54723434797897`", 
     "489043.2892622897`"},
    {"0", "0.07`", "0.12459`", "0.539`", "0.07`", "186.31024589437666`", 
     "14376.525985865952`"},
    {"0", "0.07`", "0.12459`", "0.539`", "2.7`", "186.31024589437664`", 
     "14376.525985865952`"},
    {"0", "4.79`", "6.2831853071795864769252867665590083999`4.", "1.`4.", 
     "0.07`", "\<\"NaN\"\>", "\<\"NaN\"\>"},
    {"0", "4.79`", "6.2831853071795864769252867665590083999`4.", "1.`4.", 
     "2.7`", "\<\"NaN\"\>", "\<\"NaN\"\>"},
    {"0", "4.79`", "6.2831853071795864769252867665590083999`4.", "0.539`", 
     "0.07`", "\<\"NaN\"\>", "\<\"NaN\"\>"},
    {"0", "4.79`", "6.2831853071795864769252867665590083999`4.", "0.539`", 
     "2.7`", "\<\"NaN\"\>", "\<\"NaN\"\>"},
    {"0", "4.79`", "0.12459`", "1.`4.", "0.07`", "64.75645433384555`", 
     "131.85773953097834`"},
    {"0", "4.79`", "0.12459`", "1.`4.", "2.7`", "64.75645433384555`", 
     "131.85773953097834`"},
    {"0", "4.79`", "0.12459`", "0.539`", "0.07`", "66.4924546122828`", 
     "132.84695337799198`"},
    {"0", "4.79`", "0.12459`", "0.539`", "2.7`", "66.49245461228281`", 
     "132.84695337799198`"},
    {"4.192`", "0.07`", "6.2831853071795864769252867665590083999`4.", "1.`4.",
      "0.07`", "3.091912954455337`", "110.80668258975385`"},
    {"4.192`", "0.07`", "6.2831853071795864769252867665590083999`4.", "1.`4.",
      "2.7`", "0.08834495270178666`", "0.20148365157682024`"},
    {"4.192`", "0.07`", "6.2831853071795864769252867665590083999`4.", 
     "0.539`", "0.07`", "3.3425259127804288`", "19.746979662332418`"},
    {"4.192`", "0.07`", "6.2831853071795864769252867665590083999`4.", 
     "0.539`", "2.7`", "0.08834821631964151`", "0.18572650960417747`"},
    {"4.192`", "0.07`", "0.12459`", "1.`4.", "0.07`", "3.0971582176102626`", 
     "102.28045421707034`"},
    {"4.192`", "0.07`", "0.12459`", "1.`4.", "2.7`", "0.08834495732521602`", 
     "0.2003770242655788`"},
    {"4.192`", "0.07`", "0.12459`", "0.539`", "0.07`", "3.3426214585897647`", 
     "18.8105011842201`"},
    {"4.192`", "0.07`", "0.12459`", "0.539`", "2.7`", "0.08834821746885732`", 
     "0.18483529519148437`"},
    {"4.192`", "4.79`", "6.2831853071795864769252867665590083999`4.", "1.`4.",
      "0.07`", "1.705523014707879`", "3.5190873616707137`"},
    {"4.192`", "4.79`", "6.2831853071795864769252867665590083999`4.", "1.`4.",
      "2.7`", "0.06991322851469933`", "0.154386912286464`"},
    {"4.192`", "4.79`", "6.2831853071795864769252867665590083999`4.", 
     "0.539`", "0.07`", "1.9871471857650043`", "3.8911516792447225`"},
    {"4.192`", "4.79`", "6.2831853071795864769252867665590083999`4.", 
     "0.539`", "2.7`", "0.07850309461972725`", "0.16191849673612035`"},
    {"4.192`", "4.79`", "0.12459`", "1.`4.", "0.07`", "1.6619645208277156`", 
     "3.415376749847867`"},
    {"4.192`", "4.79`", "0.12459`", "1.`4.", "2.7`", "0.06991534219962499`", 
     "0.1536096060490862`"},
    {"4.192`", "4.79`", "0.12459`", "0.539`", "0.07`", "1.9569226655462537`", 
     "3.793728145517367`"},
    {"4.192`", "4.79`", "0.12459`", "0.539`", "2.7`", "0.07850354954572443`", 
     "0.16117865926730093`"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.679075996312811*^9, 3.679076025333997*^9}, {
   3.679076059943103*^9, 3.679076088875839*^9}, 3.679076675359557*^9, 
   3.6790767704320707`*^9, {3.679076822961953*^9, 3.679076831565762*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrated Autocorrelation Functions", "Section",
 CellChangeTimes->{{3.6790571216061087`*^9, 3.679057133970909*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"iacDataset", ",", " ", "nVars"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.679065300461459*^9, 3.6790653013209257`*^9}, 
   3.679066280368844*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nVars", " ", "=", " ", "4"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iacDataset", " ", "=", " ", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
        "\"\<phi\>\"", ",", " ", "\"\<theta\>\"", ",", " ", "\"\<p_acc\>\"", 
         ",", " ", "\"\<tau\>\"", ",", "\[IndentingNewLine]", 
         "\"\<A[phi, theta, p_acc]\>\"", ",", " ", "\[IndentingNewLine]", 
         "\"\<F[0, phi, theta, p_acc, 1/tau]\>\"", ",", " ", 
         "\[IndentingNewLine]", "\"\<fG[0, phi, theta, p_acc, tau]\>\""}], 
        "}"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Title", " ", "Line"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\[Phi]", ",", " ", "\[Theta]", ",", " ", "\[Rho]", ",", 
               "\[Tau]", ",", " ", 
               RowBox[{"A", "[", 
                RowBox[{"\[Phi]", ",", " ", "\[Theta]", ",", " ", "\[Rho]"}], 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"F", "[", 
                RowBox[{
                "0", ",", "\[Phi]", ",", " ", "\[Theta]", ",", "\[Rho]", ",", 
                 " ", 
                 RowBox[{"1", "/", "\[Tau]"}]}], "]"}], ",", " ", 
               "\[IndentingNewLine]", 
               RowBox[{"fG", "[", 
                RowBox[{
                "0", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", "\[Rho]", 
                 ",", " ", "\[Tau]"}], "]"}]}], " ", "}"}], ",", 
             RowBox[{"(*", 
              RowBox[{"Columns", " ", "in", " ", "Table"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\[Phi]", ",", " ", "phiRng"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Theta]", ",", " ", "thetaRng"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Rho]", ",", "rhoRng"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Tau]", ",", " ", "tauRng"}], "}"}]}], "]"}], 
           RowBox[{"(*", 
            RowBox[{"Iterate", " ", "ranges"}], "*)"}], "\[IndentingNewLine]",
            "/.", " ", 
           RowBox[{
            RowBox[{"x_", "/;", 
             RowBox[{"NumericQ", "[", "x", "]"}]}], " ", ":>", 
            RowBox[{"Re", "[", 
             RowBox[{"ComplexExpand", "[", "x", "]"}], "]"}]}]}], " ", 
          RowBox[{"(*", " ", 
           RowBox[{"Remove", " ", "zero", " ", "complex", " ", "parts"}], " ",
            "*)"}], "\[IndentingNewLine]", "/.", 
          RowBox[{
           RowBox[{"x_", "/;", " ", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"Simplify", "[", "x", "]"}], "]"}], ">", " ", "inf"}]}],
            " ", "\[RuleDelayed]", " ", "\"\<NaN\>\""}]}], 
         RowBox[{"(*", " ", 
          RowBox[{
          "replace", " ", "floating", " ", "point", " ", "infinities"}], " ", 
          "*)"}], "\[IndentingNewLine]", "/.", 
         RowBox[{
          RowBox[{"x_", "/;", " ", 
           RowBox[{
            RowBox[{"Abs", "[", "x", "]"}], "<", " ", "zero"}]}], " ", 
          "\[RuleDelayed]", " ", "0"}]}], 
        RowBox[{"(*", " ", 
         RowBox[{"replace", " ", "floating", " ", "point", " ", "zeros"}], 
         " ", "*)"}], "\[IndentingNewLine]", "//", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"#", ",", "prec"}], "]"}], "&"}]}], " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Force", " ", "number", " ", "precision"}], " ", "*)"}], 
       "\[IndentingNewLine]", "//", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"#", ",", 
          RowBox[{"nVars", "-", "1"}]}], "]"}], "&"}]}]}], "]"}], " ", "//", 
    "Quiet"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Flatten", " ", "to", " ", 
    RowBox[{"List", ".", " ", "Silence"}], " ", "Errors"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"iacDataset", "//", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], "&"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Create", " ", 
     RowBox[{"Grid", "."}]}], "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.679057135252555*^9, 3.67905714734228*^9}, {
   3.679057665971744*^9, 3.679057666219873*^9}, {3.679061132561253*^9, 
   3.679061132597828*^9}, {3.679061658229137*^9, 3.679061660821603*^9}, {
   3.679061694806121*^9, 3.679061735714775*^9}, {3.679061865353551*^9, 
   3.679062007164165*^9}, {3.679062069104803*^9, 3.679062069184317*^9}, {
   3.679062331717766*^9, 3.679062347755354*^9}, {3.679062758655218*^9, 
   3.679062772981279*^9}, {3.6790629159929028`*^9, 3.679062931687508*^9}, {
   3.6790629792389812`*^9, 3.679062979333885*^9}, {3.679063594524844*^9, 
   3.6790636085405188`*^9}, {3.679063650009347*^9, 3.679063751686137*^9}, {
   3.679065262037736*^9, 3.679065299028014*^9}, {3.679065354506135*^9, 
   3.6790653693381557`*^9}, {3.679066277553247*^9, 3.6790662794095497`*^9}, {
   3.67906679364744*^9, 3.679066818764987*^9}, {3.679068949601377*^9, 
   3.679068949987565*^9}, {3.679069011431613*^9, 3.679069011855425*^9}, {
   3.679070607977273*^9, 3.679070644138723*^9}, {3.679070840030558*^9, 
   3.6790708621336327`*^9}, {3.6790711317804537`*^9, 3.6790711402201*^9}, {
   3.679071927675564*^9, 3.6790719283321133`*^9}, {3.679072047730227*^9, 
   3.679072136292246*^9}, {3.679072171773019*^9, 3.679072187498107*^9}, {
   3.679072217807831*^9, 3.679072290369554*^9}, {3.679072324491996*^9, 
   3.6790723287712*^9}, {3.679072374364756*^9, 3.679072383083452*^9}, {
   3.6790724809097033`*^9, 3.67907248360963*^9}, {3.6790727802940893`*^9, 
   3.6790727917788563`*^9}, {3.679072846874181*^9, 3.6790729000425997`*^9}, {
   3.679073088013937*^9, 3.679073189252158*^9}, {3.679073241880073*^9, 
   3.6790732693066587`*^9}, {3.6790733120783987`*^9, 3.67907349142451*^9}, {
   3.67907353948319*^9, 3.679073694745554*^9}, {3.679073734350528*^9, 
   3.679073878295336*^9}, 3.679074559686399*^9, {3.679075296601837*^9, 
   3.679075304789165*^9}, {3.679075350663138*^9, 3.679075366106505*^9}, {
   3.679075519888918*^9, 3.679075529806983*^9}, 3.679076108551502*^9, 
   3.679076576243984*^9, {3.679076612384268*^9, 3.679076622247896*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"phi\"\>", "\<\"theta\"\>", "\<\"p_acc\"\>", "\<\"tau\"\>", \
"\<\"A[phi, theta, p_acc]\"\>", "\<\"F[0, phi, theta, p_acc, 1/tau]\"\>", "\<\
\"fG[0, phi, theta, p_acc, tau]\"\>"},
    {"0.07`", "6.2831853071795864769252867665590083999`4.", "1.`4.", 
     "0.07`", "\<\"NaN\"\>", "\<\"NaN\"\>", "\<\"NaN\"\>"},
    {"0.07`", "6.2831853071795864769252867665590083999`4.", "1.`4.", 
     "2.7`", "\<\"NaN\"\>", "\<\"NaN\"\>", "\<\"NaN\"\>"},
    {"0.07`", "6.2831853071795864769252867665590083999`4.", "0.539`", 
     "0.07`", "\<\"NaN\"\>", "\<\"NaN\"\>", "\<\"NaN\"\>"},
    {"0.07`", "6.2831853071795864769252867665590083999`4.", "0.539`", 
     "2.7`", "\<\"NaN\"\>", "\<\"NaN\"\>", "\<\"NaN\"\>"},
    {"0.07`", "0.12459`", "1.`4.", "0.07`", "65.54723434797897`", 
     "65.54723434797897`", "489043.2892622897`"},
    {"0.07`", "0.12459`", "1.`4.", "2.7`", "65.54723434797897`", 
     "65.54723434797897`", "489043.2892622897`"},
    {"0.07`", "0.12459`", "0.539`", "0.07`", "186.31024589437666`", 
     "186.31024589437666`", "14376.525985865952`"},
    {"0.07`", "0.12459`", "0.539`", "2.7`", "186.31024589437666`", 
     "186.31024589437664`", "14376.525985865952`"},
    {"4.79`", "6.2831853071795864769252867665590083999`4.", "1.`4.", 
     "0.07`", "\<\"NaN\"\>", "\<\"NaN\"\>", "\<\"NaN\"\>"},
    {"4.79`", "6.2831853071795864769252867665590083999`4.", "1.`4.", 
     "2.7`", "\<\"NaN\"\>", "\<\"NaN\"\>", "\<\"NaN\"\>"},
    {"4.79`", "6.2831853071795864769252867665590083999`4.", "0.539`", 
     "0.07`", "\<\"NaN\"\>", "\<\"NaN\"\>", "\<\"NaN\"\>"},
    {"4.79`", "6.2831853071795864769252867665590083999`4.", "0.539`", 
     "2.7`", "\<\"NaN\"\>", "\<\"NaN\"\>", "\<\"NaN\"\>"},
    {"4.79`", "0.12459`", "1.`4.", "0.07`", "64.75645433384555`", 
     "64.75645433384555`", "131.85773953097834`"},
    {"4.79`", "0.12459`", "1.`4.", "2.7`", "64.75645433384555`", 
     "64.75645433384555`", "131.85773953097834`"},
    {"4.79`", "0.12459`", "0.539`", "0.07`", "66.49245461228281`", 
     "66.4924546122828`", "132.84695337799198`"},
    {"4.79`", "0.12459`", "0.539`", "2.7`", "66.49245461228281`", 
     "66.49245461228281`", "132.84695337799198`"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.679073458219554*^9, 3.679073492232822*^9}, {
   3.679073550085322*^9, 3.679073695257576*^9}, {3.679073735871829*^9, 
   3.6790737831213017`*^9}, {3.6790738258488626`*^9, 3.679073879121521*^9}, 
   3.679074560674089*^9, 3.679074991117095*^9, 3.679075028490275*^9, {
   3.679075297624729*^9, 3.67907530541024*^9}, {3.6790753525400667`*^9, 
   3.679075366352109*^9}, {3.679075450150671*^9, 3.679075480133556*^9}, 
   3.679076109339128*^9, {3.679076606327972*^9, 3.679076623251137*^9}, 
   3.679076770545431*^9, {3.6790768230619783`*^9, 3.679076831660817*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inverse Laplace Transforms", "Section",
 CellChangeTimes->{{3.679057149631722*^9, 3.679057158374034*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"iltDataset", ",", " ", "nVars"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.679065176052227*^9, 3.679065183471961*^9}, {
  3.679065315615678*^9, 3.679065315743417*^9}, {3.679066282592395*^9, 
  3.679066307845479*^9}}],

Cell["\<\
Instead of wasting time inverting the entire function, values are set as \
constants beforehand,\
\>", "Text",
 CellChangeTimes->{{3.679057686390745*^9, 3.679057718849297*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nVars", " ", "=", " ", "5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Number", " ", "of", " ", "Function", " ", 
    RowBox[{"Variables", ":", " ", 
     RowBox[{"To", " ", "create", " ", "Table"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iltDataset", " ", "=", " ", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
        "\"\<t\>\"", ",", "\"\<tau\>\"", ",", "\"\<phi\>\"", ",", 
         "\"\<theta\>\"", ",", "\"\<p_acc\>\"", ",", "\[IndentingNewLine]", 
         " ", "\"\<invL[F[beta, phi, theta, p_acc, 1/tau]](t)\>\"", ",", 
         "\[IndentingNewLine]", " ", 
         "\"\<invL[fG[beta, phi, theta, p_acc, tau]](t)\>\""}], "}"}], "}"}], 
      ",", 
      RowBox[{"(*", 
       RowBox[{"Title", " ", "Line"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "t", ",", "\[Tau]", " ", ",", " ", "\[Phi]", ",", " ", 
               "\[Theta]", ",", "\[Rho]", ",", "\[IndentingNewLine]", 
               RowBox[{"InverseLaplaceTransform", "[", 
                RowBox[{
                 RowBox[{"F", "[", 
                  RowBox[{
                  "\[Beta]", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", 
                   "  ", "\[Rho]", ",", " ", 
                   FractionBox["1", "\[Tau]"]}], "]"}], ",", "\[Beta]", ",", 
                 "t"}], "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"InverseLaplaceTransform", "[", 
                 RowBox[{
                  RowBox[{"fG", "[", 
                   RowBox[{
                   "\[Beta]", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", 
                    "\[Rho]", ",", " ", "\[Tau]"}], "]"}], ",", "\[Beta]", 
                  ",", "t"}], "]"}], "//", "Re"}]}], "}"}], ",", 
             RowBox[{"(*", 
              RowBox[{"Columns", " ", "in", " ", "Table"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"t", ",", " ", "tRng"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Tau]", ",", " ", "tauRng"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Phi]", ",", " ", "phiRng"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Theta]", ",", " ", "thetaRng"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Rho]", ",", "rhoRng"}], "}"}]}], " ", "]"}], " ", 
           RowBox[{"(*", 
            RowBox[{"Iterate", " ", "ranges"}], "*)"}], "\[IndentingNewLine]",
            "/.", " ", 
           RowBox[{
            RowBox[{"x_", "/;", 
             RowBox[{"NumericQ", "[", "x", "]"}]}], " ", ":>", 
            RowBox[{"Re", "[", 
             RowBox[{"ComplexExpand", "[", "x", "]"}], "]"}]}]}], " ", 
          RowBox[{"(*", " ", 
           RowBox[{"Remove", " ", "zero", " ", "complex", " ", "parts"}], " ",
            "*)"}], "\[IndentingNewLine]", "/.", 
          RowBox[{
           RowBox[{"x_", "/;", " ", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"Simplify", "[", "x", "]"}], "]"}], ">", " ", "inf"}]}],
            " ", "\[RuleDelayed]", " ", "\"\<NaN\>\""}]}], 
         RowBox[{"(*", " ", 
          RowBox[{
          "replace", " ", "floating", " ", "point", " ", "infinities"}], " ", 
          "*)"}], "\[IndentingNewLine]", "/.", 
         RowBox[{
          RowBox[{"x_", "/;", " ", 
           RowBox[{
            RowBox[{"Abs", "[", "x", "]"}], "<", " ", "zero"}]}], " ", 
          "\[RuleDelayed]", " ", "0"}]}], 
        RowBox[{"(*", " ", 
         RowBox[{"replace", " ", "floating", " ", "point", " ", "zeros"}], 
         " ", "*)"}], "\[IndentingNewLine]", "//", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{"#", ",", "prec"}], "]"}], "&"}]}], " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Force", " ", "number", " ", "precision"}], " ", "*)"}], 
       "\[IndentingNewLine]", "//", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"#", ",", 
          RowBox[{"nVars", "-", "1"}]}], "]"}], "&"}]}]}], "]"}], " ", "//", 
    "Quiet"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Flatten", " ", "to", " ", 
    RowBox[{"List", ".", " ", "Silence"}], " ", "Errors"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"iltDataset", "//", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], "&"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Create", " ", 
     RowBox[{"Grid", "."}]}], "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.679063024382967*^9, 3.6790630722178907`*^9}, {
   3.679063132900181*^9, 3.679063140781028*^9}, {3.67906328897257*^9, 
   3.679063357666337*^9}, {3.67906348562479*^9, 3.679063503704431*^9}, 
   3.679063800709341*^9, {3.679064020974799*^9, 3.679064087786697*^9}, {
   3.679064123773316*^9, 3.67906419645601*^9}, {3.679064263706568*^9, 
   3.679064296929644*^9}, {3.679064341855712*^9, 3.679064411389783*^9}, {
   3.679064464207591*^9, 3.679064468319824*^9}, {3.679064574780404*^9, 
   3.6790647316263866`*^9}, 3.679064762452039*^9, {3.679064835690333*^9, 
   3.67906484996241*^9}, {3.6790649000436974`*^9, 3.67906491069795*^9}, 
   3.679064968658222*^9, {3.679065172368038*^9, 3.679065173073735*^9}, {
   3.679065318460515*^9, 3.679065346530398*^9}, {3.6790662585841503`*^9, 
   3.6790663069829473`*^9}, {3.679066686103799*^9, 3.67906670618948*^9}, {
   3.679066753713482*^9, 3.6790667544003277`*^9}, {3.679066855111453*^9, 
   3.6790668792753477`*^9}, {3.679068955466807*^9, 3.679068961289229*^9}, 
   3.679069144808227*^9, 3.679069192416452*^9, {3.679069226398527*^9, 
   3.6790692387404137`*^9}, 3.679069287396722*^9, {3.679071083307057*^9, 
   3.6790711166635237`*^9}, {3.6790711476454973`*^9, 3.679071160765683*^9}, {
   3.6790719356302958`*^9, 3.679071977145309*^9}, {3.679072017155561*^9, 
   3.6790720367153463`*^9}, {3.679072765725507*^9, 3.6790727726039343`*^9}, 
   3.679074567382102*^9, 3.679075446977375*^9, 3.679076112615485*^9, {
   3.679076688352667*^9, 3.679076715413879*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"t\"\>", "\<\"tau\"\>", "\<\"phi\"\>", "\<\"theta\"\>", "\<\"p_acc\"\
\>", "\<\"invL[F[beta, phi, theta, p_acc, 1/tau]](t)\"\>", "\<\"invL[fG[beta, \
phi, theta, p_acc, tau]](t)\"\>"},
    {"0", "0.07`", "0.07`", "6.2831853071795864769252867665590083999`4.", 
     "1.`4.", "14.285714285714285`", "28.571438644015966`"},
    {"0", "0.07`", "0.07`", "6.2831853071795864769252867665590083999`4.", 
     "0.539`", "14.285714285714283`", "28.57142857093381`"},
    {"0", "0.07`", "0.07`", "0.12459`", "1.`4.", "14.285714285714285`", 
     "28.460784614481582`"},
    {"0", "0.07`", "0.07`", "0.12459`", "0.539`", "14.285714285714285`", 
     "28.46069572558779`"},
    {"0", "0.07`", "4.79`", "6.2831853071795864769252867665590083999`4.", 
     "1.`4.", "14.285714285714285`", "28.571428614527868`"},
    {"0", "0.07`", "4.79`", "6.2831853071795864769252867665590083999`4.", 
     "0.539`", "14.285714285714286`", "28.57142857142574`"},
    {"0", "0.07`", "4.79`", "0.12459`", "1.`4.", "14.285714285714286`", 
     "28.46069564434299`"},
    {"0", "0.07`", "4.79`", "0.12459`", "0.539`", "14.285714285714285`", 
     "28.46069572106788`"},
    {"0", "2.7`", "0.07`", "6.2831853071795864769252867665590083999`4.", 
     "1.`4.", "0.37037037037037035`", "0.7407430220624925`"},
    {"0", "2.7`", "0.07`", "6.2831853071795864769252867665590083999`4.", 
     "0.539`", "0.37037037037037035`", "0.740740740941318`"},
    {"0", "2.7`", "0.07`", "0.12459`", "1.`4.", "0.37037037037037035`", 
     "0.7378698890047376`"},
    {"0", "2.7`", "0.07`", "0.12459`", "0.539`", "0.37037037037037035`", 
     "0.737869889144785`"},
    {"0", "2.7`", "4.79`", "6.2831853071795864769252867665590083999`4.", 
     "1.`4.", "0.37037037037037035`", "0.7407407407407385`"},
    {"0", "2.7`", "4.79`", "6.2831853071795864769252867665590083999`4.", 
     "0.539`", "0.3703703703703704`", "0.7407407407407189`"},
    {"0", "2.7`", "4.79`", "0.12459`", "1.`4.", "0.37037037037037035`", 
     "0.7378698890645605`"},
    {"0", "2.7`", "4.79`", "0.12459`", "0.539`", "0.37037037037037035`", 
     "0.7378698890645212`"},
    {"1.`4.", "0.07`", "0.07`", "6.2831853071795864769252867665590083999`4.", 
     "1.`4.", "4.170379738949108`", "3837.152246304665`"},
    {"1.`4.", "0.07`", "0.07`", "6.2831853071795864769252867665590083999`4.", 
     "0.539`", "12.889434655245573`", "253.21409588339603`"},
    {"1.`4.", "0.07`", "0.07`", "0.12459`", "1.`4.", "4.424881100411509`", 
     "3374.886673606932`"},
    {"1.`4.", "0.07`", "0.07`", "0.12459`", "0.539`", "12.889495780648629`", 
     "225.45528000769394`"},
    {"1.`4.", "0.07`", "4.79`", "6.2831853071795864769252867665590083999`4.", 
     "1.`4.", "8.546956526146069`", "14.596326269382622`"},
    {"1.`4.", "0.07`", "4.79`", "6.2831853071795864769252867665590083999`4.", 
     "0.539`", "7.144886134693514`", "14.502118059032714`"},
    {"1.`4.", "0.07`", "4.79`", "0.12459`", "1.`4.", "7.643667317950924`", 
     "13.0178243909201`"},
    {"1.`4.", "0.07`", "4.79`", "0.12459`", "0.539`", "6.489635634148016`", 
     "12.987615771141657`"},
    {"1.`4.", "2.7`", "0.07`", "6.2831853071795864769252867665590083999`4.", 
     "1.`4.", "0.37012148035119397`", "1.202388845258877`"},
    {"1.`4.", "2.7`", "0.07`", "6.2831853071795864769252867665590083999`4.", 
     "0.539`", "0.3702438574575982`", "0.8992653968159666`"},
    {"1.`4.", "2.7`", "0.07`", "0.12459`", "1.`4.", "0.37012171831329116`", 
     "1.1908980872807262`"},
    {"1.`4.", "2.7`", "0.07`", "0.12459`", "0.539`", "0.37024391594747447`", 
     "0.892534892271514`"},
    {"1.`4.", "2.7`", "4.79`", "6.2831853071795864769252867665590083999`4.", 
     "1.`4.", "0.01509474232179921`", "0.012529004447331082`"},
    {"1.`4.", "2.7`", "4.79`", "6.2831853071795864769252867665590083999`4.", 
     "0.539`", "0.17531633439078748`", "0.3236902136654135`"},
    {"1.`4.", "2.7`", "4.79`", "0.12459`", "1.`4.", "0.014934906872074596`", 
     "0.012367198496446399`"},
    {"1.`4.", "2.7`", "4.79`", "0.12459`", "0.539`", "0.17526461658999182`", 
     "0.32183601291241265`"},
    {"5.79`", "0.07`", "0.07`", "6.2831853071795864769252867665590083999`4.", 
     "1.`4.", "11.083717862957265`", "8.974278109753026`*^6"},
    {"5.79`", "0.07`", "0.07`", "6.2831853071795864769252867665590083999`4.", 
     "0.539`", "8.951583070889424`", "1146.728109595137`"},
    {"5.79`", "0.07`", "0.07`", "0.12459`", "1.`4.", "5.447945286572691`", 
     "4.666460560690836`*^6"},
    {"5.79`", "0.07`", "0.07`", "0.12459`", "0.539`", "8.424753666925145`", 
     "642.7343394163797`"},
    {"5.79`", "0.07`", "4.79`", "6.2831853071795864769252867665590083999`4.", 
     "1.`4.", "12.505787379623587`", "14.603888879661698`"},
    {"5.79`", "0.07`", "4.79`", "6.2831853071795864769252867665590083999`4.", 
     "0.539`", "7.142857142857137`", "14.50050646965788`"},
    {"5.79`", "0.07`", "4.79`", "0.12459`", "1.`4.", "6.604198201884573`", 
     "7.679813484925717`"},
    {"5.79`", "0.07`", "4.79`", "0.12459`", "0.539`", "3.8386856198384747`", 
     "7.684106645010913`"},
    {"5.79`", "2.7`", "0.07`", "6.2831853071795864769252867665590083999`4.", 
     "1.`4.", "0.3620871841445471`", "4.778376302411946`"},
    {"5.79`", "2.7`", "0.07`", "6.2831853071795864769252867665590083999`4.", 
     "0.539`", "0.3672340473230819`", "1.6510667015692289`"},
    {"5.79`", "2.7`", "0.07`", "0.12459`", "1.`4.", "0.3621326157629386`", 
     "4.641263702576965`"},
    {"5.79`", "2.7`", "0.07`", "0.12459`", "0.539`", "0.3672394613878972`", 
     "1.613798937661403`"},
    {"5.79`", "2.7`", "4.79`", "6.2831853071795864769252867665590083999`4.", 
     "1.`4.", "0.16238659379882553`", "0.4208559378785581`"},
    {"5.79`", "2.7`", "4.79`", "6.2831853071795864769252867665590083999`4.", 
     "0.539`", "0.21121582738506975`", "0.4191566225620239`"},
    {"5.79`", "2.7`", "4.79`", "0.12459`", "1.`4.", "0.16001367632876887`", 
     "0.41212015130322094`"},
    {"5.79`", "2.7`", "4.79`", "0.12459`", "0.539`", "0.2097036849481103`", 
     "0.4118015075325039`"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.6790644694726963`*^9, 3.679064541278057*^9, {3.679064585959144*^9, 
   3.679064732449587*^9}, 3.679064764355986*^9, 3.6790648508214283`*^9, 
   3.6790649115276823`*^9, 3.67906496942058*^9, 3.6790650595964403`*^9, {
   3.6790653317697897`*^9, 3.679065338338818*^9}, 3.6790662366909933`*^9, {
   3.679066299865884*^9, 3.679066311115077*^9}, {3.679066952598332*^9, 
   3.679066965391732*^9}, 3.6790689563956547`*^9, {3.679069018452145*^9, 
   3.679069052132658*^9}, {3.679069145538157*^9, 3.679069198670451*^9}, {
   3.679069283795081*^9, 3.6790692935151978`*^9}, {3.679071165109888*^9, 
   3.679071189874198*^9}, 3.679071250609604*^9, {3.679071959198155*^9, 
   3.679071969757992*^9}, 3.679072039137652*^9, 3.6790727686786537`*^9, 
   3.6790745693870907`*^9, 3.6790749927694397`*^9, 3.679075030572042*^9, {
   3.67907545217866*^9, 3.679075481651032*^9}, 3.6790761144840593`*^9, 
   3.679076701573711*^9, 3.6790767392784977`*^9, 3.679076772141898*^9, {
   3.6790768261207438`*^9, 3.679076833155698*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export Data to CSV", "Section",
 CellChangeTimes->{{3.679065871093934*^9, 3.679065993795548*^9}, {
  3.6790662179584303`*^9, 3.679066226158351*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.679066409991798*^9, 3.679066410001519*^9}, 
   3.6790669573834343`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{"ltSave", ",", "ltDataset", ",", "\"\<CSV\>\"", ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"iacSave", ",", "iacDataset", ",", "\"\<CSV\>\"", ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"iltSave", ",", "iltDataset", ",", "\"\<CSV\>\"", ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<UTF8\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.679066196520433*^9, 3.679066207919215*^9}, {
  3.679066247128581*^9, 3.6790662869244556`*^9}, {3.679066762207024*^9, 
  3.679066768148699*^9}}],

Cell[BoxData["\<\"__MMunittestLTexp_LT.csv\"\>"], "Output",
 CellChangeTimes->{
  3.67906623676398*^9, {3.679066299885792*^9, 3.679066311139896*^9}, 
   3.679066414017469*^9, 3.6790667723555593`*^9, {3.679066952640894*^9, 
   3.6790669654328413`*^9}, 3.6790690521608047`*^9, {3.6790691474851513`*^9, 
   3.6790691664725857`*^9}, 3.679069198705325*^9, 3.679069283848421*^9, 
   3.679071189958321*^9, 3.6790712506815557`*^9, 3.679074992888253*^9, 
   3.679075030659298*^9, {3.6790754522544327`*^9, 3.6790754817308903`*^9}, 
   3.6790767723927317`*^9, {3.6790768261975107`*^9, 3.679076833233375*^9}}],

Cell[BoxData["\<\"__MMunittestLTexp_iAC.csv\"\>"], "Output",
 CellChangeTimes->{
  3.67906623676398*^9, {3.679066299885792*^9, 3.679066311139896*^9}, 
   3.679066414017469*^9, 3.6790667723555593`*^9, {3.679066952640894*^9, 
   3.6790669654328413`*^9}, 3.6790690521608047`*^9, {3.6790691474851513`*^9, 
   3.6790691664725857`*^9}, 3.679069198705325*^9, 3.679069283848421*^9, 
   3.679071189958321*^9, 3.6790712506815557`*^9, 3.679074992888253*^9, 
   3.679075030659298*^9, {3.6790754522544327`*^9, 3.6790754817308903`*^9}, 
   3.6790767723927317`*^9, {3.6790768261975107`*^9, 3.679076833237795*^9}}],

Cell[BoxData["\<\"__MMunittestLTexp_iLT.csv\"\>"], "Output",
 CellChangeTimes->{
  3.67906623676398*^9, {3.679066299885792*^9, 3.679066311139896*^9}, 
   3.679066414017469*^9, 3.6790667723555593`*^9, {3.679066952640894*^9, 
   3.6790669654328413`*^9}, 3.6790690521608047`*^9, {3.6790691474851513`*^9, 
   3.6790691664725857`*^9}, 3.679069198705325*^9, 3.679069283848421*^9, 
   3.679071189958321*^9, 3.6790712506815557`*^9, 3.679074992888253*^9, 
   3.679075030659298*^9, {3.6790754522544327`*^9, 3.6790754817308903`*^9}, 
   3.6790767723927317`*^9, {3.6790768261975107`*^9, 3.679076833240625*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Formula Validations", "Chapter",
 CellChangeTimes->{{3.67908210551976*^9, 3.679082138193934*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "getNumerator", ",", " ", "getDenominator", ",", " ", "flip", ",", " ", 
    "fullVerify", ",", " ", "maxSimplify", ",", " ", "quickVerify"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flip", "[", "bool_", "]"}], " ", ":=", 
  RowBox[{"If", "[", 
   RowBox[{"bool", ",", " ", 
    RowBox[{"-", "1"}], ",", " ", "1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getNumerator", "[", 
   RowBox[{"func_", ",", " ", 
    RowBox[{"flipSign_:", "False"}], ",", " ", 
    RowBox[{"wait_:", "3"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Collect", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"flip", "[", "flipSign", "]"}], "*", 
      RowBox[{"Numerator", "[", 
       RowBox[{"TimeConstrained", "[", 
        RowBox[{
         RowBox[{"func", "//", "FullSimplify"}], ",", " ", "wait", ",", " ", 
         RowBox[{"Together", "[", "func", "]"}]}], "]"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "r", ",", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "\[Phi]", ",", " ", 
       "\[Rho]"}], "}"}]}], "]"}], "//", 
   "TraditionalForm"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getDenominator", "[", 
   RowBox[{"func_", ",", " ", 
    RowBox[{"flipSign_:", "False"}], ",", " ", 
    RowBox[{"wait_:", "3"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Collect", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"flip", "[", "flipSign", "]"}], "*", 
      RowBox[{"Denominator", "[", 
       RowBox[{"TimeConstrained", "[", 
        RowBox[{
         RowBox[{"func", "//", "FullSimplify"}], ",", " ", "wait", ",", " ", 
         RowBox[{"Together", "[", "func", "]"}]}], "]"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "r", ",", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "\[Phi]", ",", "\[Rho]"}], 
      "}"}]}], "]"}], "//", "TraditionalForm"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxSimplify", "[", "func_", "]"}], ":=", 
   FractionBox[
    RowBox[{"getNumerator", "[", "func", "]"}], 
    RowBox[{"getDenominator", "[", "func", "]"}]]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6790846313246717`*^9, 3.679084666871293*^9}, {
   3.67908470968836*^9, 3.679084845929411*^9}, {3.679084924795223*^9, 
   3.6790849251139*^9}, {3.679085952426592*^9, 3.679085967375133*^9}, {
   3.6790875067103853`*^9, 3.679087609226996*^9}, {3.679087711400565*^9, 
   3.6790877185826073`*^9}, {3.679087760010104*^9, 3.679087852544948*^9}, {
   3.679087960063903*^9, 3.6790879783640842`*^9}, {3.679088019521595*^9, 
   3.679088024713902*^9}, {3.679088136840876*^9, 3.679088567314053*^9}, {
   3.6790886418912907`*^9, 3.679088847909902*^9}, {3.679089401470636*^9, 
   3.679089474619961*^9}, {3.679089603693873*^9, 3.679089608221033*^9}, 
   3.6790897062801733`*^9, {3.679089754498534*^9, 3.679089778627014*^9}, {
   3.679089890330873*^9, 3.679090043439941*^9}, {3.6790900774532003`*^9, 
   3.679090322210651*^9}, {3.67909038919211*^9, 3.679090494715911*^9}, {
   3.679092833858843*^9, 3.679092890576682*^9}, {3.679092958082522*^9, 
   3.679092998153511*^9}, {3.679093123646538*^9, 3.6790931533624763`*^9}, {
   3.679094294312625*^9, 3.679094299204775*^9}, {3.6790943749175577`*^9, 
   3.679094434640106*^9}, {3.679094845224997*^9, 3.679094850693556*^9}}],

Cell["\<\
This function verifies that two expressions are equal. If it cannot do within \
the initial time period, it will try a faster but less accurate method. If \
this also fails and error message is printed.\
\>", "Text",
 CellChangeTimes->{{3.679090493198842*^9, 3.6790905386426992`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"quickVerify", "[", 
   RowBox[{"f1_", ",", " ", "f2_", ",", " ", 
    RowBox[{"wait_:", "10"}], ",", " ", 
    RowBox[{"maxwait_:", "20"}], ",", " ", 
    RowBox[{"explicit_:", "False"}], ",", " ", 
    RowBox[{"fullSimplify_:", "False"}]}], "]"}], " ", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "t", ",", " ", "output", ",", " ", "status1", ",", " ", "status2"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Try", " ", "alternative", " ", "method", " ", "if", " ", "it", " ", 
      "takes", " ", "longer", " ", "than", " ", "wait"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"t", "=", " ", 
      RowBox[{"TimeConstrained", "[", 
       RowBox[{
        RowBox[{"FullSimplify", "[", 
         RowBox[{"f1", "\[Equal]", " ", "f2"}], "]"}], ",", "wait", ",", " ", 
        "\"\<Failed\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"status1", " ", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringQ", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"explicit", ",", " ", 
          RowBox[{"(*", 
           RowBox[{
           "Only", " ", "prints", " ", "out", " ", "text", " ", "if", " ", 
            "explicit", " ", "flagged", " ", "as", " ", "True"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<Failed to Simplify within ``s. Used PossibleZeroQ instead.\>\
\"", ",", "wait"}], "]"}], "\[IndentingNewLine]", "Null"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Null"}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"(*", " ", 
      RowBox[{
      "Exit", " ", "calculation", " ", "if", " ", "it", " ", "takes", " ", 
       "longer", " ", "than", " ", "maxwait"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"t", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringQ", "[", "t", "]"}], ",", " ", 
        RowBox[{"TimeConstrained", "[", 
         RowBox[{
          RowBox[{"PossibleZeroQ", "[", 
           RowBox[{"n1", "\[Equal]", " ", "n2"}], "]"}], ",", 
          RowBox[{"maxwait", "-", "wait"}], ",", " ", "\"\<Failed\>\""}], 
         "]"}], ",", " ", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"status2", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"StringQ", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"explicit", ",", 
           RowBox[{"(*", 
            RowBox[{
            "Only", " ", "prints", " ", "out", " ", "text", " ", "if", " ", 
             "explicit", " ", "flagged", " ", "as", " ", "True"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<Failed to determine solution within maxwait of ``s. \
Exited.\>\"", ",", "maxwait"}], "]"}], ",", " ", "\[IndentingNewLine]", 
           "Null"}], "]"}], "\[IndentingNewLine]", "Null"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"output", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SameQ", "[", 
         RowBox[{"t", ",", "True"}], "]"}], ",", " ", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"status1", ",", " ", "status2", ",", " ", 
          RowBox[{"t", "//", "VerificationTest"}]}], "}"}], ",", 
        RowBox[{"(*", 
         RowBox[{
         "Just", " ", "output", " ", "test", " ", "result", " ", "if", " ", 
          "passed"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"status1", ",", " ", "status2", ",", 
          RowBox[{"t", "//", "VerificationTest"}], ",", 
          "\[IndentingNewLine]", "\"\<First Function\>\"", ",", " ", 
          RowBox[{"If", "[", 
           RowBox[{"fullSimplify", ",", " ", 
            RowBox[{"f1", " ", "//", " ", "FullSimplify"}], ",", " ", "f1"}], 
           "]"}], ",", "\[IndentingNewLine]", "\"\<Second Function\>\"", ",", 
          " ", 
          RowBox[{"If", "[", 
           RowBox[{"fullSimplify", ",", " ", 
            RowBox[{"f2", " ", "//", " ", "FullSimplify"}], ",", " ", "f2"}], 
           "]"}]}], "}"}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Outputs", " ", "numerator"}], ",", " ", 
         RowBox[{"denominator", " ", "if", " ", "test", " ", "fails"}]}], 
        "*)"}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Column", "[", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"output", ",", " ", "Null"}], "]"}], "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6790846313246717`*^9, 3.679084666871293*^9}, {
   3.67908470968836*^9, 3.679084845929411*^9}, {3.679084924795223*^9, 
   3.6790849251139*^9}, {3.679085952426592*^9, 3.679085967375133*^9}, {
   3.6790875067103853`*^9, 3.679087609226996*^9}, {3.679087711400565*^9, 
   3.6790877185826073`*^9}, {3.679087760010104*^9, 3.679087852544948*^9}, {
   3.679087960063903*^9, 3.6790879783640842`*^9}, {3.679088019521595*^9, 
   3.679088024713902*^9}, {3.679088136840876*^9, 3.679088567314053*^9}, {
   3.6790886418912907`*^9, 3.679088847909902*^9}, {3.679089401470636*^9, 
   3.679089474619961*^9}, {3.679089603693873*^9, 3.679089608221033*^9}, 
   3.6790897062801733`*^9, {3.679089754498534*^9, 3.679089778627014*^9}, {
   3.679089890330873*^9, 3.679090043439941*^9}, {3.6790900774532003`*^9, 
   3.679090322210651*^9}, {3.67909038919211*^9, 3.679090486851479*^9}, {
   3.679090543364349*^9, 3.679090549428581*^9}, {3.679090742691555*^9, 
   3.6790907849223137`*^9}, {3.679090851218245*^9, 3.679090851789999*^9}, {
   3.679091126427084*^9, 3.679091144046166*^9}, {3.6790911973956757`*^9, 
   3.679091263338346*^9}, {3.679091359930758*^9, 3.67909136659713*^9}, {
   3.679091504211318*^9, 3.679091519361994*^9}, {3.679091582648941*^9, 
   3.679091650434856*^9}, {3.679091754029427*^9, 3.679091798732285*^9}, {
   3.6790918720687313`*^9, 3.679091876592495*^9}, {3.679091969093711*^9, 
   3.6790921815755796`*^9}, {3.679092260211748*^9, 3.679092301684207*^9}, {
   3.6790927696698303`*^9, 3.679092774114938*^9}, {3.679093039730773*^9, 
   3.679093061447611*^9}, 3.679093193068665*^9, {3.679093230216481*^9, 
   3.6790932335960503`*^9}, {3.679095117453209*^9, 3.6790952011277933`*^9}}],

Cell[TextData[{
 "This function implements ",
 StyleBox["quickVerify", "Input"],
 " to the numerator and denominator separately,"
}], "Text",
 CellChangeTimes->{{3.679090551252678*^9, 3.6790905782804956`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fullVerify", "[", 
   RowBox[{"f1_", ",", " ", "f2_", ",", "  ", 
    RowBox[{"flipSign_:", "False"}], ",", 
    RowBox[{"quotientWait_:", "5"}], ",", 
    RowBox[{"wait_:", "10"}], ",", " ", 
    RowBox[{"maxwait_:", "20"}]}], "]"}], " ", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n1", ",", " ", "n2", ",", " ", "d1", ",", " ", "d2"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", "\"\<Testing Numerators...\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<... Getting first numerator\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"n1", " ", "=", 
      RowBox[{"getNumerator", "[", 
       RowBox[{"f1", ",", " ", "flipSign", ",", " ", "quotientWait"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<... Getting second numerator\>\"", "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"n2", " ", "=", 
      RowBox[{"getNumerator", "[", 
       RowBox[{"f2", ",", " ", "False", ",", " ", "quotientWait"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<... Verifying\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"quickVerify", "[", 
      RowBox[{
      "n1", ",", " ", "n2", ",", " ", "wait", ",", " ", "maxwait", ",", " ", 
       "True"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<Testing Denominators...\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<... Getting first denominator\>\"", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"d1", " ", "=", " ", 
      RowBox[{"getDenominator", "[", 
       RowBox[{"f1", ",", " ", "flipSign", ",", " ", "quotientWait"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<... Getting second denominator\>\"", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"d2", " ", "=", " ", 
      RowBox[{"getDenominator", "[", 
       RowBox[{"f2", ",", " ", "False", ",", "quotientWait"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<... Verifying\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"quickVerify", "[", 
      RowBox[{
      "d1", ",", " ", "d2", ",", " ", "wait", ",", " ", "maxwait", ",", " ", 
       "True"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6790846313246717`*^9, 3.679084666871293*^9}, {
   3.67908470968836*^9, 3.679084845929411*^9}, {3.679084924795223*^9, 
   3.6790849251139*^9}, {3.679085952426592*^9, 3.679085967375133*^9}, {
   3.6790875067103853`*^9, 3.679087609226996*^9}, {3.679087711400565*^9, 
   3.6790877185826073`*^9}, {3.679087760010104*^9, 3.679087852544948*^9}, {
   3.679087960063903*^9, 3.6790879783640842`*^9}, {3.679088019521595*^9, 
   3.679088024713902*^9}, {3.679088136840876*^9, 3.679088567314053*^9}, {
   3.6790886418912907`*^9, 3.679088847909902*^9}, {3.679089401470636*^9, 
   3.679089474619961*^9}, {3.679089603693873*^9, 3.679089608221033*^9}, 
   3.6790897062801733`*^9, {3.679089754498534*^9, 3.679089778627014*^9}, {
   3.679089890330873*^9, 3.679090043439941*^9}, {3.6790900774532003`*^9, 
   3.679090322210651*^9}, {3.67909038919211*^9, 3.679090486851479*^9}, {
   3.679090543364349*^9, 3.679090549428581*^9}, {3.679090886999256*^9, 
   3.679090922535042*^9}, {3.6790909623508673`*^9, 3.679090991697851*^9}, {
   3.679091030529873*^9, 3.679091069908486*^9}, {3.679091563797833*^9, 
   3.6790915732792807`*^9}, {3.679092113123137*^9, 3.679092116880212*^9}, {
   3.6790941485801477`*^9, 3.679094187879204*^9}, {3.679094579748329*^9, 
   3.6790946045949917`*^9}, {3.679094795455825*^9, 3.6790948028880653`*^9}, {
   3.679094834357669*^9, 3.679094867814373*^9}}],

Cell["\<\
This section contains calidations to verify the correctness of various \
results.\
\>", "Text",
 CellChangeTimes->{{3.679082151547797*^9, 3.6790821678978777`*^9}}],

Cell[CellGroupData[{

Cell["Derivation of Laplace Transform", "Section",
 CellChangeTimes->{{3.679082194980818*^9, 3.679082206712715*^9}}],

Cell["\<\
To verify the form of the equation was copied correctly I copied it all out \
directly from the paper a few days later\
\>", "Text",
 CellChangeTimes->{{3.6790822164048433`*^9, 3.6790822419195004`*^9}, {
  3.679083203572734*^9, 3.679083203700944*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AllTrue", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"gn0", "\[Equal]", 
        RowBox[{"gp20", "+", "gm00"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"gn1", "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["gp20", "2"]}], "-", 
         RowBox[{"2", 
          SuperscriptBox["gp11", "2"]}], "+", 
         RowBox[{"gp02", " ", "gm00"}], "+", 
         RowBox[{"gp02", " ", "gp20"}], " ", "+", " ", 
         SuperscriptBox["gm00", "2"]}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"gn2", " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"gp20", "-", "gp02", "+", "gm00"}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"gm00", "+", "gp20", "+", "gp02"}], ")"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"gn3", "\[Equal]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"gm00", "+", "gp20", "+", "gp02"}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["gp20", "2"], "-", 
           RowBox[{"2", "gp02", " ", "gp20"}], " ", "+", 
           SuperscriptBox["gp02", "2"], "+", 
           RowBox[{"4", 
            SuperscriptBox["gp11", "2"]}], "-", 
           SuperscriptBox["gm00", "2"]}], ")"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"gd0", " ", "\[Equal]", " ", 
        RowBox[{"1", "-", "gm00", "-", "gp20"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"gd1", " ", "\[Equal]", " ", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "gp02"}], "-", 
           SuperscriptBox["gp20", "2"], "+", "gp20", "-", "gm00", "+", 
           RowBox[{"gp02", " ", "gp20"}], " ", "+", " ", 
           SuperscriptBox["gm00", "2"], "-", 
           RowBox[{"2", 
            SuperscriptBox["gp11", "2"]}], "+", 
           RowBox[{"gp02", " ", "gm00"}]}], ")"}]}]}], "]"}], ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Did", " ", "this", " ", "one", " ", "backwards", " ", "for", " ", 
        "extra", " ", "check"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"gd2", " ", "\[Equal]", " ", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["gp20", "2"]}], " ", "+", "gm00", " ", "-", " ", 
           RowBox[{"2", " ", "gp20", " ", "gm00"}], " ", "+", " ", 
           SuperscriptBox["gp02", "2"], "-", 
           SuperscriptBox["gm00", "2"], "+", "gp20"}], ")"}]}]}], "]"}], ",", 
      " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"I", "'"}], "m", " ", "not", " ", "doing", " ", "them", " ",
           "all", " ", "backwards"}], " ", "-", " ", 
         RowBox[{"that", " ", "was", " ", "mentally", " ", "draining"}]}], 
        "..."}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"gd3", " ", "\[Equal]", " ", 
        RowBox[{
         RowBox[{"2", 
          SuperscriptBox["gp11", "2"]}], "-", 
         SuperscriptBox["gp02", "3"], "-", 
         RowBox[{"4", 
          SuperscriptBox["gp11", "2"], " ", "gm00"}], "+", 
         RowBox[{"gp02", " ", 
          SuperscriptBox["gp20", "2"]}], "-", 
         RowBox[{"gp02", " ", "gp20"}], " ", "+", " ", 
         RowBox[{
          SuperscriptBox["gp02", "2"], "gp20"}], " ", "-", 
         RowBox[{"gp02", " ", "gm00"}], " ", "+", 
         RowBox[{"gp20", " ", 
          SuperscriptBox["gm00", "2"]}], "-", 
         SuperscriptBox["gp20", "3"], "+", 
         SuperscriptBox["gp20", "2"], "-", 
         SuperscriptBox["gm00", "2"], "-", 
         RowBox[{"4", "gp20", " ", 
          SuperscriptBox["gp11", "2"]}], "-", 
         RowBox[{
          SuperscriptBox["gp20", "2"], "gm00"}], "-", 
         RowBox[{"4", 
          SuperscriptBox["gp11", "2"], "gp02"}], "+", 
         RowBox[{"gp02", " ", 
          SuperscriptBox["gm00", "2"]}], " ", "-", " ", 
         RowBox[{
          SuperscriptBox["gp02", "2"], "gm00"}], "+", " ", 
         SuperscriptBox["gm00", "3"], "+", 
         RowBox[{"2", "gp02", " ", "gp20", " ", "gm00"}]}]}], "]"}]}], "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{"#", ",", "True", ",", " ", "False"}], "]"}], "&"}]}], "]"}], "//",
   "VerificationTest"}]], "Input",
 CellChangeTimes->{{3.679081156131942*^9, 3.6790811682787533`*^9}, {
   3.679081240156872*^9, 3.67908140556251*^9}, {3.67908143961406*^9, 
   3.679081503277604*^9}, {3.6790815400705767`*^9, 3.679081610723302*^9}, {
   3.679081670084661*^9, 3.679081927167245*^9}, {3.6790819772772284`*^9, 
   3.6790819776782503`*^9}, {3.679082066606266*^9, 3.67908208242211*^9}, {
   3.679082410321331*^9, 3.679082432182452*^9}, {3.679082473950327*^9, 
   3.679082501380134*^9}, {3.6790825404803534`*^9, 3.679082600812737*^9}, {
   3.679082653762349*^9, 3.679082685979362*^9}, {3.679082737023859*^9, 
   3.679082897047306*^9}, {3.6790829352184267`*^9, 3.679083018567005*^9}, {
   3.679083098568269*^9, 3.6790831556172543`*^9}, 3.679083193333493*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"AllTrue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"FullSimplify", "[", 
                    RowBox[{"gn0", "\[Equal]", 
                    RowBox[{"gp20", "+", "gm00"}]}], "]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                    RowBox[{"FullSimplify", "[", 
                    RowBox[{"gd3", "\[Equal]", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "26", "\[RightSkeleton]"}], 
                    "+", 
                    SuperscriptBox["gm00", "3"], "+", 
                    RowBox[{"2", " ", "gp02", " ", "gp20", " ", "gm00"}]}]}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{"#1", ",", "True", ",", "False"}], "]"}], "&"}]}],
                  "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.000851`3.080444557916582","\"s\"","seconds","\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 27, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      AllTrue[{
        FullSimplify[
        Parallel`Combine`Private`gn0 == 
         Parallel`Combine`Private`gp20 + Parallel`Combine`Private`gm00], 
        FullSimplify[
        Parallel`Combine`Private`gn1 == -Parallel`Combine`Private`gp20^2 - 2 
          Parallel`Combine`Private`gp11^2 + 
          Parallel`Combine`Private`gp02 Parallel`Combine`Private`gm00 + 
          Parallel`Combine`Private`gp02 Parallel`Combine`Private`gp20 + 
          Parallel`Combine`Private`gm00^2], 
        FullSimplify[
        Parallel`Combine`Private`gn2 == (-(Parallel`Combine`Private`gp20 - 
            Parallel`Combine`Private`gp02 + Parallel`Combine`Private`gm00)) (
           Parallel`Combine`Private`gm00 + Parallel`Combine`Private`gp20 + 
           Parallel`Combine`Private`gp02)], 
        FullSimplify[
        Parallel`Combine`Private`gn3 == (Parallel`Combine`Private`gm00 + 
           Parallel`Combine`Private`gp20 + Parallel`Combine`Private`gp02) (
           Parallel`Combine`Private`gp20^2 - 2 Parallel`Combine`Private`gp02 
           Parallel`Combine`Private`gp20 + Parallel`Combine`Private`gp02^2 + 
           4 Parallel`Combine`Private`gp11^2 - 
           Parallel`Combine`Private`gm00^2)], 
        FullSimplify[
        Parallel`Combine`Private`gd0 == 
         1 - Parallel`Combine`Private`gm00 - Parallel`Combine`Private`gp20], 
        FullSimplify[
        Parallel`Combine`Private`gd1 == -(-Parallel`Combine`Private`gp02 - 
           Parallel`Combine`Private`gp20^2 + Parallel`Combine`Private`gp20 - 
           Parallel`Combine`Private`gm00 + 
           Parallel`Combine`Private`gp02 Parallel`Combine`Private`gp20 + 
           Parallel`Combine`Private`gm00^2 - 2 
           Parallel`Combine`Private`gp11^2 + 
           Parallel`Combine`Private`gp02 Parallel`Combine`Private`gm00)], 
        FullSimplify[
        Parallel`Combine`Private`gd2 == -(-Parallel`Combine`Private`gp20^2 + 
           Parallel`Combine`Private`gm00 - 2 Parallel`Combine`Private`gp20 
           Parallel`Combine`Private`gm00 + Parallel`Combine`Private`gp02^2 - 
           Parallel`Combine`Private`gm00^2 + Parallel`Combine`Private`gp20)], 
        
        FullSimplify[
        Parallel`Combine`Private`gd3 == 
         2 Parallel`Combine`Private`gp11^2 - Parallel`Combine`Private`gp02^3 - 
          4 Parallel`Combine`Private`gp11^2 Parallel`Combine`Private`gm00 + 
          Parallel`Combine`Private`gp02 Parallel`Combine`Private`gp20^2 - 
          Parallel`Combine`Private`gp02 Parallel`Combine`Private`gp20 + 
          Parallel`Combine`Private`gp02^2 Parallel`Combine`Private`gp20 - 
          Parallel`Combine`Private`gp02 Parallel`Combine`Private`gm00 + 
          Parallel`Combine`Private`gp20 Parallel`Combine`Private`gm00^2 - 
          Parallel`Combine`Private`gp20^3 + Parallel`Combine`Private`gp20^2 - 
          Parallel`Combine`Private`gm00^2 - 4 Parallel`Combine`Private`gp20 
          Parallel`Combine`Private`gp11^2 - Parallel`Combine`Private`gp20^2 
          Parallel`Combine`Private`gm00 - 4 Parallel`Combine`Private`gp11^2 
          Parallel`Combine`Private`gp02 + 
          Parallel`Combine`Private`gp02 Parallel`Combine`Private`gm00^2 - 
          Parallel`Combine`Private`gp02^2 Parallel`Combine`Private`gm00 + 
          Parallel`Combine`Private`gm00^3 + 
          2 Parallel`Combine`Private`gp02 Parallel`Combine`Private`gp20 
           Parallel`Combine`Private`gm00]}, If[#, True, False]& ]], 
    "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True], 
    "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0.000851`3.080444557916582, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0.0008510000000114815, "Seconds"], "MemoryUsed" -> 
    Quantity[56, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.679082871735723*^9, 3.679082885955467*^9}, {
   3.6790829425115833`*^9, 3.679082960586463*^9}, {3.679083101185893*^9, 
   3.6790831559017477`*^9}, 3.67908319390865*^9, 3.679084637754448*^9}],

Cell[CellGroupData[{

Cell["HMC condition", "Subsection",
 CellChangeTimes->{{3.679082295845175*^9, 3.679082302726015*^9}}],

Cell["vs. Full Derived Form", "Item",
 CellChangeTimes->{{3.679082309824198*^9, 3.679082368961273*^9}, {
  3.679083557789125*^9, 3.679083564115601*^9}}],

Cell[BoxData[
 RowBox[{"quickVerify", "[", 
  RowBox[{
   RowBox[{"fGHMC", "[", 
    RowBox[{
    "\[Beta]", ",", " ", "\[Phi]", ",", "\[Rho]", ",", " ", "\[Tau]"}], "]"}],
    ",", 
   RowBox[{"fG", "[", 
    RowBox[{"\[Beta]", ",", " ", "\[Phi]", ",", 
     RowBox[{"\[Pi]", "/", "2"}], ",", "\[Rho]", ",", " ", "\[Tau]"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.678829024743019*^9, 3.678829077599806*^9}, {
  3.6788312463313932`*^9, 3.678831246457694*^9}, {3.678831320823353*^9, 
  3.6788313209353867`*^9}, {3.679083210750716*^9, 3.679083212821453*^9}, {
  3.679088867621439*^9, 3.6790888759558287`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"],
                 ImageSizeCache->{16., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$1685275",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000117`2.2187008595781554","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 139, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$1685275], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> HoldForm[True], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000117`2.2187008595781554, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.0001190000000406144, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.679088877749111*^9}],

Cell[CellGroupData[{

Cell["Laplace Transform", "Section",
 CellChangeTimes->{{3.6790832851475554`*^9, 3.679083330543231*^9}, {
  3.679087073679715*^9, 3.6790870868389187`*^9}}],

Cell["vs. Full Derived Form", "Item",
 CellChangeTimes->{{3.679087093625671*^9, 3.67908711183292*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f1", "=", 
   RowBox[{"fG", "[", 
    RowBox[{"\[Beta]", ",", "\[Phi]", ",", "\[Theta]", ",", "\[Rho]", ",", 
     RowBox[{"1", "/", "r"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", " ", 
   RowBox[{"F", "[", 
    RowBox[{
    "\[Beta]", ",", "\[Phi]", ",", "\[Theta]", ",", "\[Rho]", ",", " ", "r"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullVerify", "[", 
   RowBox[{"f1", ",", "f2"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.67908713028065*^9, 3.679087180334379*^9}, {
  3.679087238575262*^9, 3.679087242401122*^9}, {3.679087725633212*^9, 
  3.679087727106031*^9}, {3.6790888928000183`*^9, 3.6790889288850527`*^9}, {
  3.67909082862248*^9, 3.679090835253214*^9}, {3.6790931649329023`*^9, 
  3.6790931656115427`*^9}, {3.679093240896097*^9, 3.679093243025208*^9}, {
  3.679094874032365*^9, 3.679094883485146*^9}}],

Cell[BoxData["\<\"Testing Numerators...\"\>"], "Print",
 CellChangeTimes->{3.679092911151041*^9, 3.679092975120916*^9, 
  3.679093005894185*^9, 3.67909306753649*^9, 3.67909316625244*^9, 
  3.67909324758217*^9, 3.679094884194819*^9}],

Cell[BoxData["\<\"... Getting first numerator\"\>"], "Print",
 CellChangeTimes->{3.679092911151041*^9, 3.679092975120916*^9, 
  3.679093005894185*^9, 3.67909306753649*^9, 3.67909316625244*^9, 
  3.67909324758217*^9, 3.67909488420216*^9}],

Cell[BoxData["\<\"... Getting second numerator\"\>"], "Print",
 CellChangeTimes->{3.679092911151041*^9, 3.679092975120916*^9, 
  3.679093005894185*^9, 3.67909306753649*^9, 3.67909316625244*^9, 
  3.67909324758217*^9, 3.6790948892699423`*^9}],

Cell[BoxData["\<\"... Verifying\"\>"], "Print",
 CellChangeTimes->{3.679092911151041*^9, 3.679092975120916*^9, 
  3.679093005894185*^9, 3.67909306753649*^9, 3.67909316625244*^9, 
  3.67909324758217*^9, 3.679094894285432*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"Null", " ", 
      InterpretationBox["\<\"Failed to Simplify within \
\\!\\(\\*RowBox[{\\\"10\\\"}]\\)s. Used PossibleZeroQ instead.\"\>",
       StringForm[
       "Failed to Simplify within ``s. Used PossibleZeroQ instead.", 10],
       Editable->False]}]},
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "TestFailureIcon"],
                 ImageSizeCache->{12., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Failure\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "TestFailureIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Failure\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$4245187",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["False",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000209`2.470661283943048","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 196, "TestID" -> None, "Outcome" -> "Failure", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$4245187], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> HoldForm[False], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000209`2.470661283943048, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.00021500000048035872`, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]},
    {"\<\"First Function\"\>"},
    {
     TagBox[
      FormBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "7"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"16", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], "+", 
                 RowBox[{"32", " ", "\[Rho]"}], "-", "16"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "4"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], "+", 
                 RowBox[{"16", " ", "\[Rho]"}], "-", "8"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "+", 
              RowBox[{"2", " ", "\[Rho]"}], "-", "1"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"8", " ", 
                  SuperscriptBox["\[Rho]", "2"]}], "-", 
                 RowBox[{"24", " ", "\[Rho]"}], "+", "16"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "4"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"6", " ", 
                  SuperscriptBox["\[Rho]", "2"]}], "-", 
                 RowBox[{"14", " ", "\[Rho]"}], "+", "8"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", 
              RowBox[{"2", " ", "\[Rho]"}], "+", "1"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"16", " ", "\[Rho]"}], "-", "16"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "4"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", "\[Rho]"}], "-", "8"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", "1"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"16", "-", 
              RowBox[{"8", " ", "\[Rho]"}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "4"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8", "-", 
              RowBox[{"2", " ", "\[Rho]"}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "1"}], ")"}]}], "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["r", "6"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"24", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], "+", 
                 RowBox[{"32", " ", "\[Rho]"}], "-", "16"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "+", 
              RowBox[{"8", " ", "\[Rho]"}], "-", "4"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"8", " ", 
                  SuperscriptBox["\[Rho]", "2"]}], "-", 
                 RowBox[{"24", " ", "\[Rho]"}], "+", "16"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "4"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"18", " ", 
                  SuperscriptBox["\[Rho]", "2"]}], "-", 
                 RowBox[{"42", " ", "\[Rho]"}], "+", "24"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", 
              RowBox[{"10", " ", "\[Rho]"}], "+", "5"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"16", " ", "\[Rho]"}], "-", "16"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "4"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"12", " ", "\[Rho]"}], "-", "24"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", "5"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"32", "-", 
              RowBox[{"16", " ", "\[Rho]"}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "4"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"32", "-", 
              RowBox[{"8", " ", "\[Rho]"}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "6"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], " ", 
         SuperscriptBox["r", "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"12", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], "+", 
                 RowBox[{"16", " ", "\[Rho]"}], "-", "8"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "+", 
              RowBox[{"12", " ", "\[Rho]"}], "-", "6"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"18", " ", 
                  SuperscriptBox["\[Rho]", "2"]}], "-", 
                 RowBox[{"42", " ", "\[Rho]"}], "+", "24"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", 
              RowBox[{"20", " ", "\[Rho]"}], "+", "10"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"12", " ", "\[Rho]"}], "-", "24"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", "10"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"16", "-", 
              RowBox[{"8", " ", "\[Rho]"}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "4"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"48", "-", 
              RowBox[{"12", " ", "\[Rho]"}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "15"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "3"], " ", 
         SuperscriptBox["r", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"6", " ", 
                  SuperscriptBox["\[Rho]", "2"]}], "-", 
                 RowBox[{"14", " ", "\[Rho]"}], "+", "8"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", 
              RowBox[{"20", " ", "\[Rho]"}], "+", "10"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", "\[Rho]"}], "-", "8"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", "10"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", "\[Rho]"}], "-", "4"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"32", "-", 
              RowBox[{"8", " ", "\[Rho]"}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "20"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "4"], " ", 
         SuperscriptBox["r", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Rho]"}], "-", "1"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"5", "-", 
              RowBox[{"10", " ", "\[Rho]"}]}], ")"}], " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{"5", " ", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8", "-", 
              RowBox[{"2", " ", "\[Rho]"}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "15"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "5"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "\[Rho]"}]}], ")"}], " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], "+", "6"}], 
          ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "6"], " ", "r"}]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {"\<\"Second Function\"\>"},
    {
     TagBox[
      FormBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], "+", 
                 RowBox[{"8", " ", "\[Rho]"}], "-", "4"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "+", 
              RowBox[{"2", " ", "\[Rho]"}], "-", "1"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Rho]", "2"]}], "-", 
                 RowBox[{"6", " ", "\[Rho]"}], "+", "4"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", 
              RowBox[{"2", " ", "\[Rho]"}], "+", "1"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", "\[Rho]"}], "-", "4"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", "1"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"4", "-", 
              RowBox[{"2", " ", "\[Rho]"}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "1"}], ")"}]}], "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["r", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  SuperscriptBox["\[Rho]", "2"]}], "-", 
                 RowBox[{"6", " ", "\[Rho]"}], "+", "4"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", 
              RowBox[{"6", " ", "\[Rho]"}], "+", "3"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", "\[Rho]"}], "-", "4"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", "3"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", "\[Rho]"}], "-", "2"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8", "-", 
              RowBox[{"4", " ", "\[Rho]"}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "4"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], " ", 
         SuperscriptBox["r", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Rho]"}], "-", "1"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"6", " ", "\[Rho]"}]}], ")"}], " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"4", "-", 
              RowBox[{"2", " ", "\[Rho]"}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "6"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "3"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "\[Rho]"}]}], ")"}], " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], "+", "4"}], 
          ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "4"], " ", "r"}]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.679092911151041*^9, 3.679092975120916*^9, 
  3.679093005894185*^9, 3.67909306753649*^9, 3.67909316625244*^9, 
  3.67909324758217*^9, 3.679094904496386*^9}],

Cell[BoxData["\<\"Testing Denominators...\"\>"], "Print",
 CellChangeTimes->{3.679092911151041*^9, 3.679092975120916*^9, 
  3.679093005894185*^9, 3.67909306753649*^9, 3.67909316625244*^9, 
  3.67909324758217*^9, 3.6790949045014467`*^9}],

Cell[BoxData["\<\"... Getting first denominator\"\>"], "Print",
 CellChangeTimes->{3.679092911151041*^9, 3.679092975120916*^9, 
  3.679093005894185*^9, 3.67909306753649*^9, 3.67909316625244*^9, 
  3.67909324758217*^9, 3.679094904506399*^9}],

Cell[BoxData["\<\"... Getting second denominator\"\>"], "Print",
 CellChangeTimes->{3.679092911151041*^9, 3.679092975120916*^9, 
  3.679093005894185*^9, 3.67909306753649*^9, 3.67909316625244*^9, 
  3.67909324758217*^9, 3.679094909552788*^9}],

Cell[BoxData["\<\"... Verifying\"\>"], "Print",
 CellChangeTimes->{3.679092911151041*^9, 3.679092975120916*^9, 
  3.679093005894185*^9, 3.67909306753649*^9, 3.67909316625244*^9, 
  3.67909324758217*^9, 3.679094914562602*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"Null", " ", 
      InterpretationBox["\<\"Failed to Simplify within \
\\!\\(\\*RowBox[{\\\"10\\\"}]\\)s. Used PossibleZeroQ instead.\"\>",
       StringForm[
       "Failed to Simplify within ``s. Used PossibleZeroQ instead.", 10],
       Editable->False]}]},
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "TestFailureIcon"],
                 ImageSizeCache->{12., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Failure\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "TestFailureIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Failure\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$4262664",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["False",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000157`2.3464146502412273","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 197, "TestID" -> None, "Outcome" -> "Failure", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$4262664], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> HoldForm[False], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000157`2.3464146502412273, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.0001560000000608852, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]},
    {"\<\"First Function\"\>"},
    {
     TagBox[
      FormBox[
       RowBox[{
        SuperscriptBox["\[Beta]", "7"], "+", 
        RowBox[{
         SuperscriptBox["r", "7"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"8", " ", 
                  SuperscriptBox["\[Rho]", "2"]}], "-", 
                 RowBox[{"8", " ", "\[Rho]"}]}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "4"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"6", " ", 
                  SuperscriptBox["\[Rho]", "2"]}], "-", 
                 RowBox[{"2", " ", "\[Rho]"}]}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"8", " ", "\[Rho]"}], "-", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "4"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Rho]"}], "-", 
                 RowBox[{"6", " ", 
                  SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"8", " ", "\[Rho]", " ", 
                SuperscriptBox["\[Phi]", "4"]}]}], "-", 
              RowBox[{"2", " ", "\[Rho]", " ", 
               SuperscriptBox["\[Phi]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"8", " ", "\[Rho]", " ", 
            SuperscriptBox["\[Phi]", "4"]}], "+", 
           RowBox[{"2", " ", "\[Rho]", " ", 
            SuperscriptBox["\[Phi]", "2"]}]}], ")"}]}], "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["r", "6"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"8", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], "+", 
                 RowBox[{"24", " ", "\[Rho]"}], "-", "16"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "4"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"6", " ", 
                  SuperscriptBox["\[Rho]", "2"]}], "+", 
                 RowBox[{"10", " ", "\[Rho]"}], "-", "8"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "+", 
              RowBox[{"2", " ", "\[Rho]"}], "-", "1"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"8", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], "-", 
                 RowBox[{"8", " ", "\[Rho]"}], "+", "16"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "4"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"18", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], "-", 
                 RowBox[{"6", " ", "\[Rho]"}], "+", "8"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", 
              RowBox[{"2", " ", "\[Rho]"}], "+", "1"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"4", " ", "\[Rho]"}]}], "-", "8"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", 
              RowBox[{"16", " ", 
               SuperscriptBox["\[Phi]", "4"]}], "-", "1"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"16", " ", "\[Rho]"}], "+", "16"}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "4"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", "\[Rho]"}], "+", "8"}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "1"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], " ", 
         SuperscriptBox["r", "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"6", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], "+", 
                 RowBox[{"26", " ", "\[Rho]"}], "-", "16"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "+", 
              RowBox[{"8", " ", "\[Rho]"}], "-", "4"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"18", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], "-", 
                 RowBox[{"30", " ", "\[Rho]"}], "+", "24"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"16", "-", 
                 RowBox[{"16", " ", "\[Rho]"}]}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "4"]}], "-", 
              RowBox[{"10", " ", "\[Rho]"}], "+", "5"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"8", " ", "\[Rho]"}], "-", "16"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "4"]}], "-", 
              RowBox[{"24", " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", "5"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", "\[Rho]"}], "+", "32"}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "4"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"12", " ", "\[Rho]"}], "+", "32"}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "6"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "3"], " ", 
         SuperscriptBox["r", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"6", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], "+", 
                 RowBox[{"14", " ", "\[Rho]"}], "-", "8"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "+", 
              RowBox[{"12", " ", "\[Rho]"}], "-", "6"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"6", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], "-", 
                 RowBox[{"34", " ", "\[Rho]"}], "+", "24"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", 
              RowBox[{"20", " ", "\[Rho]"}], "+", "10"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"4", " ", "\[Rho]"}], "-", "24"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", "10"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", "\[Rho]"}], "+", "48"}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[Phi]", "4"]}], "+", "15"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "4"], " ", 
         SuperscriptBox["r", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Rho]"}], "-", "8"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", "10"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"8", "-", 
                 RowBox[{"12", " ", "\[Rho]"}]}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", 
              RowBox[{"20", " ", "\[Rho]"}], "+", "10"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", "\[Rho]"}], "-", "4"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Rho]"}], "+", "32"}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "20"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "5"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Rho]"}], "-", "1"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"5", "-", 
              RowBox[{"10", " ", "\[Rho]"}]}], ")"}], " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{"5", " ", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "15"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "6"], " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "\[Rho]"}]}], ")"}], " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], "+", "6"}], 
          ")"}]}]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {"\<\"Second Function\"\>"},
    {
     TagBox[
      FormBox[
       RowBox[{
        SuperscriptBox["\[Beta]", "5"], "+", 
        RowBox[{
         SuperscriptBox["r", "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox["\[Rho]", "2"]}], "-", 
              RowBox[{"2", " ", "\[Rho]"}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"], " ", 
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Rho]"}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"], " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{"2", " ", "\[Rho]", " ", 
            SuperscriptBox["\[Phi]", "2"], " ", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{"2", " ", "\[Rho]", " ", 
            SuperscriptBox["\[Phi]", "2"]}]}], ")"}]}], "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["r", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], "+", 
                 RowBox[{"6", " ", "\[Rho]"}], "-", "4"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "+", 
              RowBox[{"2", " ", "\[Rho]"}], "-", "1"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[Rho]", "2"]}]}], "-", 
                 RowBox[{"2", " ", "\[Rho]"}], "+", "4"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", 
              RowBox[{"2", " ", "\[Rho]"}], "+", "1"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"4", " ", 
                SuperscriptBox["\[Phi]", "2"]}]}], "-", "1"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", "\[Rho]"}], "+", "4"}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "1"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], " ", 
         SuperscriptBox["r", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "\[Rho]"}], "-", "4"}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", "3"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"4", "-", 
                 RowBox[{"4", " ", "\[Rho]"}]}], ")"}], " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", 
              RowBox[{"6", " ", "\[Rho]"}], "+", "3"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", "\[Rho]"}], "-", "2"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Rho]"}], "+", "8"}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "4"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "3"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Rho]"}], "-", "1"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "-", 
              RowBox[{"6", " ", "\[Rho]"}]}], ")"}], " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "6"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "4"], " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "\[Rho]"}]}], ")"}], " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], "+", "4"}], 
          ")"}]}]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.679092911151041*^9, 3.679092975120916*^9, 
  3.679093005894185*^9, 3.67909306753649*^9, 3.67909316625244*^9, 
  3.67909324758217*^9, 3.679094924780374*^9}],

Cell["Laplace Transform with Unit Acceptance", "Subsection",
 CellChangeTimes->{{3.679093727928521*^9, 3.6790937452436132`*^9}}],

Cell[TextData[StyleBox["vs. Full Laplace Transform", "Item"]], "Item",
 CellChangeTimes->{{3.678189777622389*^9, 3.6781898161973267`*^9}, {
  3.678192377518194*^9, 3.6781923819562883`*^9}, {3.679083334389481*^9, 
  3.679083369293969*^9}, {3.679083487593227*^9, 3.6790835337646837`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"quickVerify", "[", 
   RowBox[{
    RowBox[{"Funit", "[", 
     RowBox[{
     "\[Beta]", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "r"}], 
     "]"}], ",", 
    RowBox[{"F", "[", 
     RowBox[{
     "\[Beta]", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "1", ",", 
      " ", "r"}], "]"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.678189897553487*^9, 3.678189946041338*^9}, {
  3.678189994641996*^9, 3.678190001840712*^9}, {3.6781900589932213`*^9, 
  3.678190095662901*^9}, {3.678190794014914*^9, 3.678190800724527*^9}, {
  3.6781922374993687`*^9, 3.678192246691208*^9}, {3.679077275393046*^9, 
  3.679077281761608*^9}, {3.679083342247054*^9, 3.679083344150083*^9}, {
  3.679085246538357*^9, 3.6790852687781057`*^9}, {3.6790889403571243`*^9, 
  3.67908895309651*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"],
                 ImageSizeCache->{16., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$3106201",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000192`2.4338162265355434","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 149, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$3106201], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> HoldForm[True], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000192`2.4338162265355434, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.00018700000009630457`, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.679092327447763*^9}]
}, Open  ]],

Cell[TextData[{
 " ",
 StyleBox["vs. Full Derived Laplace Transform", "Item"]
}], "Item",
 CellChangeTimes->{{3.679078050940267*^9, 3.679078075898377*^9}, {
  3.679078162915738*^9, 3.679078163589429*^9}, {3.679079962738208*^9, 
  3.6790799734965353`*^9}, {3.67908337303826*^9, 3.67908338238171*^9}, {
  3.679083537607648*^9, 3.6790835440924673`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f1", " ", "=", 
   RowBox[{"fG", "[", 
    RowBox[{"\[Beta]", ",", "\[Phi]", ",", "\[Theta]", ",", "1", ",", 
     RowBox[{"1", "/", "r"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", " ", "=", 
   RowBox[{"Funit", "[", 
    RowBox[{
    "\[Beta]", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "r"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullVerify", "[", 
   RowBox[{
   "f1", ",", "f2", ",", " ", "False", ",", " ", "5", ",", " ", "10", ",", 
    " ", "20"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.679085069422097*^9, 3.679085083031389*^9}, {
   3.679085558615263*^9, 3.6790855844241133`*^9}, 3.679085615337977*^9, {
   3.679085663474616*^9, 3.679085694887658*^9}, {3.679085766967165*^9, 
   3.679085769974353*^9}, {3.679085807784614*^9, 3.679085809543515*^9}, {
   3.679086146381132*^9, 3.679086175694189*^9}, {3.6790871374481916`*^9, 
   3.679087154823242*^9}, {3.679088963837873*^9, 3.6790889729439163`*^9}, {
   3.679091157548366*^9, 3.679091158020006*^9}, {3.679092190893063*^9, 
   3.679092191997403*^9}, {3.679093262734233*^9, 3.679093264704528*^9}, {
   3.679094918547467*^9, 3.679094928263506*^9}}],

Cell[BoxData["\<\"Testing Numerators...\"\>"], "Print",
 CellChangeTimes->{
  3.6790910747644987`*^9, {3.679091153363998*^9, 3.679091162136883*^9}, 
   3.679091272078885*^9, 3.6790916610851507`*^9, 3.679091885358086*^9, 
   3.679092192718707*^9, 3.679093202587603*^9, {3.6790932802979507`*^9, 
   3.6790933059934893`*^9}, 3.6790949306338263`*^9}],

Cell[BoxData["\<\"... Getting first numerator\"\>"], "Print",
 CellChangeTimes->{
  3.6790910747644987`*^9, {3.679091153363998*^9, 3.679091162136883*^9}, 
   3.679091272078885*^9, 3.6790916610851507`*^9, 3.679091885358086*^9, 
   3.679092192718707*^9, 3.679093202587603*^9, {3.6790932802979507`*^9, 
   3.6790933059934893`*^9}, 3.6790949306410627`*^9}],

Cell[BoxData["\<\"... Getting second numerator\"\>"], "Print",
 CellChangeTimes->{
  3.6790910747644987`*^9, {3.679091153363998*^9, 3.679091162136883*^9}, 
   3.679091272078885*^9, 3.6790916610851507`*^9, 3.679091885358086*^9, 
   3.679092192718707*^9, 3.679093202587603*^9, {3.6790932802979507`*^9, 
   3.6790933059934893`*^9}, 3.6790949319444103`*^9}],

Cell[BoxData["\<\"... Verifying\"\>"], "Print",
 CellChangeTimes->{
  3.6790910747644987`*^9, {3.679091153363998*^9, 3.679091162136883*^9}, 
   3.679091272078885*^9, 3.6790916610851507`*^9, 3.679091885358086*^9, 
   3.679092192718707*^9, 3.679093202587603*^9, {3.6790932802979507`*^9, 
   3.6790933059934893`*^9}, 3.6790949327978077`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "TestFailureIcon"],
                 ImageSizeCache->{12., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Failure\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "TestFailureIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Failure\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$4273317",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    RowBox[{
                    TagBox[
                    FormBox[
                    RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["r", "2"], " ", 
                    SuperscriptBox["\[Phi]", "2"]}], "+", 
                    RowBox[{"r", " ", 
                    RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[Beta]"}], "-", 
                    RowBox[{
                    RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", "r"}], ")"}]}], "+", 
                    RowBox[{"r", " ", 
                    RowBox[{
                    SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}]}], "-",
                     "r"}], ")"}]}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", "r"}], ")"}], "2"]}], ")"}]}],
                    TraditionalForm],
                    TraditionalForm,
                    Editable->True], "\[Equal]", 
                    TagBox[
                    FormBox[
                    RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    ")"}]}],
                    TraditionalForm],
                    TraditionalForm,
                    Editable->True]}],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000103`2.163352222537166","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 198, "TestID" -> None, "Outcome" -> "Failure", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$4273317], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> 
        HoldForm[
         TraditionalForm[
           Parallel`Combine`Private`r ((Parallel`Combine`Private`r + 
               Parallel`Combine`Private`\[Beta])^2 + 
             2 Parallel`Combine`Private`r^2 Parallel`Combine`Private`\[Phi]^2 + 
             Parallel`Combine`Private`r 
              Cos[Parallel`Combine`Private`\[Theta]] (-
                Parallel`Combine`Private`r - 
               Parallel`Combine`Private`\[Beta] - (Parallel`Combine`Private`r + 
                Parallel`Combine`Private`\[Beta]) 
               Cos[Parallel`Combine`Private`\[Theta]] + 
               Parallel`Combine`Private`r 
                Cos[Parallel`Combine`Private`\[Theta]]^2))] == 
          TraditionalForm[
           Parallel`Combine`Private`r (-(Parallel`Combine`Private`r + 
                Parallel`Combine`Private`\[Beta])^4 - 6 
             Parallel`Combine`Private`r^2 (Parallel`Combine`Private`r + 
               Parallel`Combine`Private`\[Beta])^2 
             Parallel`Combine`Private`\[Phi]^2 - 8 
             Parallel`Combine`Private`r^4 Parallel`Combine`Private`\[Phi]^4 + 
             Parallel`Combine`Private`r 
              Cos[Parallel`Combine`Private`\[Theta]] ((
                 Parallel`Combine`Private`r + 
                 Parallel`Combine`Private`\[Beta])^3 + 
               Cos[Parallel`Combine`Private`\[Theta]] ((
                   Parallel`Combine`Private`r + 
                   Parallel`Combine`Private`\[Beta])^3 + 
                 4 Parallel`Combine`Private`r^2 (Parallel`Combine`Private`r + 
                   Parallel`Combine`Private`\[Beta]) 
                  Parallel`Combine`Private`\[Phi]^2 + 
                 Parallel`Combine`Private`r (-Parallel`Combine`Private`r - 
                   Parallel`Combine`Private`\[Beta] + 
                   2 Parallel`Combine`Private`r 
                    Parallel`Combine`Private`\[Phi]) (
                   Parallel`Combine`Private`r + 
                   Parallel`Combine`Private`\[Beta] + 
                   2 Parallel`Combine`Private`r 
                    Parallel`Combine`Private`\[Phi]) 
                  Cos[Parallel`Combine`Private`\[Theta]])))]], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000103`2.163352222537166, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.00010499999962121365`, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]},
    {"\<\"First Function\"\>"},
    {
     TagBox[
      FormBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox["\[Phi]", "2"]}], "-", "1"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox["\[Phi]", "2"]}], "+", "1"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{"cos", "(", "\[Theta]", ")"}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["\[Phi]", "4"]}], "-", 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Phi]", "2"]}], "-", "1"}], ")"}]}], "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["r", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox["\[Phi]", "2"]}], "+", "3"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["\[Phi]", "2"]}], "-", "4"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], " ", 
         SuperscriptBox["r", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Phi]", "2"]}], "-", "6"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "3"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], "+", 
           RowBox[{"cos", "(", "\[Theta]", ")"}], "-", "4"}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox["\[Beta]", "4"], " ", "r"}]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {"\<\"Second Function\"\>"},
    {
     TagBox[
      FormBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}], "-", 
           RowBox[{
            SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], "-", 
           RowBox[{"cos", "(", "\[Theta]", ")"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "1"}], ")"}]}], "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{"cos", "(", "\[Theta]", ")"}], "+", "2"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], " ", "r"}]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.6790910747644987`*^9, {3.679091153363998*^9, 3.679091162136883*^9}, 
   3.679091272078885*^9, 3.6790916610851507`*^9, 3.679091885358086*^9, 
   3.679092192718707*^9, 3.679093202587603*^9, {3.6790932802979507`*^9, 
   3.6790933059934893`*^9}, 3.679094936660078*^9}],

Cell[BoxData["\<\"Testing Denominators...\"\>"], "Print",
 CellChangeTimes->{
  3.6790910747644987`*^9, {3.679091153363998*^9, 3.679091162136883*^9}, 
   3.679091272078885*^9, 3.6790916610851507`*^9, 3.679091885358086*^9, 
   3.679092192718707*^9, 3.679093202587603*^9, {3.6790932802979507`*^9, 
   3.6790933059934893`*^9}, 3.679094936665255*^9}],

Cell[BoxData["\<\"... Getting first denominator\"\>"], "Print",
 CellChangeTimes->{
  3.6790910747644987`*^9, {3.679091153363998*^9, 3.679091162136883*^9}, 
   3.679091272078885*^9, 3.6790916610851507`*^9, 3.679091885358086*^9, 
   3.679092192718707*^9, 3.679093202587603*^9, {3.6790932802979507`*^9, 
   3.6790933059934893`*^9}, 3.679094936670299*^9}],

Cell[BoxData["\<\"... Getting second denominator\"\>"], "Print",
 CellChangeTimes->{
  3.6790910747644987`*^9, {3.679091153363998*^9, 3.679091162136883*^9}, 
   3.679091272078885*^9, 3.6790916610851507`*^9, 3.679091885358086*^9, 
   3.679092192718707*^9, 3.679093202587603*^9, {3.6790932802979507`*^9, 
   3.6790933059934893`*^9}, 3.6790949378474083`*^9}],

Cell[BoxData["\<\"... Verifying\"\>"], "Print",
 CellChangeTimes->{
  3.6790910747644987`*^9, {3.679091153363998*^9, 3.679091162136883*^9}, 
   3.679091272078885*^9, 3.6790916610851507`*^9, 3.679091885358086*^9, 
   3.679092192718707*^9, 3.679093202587603*^9, {3.6790932802979507`*^9, 
   3.6790933059934893`*^9}, 3.6790949386340714`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"Null", " ", 
      InterpretationBox["\<\"Failed to Simplify within \\!\\(\\*RowBox[{\\\"5\
\\\"}]\\)s. Used PossibleZeroQ instead.\"\>",
       StringForm[
       "Failed to Simplify within ``s. Used PossibleZeroQ instead.", 5],
       Editable->False]}]},
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "TestFailureIcon"],
                 ImageSizeCache->{12., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Failure\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "TestFailureIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Failure\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$4279112",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["False",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000146`2.3148678536164313","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 199, "TestID" -> None, "Outcome" -> "Failure", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$4279112], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> HoldForm[False], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000146`2.3148678536164313, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.0001449999999749707, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]},
    {"\<\"First Function\"\>"},
    {
     TagBox[
      FormBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Beta]", "5"]}], "+", 
        RowBox[{
         SuperscriptBox["r", "5"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Phi]", "2"], " ", 
             RowBox[{
              SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}]}]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Phi]", "2"], " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", 
               SuperscriptBox["\[Phi]", "4"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Phi]", "2"]}]}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["\[Phi]", "4"]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Phi]", "2"]}]}], ")"}]}], "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["r", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", 
               SuperscriptBox["\[Phi]", "2"]}], "+", "1"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", 
               SuperscriptBox["\[Phi]", "2"]}], "+", "1"}], ")"}], " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{
            SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}], "-", 
           RowBox[{"16", " ", 
            SuperscriptBox["\[Phi]", "4"]}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["\[Phi]", "2"]}], "-", "1"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], " ", 
         SuperscriptBox["r", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"6", " ", 
               SuperscriptBox["\[Phi]", "2"]}], "+", "3"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox["\[Phi]", "2"]}], "+", "3"}], ")"}], " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{"18", " ", 
            SuperscriptBox["\[Phi]", "2"]}], "-", "4"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "3"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["\[Phi]", "2"]}], "-", "6"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "4"], " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], "+", 
           RowBox[{"cos", "(", "\[Theta]", ")"}], "-", "4"}], ")"}]}]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {"\<\"Second Function\"\>"},
    {
     TagBox[
      FormBox[
       RowBox[{
        SuperscriptBox["\[Beta]", "3"], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["r", "3"], " ", 
         SuperscriptBox["\[Phi]", "2"], " ", 
         RowBox[{
          SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}]}], "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}], "-", 
           RowBox[{
            SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], "-", 
           RowBox[{"cos", "(", "\[Theta]", ")"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", "1"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}]}], "-", 
           RowBox[{"cos", "(", "\[Theta]", ")"}], "+", "2"}], ")"}]}]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.6790910747644987`*^9, {3.679091153363998*^9, 3.679091162136883*^9}, 
   3.679091272078885*^9, 3.6790916610851507`*^9, 3.679091885358086*^9, 
   3.679092192718707*^9, 3.679093202587603*^9, {3.6790932802979507`*^9, 
   3.6790933059934893`*^9}, 3.679094943709342*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Laplace Transform with HMC Condition", "Subsection",
 CellChangeTimes->{{3.679084125647485*^9, 3.6790841388237877`*^9}}],

Cell[CellGroupData[{

Cell["\<\
vs. Laplace Transform with HMC condition - simplifications are to speed up \
result\
\>", "Item",
 CellChangeTimes->{{3.678181605941963*^9, 3.678181622714802*^9}, 
   3.6781872054674797`*^9, {3.6781878552344627`*^9, 3.6781878553938437`*^9}, 
   3.6790842502831087`*^9, {3.679084308782062*^9, 3.679084311161995*^9}, {
   3.679084403752102*^9, 3.679084410368335*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t2", " ", "=", " ", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"\[Beta]", ",", "\[Phi]", ",", 
       FractionBox["\[Pi]", "2"], ",", "\[Rho]", ",", "r"}], "]"}], 
     "\[Equal]", " ", 
     RowBox[{"FHMC", "[", 
      RowBox[{"\[Beta]", ",", "\[Phi]", ",", " ", "\[Rho]", ",", " ", "r"}], 
      "]"}]}], "]"}], "//", "VerificationTest"}]}]], "Input",
 CellChangeTimes->{{3.6790860584242563`*^9, 3.6790861433552303`*^9}, {
  3.679086180862658*^9, 3.679086185269587*^9}, {3.679086224270207*^9, 
  3.679086234578402*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"FullSimplify", "[", 
                 RowBox[{
                  RowBox[{"F", "[", 
                   RowBox[{"\[Beta]", ",", "\[Phi]", ",", 
                    FractionBox["\[Pi]", "2"], ",", "\[Rho]", ",", "r"}], 
                   "]"}], "\[Equal]", 
                  RowBox[{"FHMC", "[", 
                   RowBox[{
                   "\[Beta]", ",", "\[Phi]", ",", "\[Rho]", ",", "r"}], 
                   "]"}]}], "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.00055`2.890877687326238","\"s\"","seconds","\"Seconds\""},
                 
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 65, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      FullSimplify[
      Parallel`Combine`Private`F[
        Parallel`Combine`Private`\[Beta], Parallel`Combine`Private`\[Phi], Pi/
         2, Parallel`Combine`Private`\[Rho], Parallel`Combine`Private`r] == 
       Parallel`Combine`Private`FHMC[
        Parallel`Combine`Private`\[Beta], Parallel`Combine`Private`\[Phi], 
         Parallel`Combine`Private`\[Rho], Parallel`Combine`Private`r]]], 
    "ExpectedOutput" -> HoldForm[True], "ActualOutput" -> HoldForm[True], 
    "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0.00055`2.890877687326238, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0.0005479999999806751, "Seconds"], "MemoryUsed" -> 
    Quantity[8760, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6790860870696497`*^9, 3.6790861112204123`*^9}, {
  3.679086215187646*^9, 3.679086236236175*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["vs. Derived Laplace Transform with HMC condition", "Item",
 CellChangeTimes->{{3.679078050940267*^9, 3.679078075898377*^9}, {
  3.679084286614749*^9, 3.679084303446587*^9}, {3.679086250522593*^9, 
  3.6790862524888563`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f1", " ", "=", " ", 
   RowBox[{"fGHMC", "[", 
    RowBox[{"\[Beta]", ",", "\[Phi]", ",", "\[Rho]", ",", 
     RowBox[{"1", "/", "r"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", " ", "=", " ", 
   RowBox[{"FHMC", "[", 
    RowBox[{"\[Beta]", ",", " ", "\[Phi]", ",", "\[Rho]", ",", " ", "r"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quickVerify", "[", 
   RowBox[{"f1", ",", "f2"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.679084431276638*^9, 3.679084446511643*^9}, {
  3.679084489361123*^9, 3.679084493791368*^9}, {3.679086253853394*^9, 
  3.679086367180615*^9}, {3.679087397246089*^9, 3.679087416796611*^9}, {
  3.679088615675397*^9, 3.679088622534547*^9}, {3.679093292054521*^9, 
  3.679093292354642*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"],
                 ImageSizeCache->{16., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$4214506",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000123`2.240420109271392","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 182, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$4214506], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> HoldForm[True], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000123`2.240420109271392, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.00012400000014167745`, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{{3.679088616951787*^9, 3.679088622994525*^9}, 
   3.679091656721211*^9, 3.679093332084285*^9, 3.6790942360068417`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Laplace Transform with Unit Acceptance and HMC condition", \
"Subsubsection",
 CellChangeTimes->{{3.679083796747159*^9, 3.679083824767975*^9}}],

Cell[TextData[{
 " ",
 StyleBox["vs. Laplace Transform with Unit Acceptance", "Item"]
}], "Item",
 CellChangeTimes->{{3.679078050940267*^9, 3.679078075898377*^9}, {
  3.679078162915738*^9, 3.679078163589429*^9}, {3.679079962738208*^9, 
  3.6790799734965353`*^9}, {3.67908337303826*^9, 3.67908338238171*^9}, {
  3.679083537607648*^9, 3.6790835440924673`*^9}, {3.679083934743288*^9, 
  3.679083949844132*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"quickVerify", "[", 
   RowBox[{
    RowBox[{"FHMCunit", "[", 
     RowBox[{"\[Beta]", ",", " ", "\[Phi]", ",", " ", "r"}], " ", "]"}], ",", 
    
    RowBox[{"Funit", "[", 
     RowBox[{"\[Beta]", ",", " ", "\[Phi]", ",", " ", 
      RowBox[{"\[Pi]", "/", "2"}], ",", "r"}], " ", "]"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.679078050940267*^9, 3.679078075898377*^9}, {
  3.679078162915738*^9, 3.679078163589429*^9}, {3.679079962738208*^9, 
  3.6790799734965353`*^9}, {3.67908337303826*^9, 3.67908338238171*^9}, {
  3.679083537607648*^9, 3.6790835440924673`*^9}, {3.679083934743288*^9, 
  3.67908403518894*^9}, {3.6790889942651157`*^9, 3.6790890023352833`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"FullSimplify", "[", 
                 RowBox[{
                  RowBox[{"FHMCunit", "[", 
                   RowBox[{"\[Beta]", ",", "\[Phi]", ",", "r"}], "]"}], 
                  "\[Equal]", 
                  RowBox[{"Funit", "[", 
                   RowBox[{"\[Beta]", ",", "\[Phi]", ",", 
                    FractionBox["\[Pi]", "2"], ",", "r"}], "]"}]}], "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.000363`2.7104216228681066","\"s\"","seconds",
                  "\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 19, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      FullSimplify[
      Parallel`Combine`Private`FHMCunit[
        Parallel`Combine`Private`\[Beta], Parallel`Combine`Private`\[Phi], 
         Parallel`Combine`Private`r] == 
       Parallel`Combine`Private`Funit[
        Parallel`Combine`Private`\[Beta], Parallel`Combine`Private`\[Phi], Pi/
         2, Parallel`Combine`Private`r]]], "ExpectedOutput" -> HoldForm[True],
     "ActualOutput" -> HoldForm[True], "ExpectedMessages" -> {}, 
    "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0.000363`2.7104216228681066, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0.0003629999999930078, "Seconds"], "MemoryUsed" -> 
    Quantity[208, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Input",
 CellChangeTimes->{{3.679084040233152*^9, 3.679084068417075*^9}}],

Cell[TextData[{
 "vs. Full ",
 StyleBox["Laplace Transform and an enforced condition of \[Rho]=1", "Item"]
}], "Item",
 CellChangeTimes->{{3.678192351309095*^9, 3.678192404668195*^9}, {
  3.679086956545384*^9, 3.67908698804107*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"quickVerify", "[", 
  RowBox[{
   RowBox[{"FHMCunit", "[", 
    RowBox[{"\[Beta]", ",", " ", "\[Phi]", ",", " ", "r"}], "]"}], ",", 
   RowBox[{"F", "[", 
    RowBox[{"\[Beta]", ",", " ", "\[Phi]", ",", " ", 
     RowBox[{"\[Pi]", "/", "2"}], ",", " ", "1", ",", " ", "r"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.678192413284155*^9, 3.678192429675375*^9}, {
   3.678194244832429*^9, 3.6781942451351643`*^9}, {3.67819429842445*^9, 
   3.6781942998946466`*^9}, 3.679086634563428*^9, {3.679089008067811*^9, 
   3.679089011694606*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestResultObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"],
             ImageSizeCache->{16., {4., 8.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "SuccessIcon"]],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Outcome: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Success\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Test ID: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["None",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Input: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                RowBox[{"FullSimplify", "[", 
                 RowBox[{
                  RowBox[{"FHMCunit", "[", 
                   RowBox[{"\[Beta]", ",", "\[Phi]", ",", "r"}], "]"}], 
                  "\[Equal]", 
                  RowBox[{"F", "[", 
                   RowBox[{"\[Beta]", ",", "\[Phi]", ",", 
                    FractionBox["\[Pi]", "2"], ",", "1", ",", "r"}], "]"}]}], 
                 "]"}],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expected output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Actual output: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox["True",
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Time Taken: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               TagBox[
                
                TemplateBox[{
                 "0.012879`4.260397141031095","\"s\"","seconds","\"Seconds\""},
                 "Quantity"],
                Short[#, 
                 Rational[2, 3]]& ],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestResultObject[
   Association[
   "TestIndex" -> 77, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
    HoldForm[
      FullSimplify[
      Parallel`Combine`Private`FHMCunit[
        Parallel`Combine`Private`\[Beta], Parallel`Combine`Private`\[Phi], 
         Parallel`Combine`Private`r] == 
       Parallel`Combine`Private`F[
        Parallel`Combine`Private`\[Beta], Parallel`Combine`Private`\[Phi], Pi/
         2, 1, Parallel`Combine`Private`r]]], "ExpectedOutput" -> 
    HoldForm[True], "ActualOutput" -> HoldForm[True], 
    "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
    Quantity[0.012879`4.260397141031095, "Seconds"], "CPUTimeUsed" -> 
    Quantity[0.012713999999959924`, "Seconds"], "MemoryUsed" -> 
    Quantity[-3280, "Bytes"]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.678196177859042*^9, 3.678196284470687*^9, 3.6781963396698313`*^9, {
   3.678203628850588*^9, 3.678203651291842*^9}, 3.6782061386334*^9, 
   3.678206692038875*^9, 3.6782214705814533`*^9, 3.6784359929031076`*^9, {
   3.6784529188669767`*^9, 3.6784529310135508`*^9}, 3.678717070818768*^9, 
   3.6787177187615423`*^9, 3.678717936708406*^9, 3.6787180565519857`*^9, 
   3.678718218659327*^9, 3.678718576998111*^9, {3.678718926069447*^9, 
   3.678718947912225*^9}, 3.678719113675358*^9, 3.6787206063208447`*^9, 
   3.678720760005704*^9, 3.678729931510236*^9, 3.678732714719678*^9, {
   3.678732987965268*^9, 3.678733008106447*^9}, 3.6788253948703938`*^9, 
   3.6788326275173264`*^9, 3.678835345534733*^9, 3.67883551861648*^9, 
   3.678939328013527*^9, 3.679061103848796*^9, 3.6790669034990997`*^9, 
   3.67907019472925*^9, 3.679071197754498*^9, 3.679086635948209*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrated Autocorrelations", "Section",
 CellChangeTimes->{{3.67908691257642*^9, 3.6790869231231947`*^9}, 
   3.6790873011245213`*^9}],

Cell[TextData[{
 " ",
 StyleBox["vs. Laplace Transform  for  \[Beta] = 0", "Item"]
}], "Item",
 CellChangeTimes->{{3.678186746362998*^9, 3.678186797921856*^9}, {
  3.678186879129506*^9, 3.67818688018461*^9}, {3.67818691440899*^9, 
  3.678186930191765*^9}, {3.678187178565208*^9, 3.678187182788081*^9}, {
  3.6790869483940353`*^9, 3.6790869509862328`*^9}, {3.679086996493968*^9, 
  3.6790870130875072`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"quickVerify", "[", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"\[Phi]", ",", " ", "\[Theta]", ",", " ", "\[Rho]"}], "]"}], " ", 
   ",", " ", 
   RowBox[{"F", "[", 
    RowBox[{
    "0", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "\[Rho]", ",", 
     " ", "r"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.678186799155952*^9, 3.678186869288866*^9}, {
  3.679086928459992*^9, 3.6790869360772047`*^9}, {3.679089018159649*^9, 
  3.679089022982126*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"],
                 ImageSizeCache->{16., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$4153174",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000144`2.3088774899272435","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 170, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$4153174], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> HoldForm[True], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000144`2.3088774899272435, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.00014499999952022335`, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.679093332153617*^9}]
}, Open  ]],

Cell[" vs. Full Derived Form for \[Beta] = 0", "Item",
 CellChangeTimes->{{3.679093827029786*^9, 3.679093852109449*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullVerify", "[", 
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"\[Phi]", ",", " ", "\[Theta]", ",", " ", "\[Rho]"}], "]"}], " ", 
   ",", " ", 
   RowBox[{"fG", "[", 
    RowBox[{
    "0", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "\[Rho]", ",", 
     " ", 
     RowBox[{"1", "/", "r"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.679093862698943*^9, 3.679093878352129*^9}, {
  3.6790939104069357`*^9, 3.67909391091486*^9}}],

Cell[BoxData["\<\"Testing Numerators...\"\>"], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093911522128*^9}],

Cell[BoxData["\<\"... Getting first numerator\"\>"], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093911528322*^9}],

Cell[BoxData["\<\"... Getting second numerator\"\>"], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093914106627*^9}],

Cell[BoxData["\<\"... Verifying\"\>"], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093917121086*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"Null", " ", 
      InterpretationBox["\<\"Failed to Simplify within \
\\!\\(\\*RowBox[{\\\"10\\\"}]\\)s. Used PossibleZeroQ instead.\"\>",
       StringForm[
       "Failed to Simplify within ``s. Used PossibleZeroQ instead.", 10],
       Editable->False]}]},
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "TestFailureIcon"],
                 ImageSizeCache->{12., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Failure\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "TestFailureIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Failure\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$4172586",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["False",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000128`2.257724967479862","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 176, "TestID" -> None, "Outcome" -> "Failure", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$4172586], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> HoldForm[False], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000128`2.257724967479862, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.00012999999989915523`, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]},
    {"\<\"First Function\"\>"},
    {
     TagBox[
      FormBox[
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox["\[Rho]", "2"], " ", 
           SuperscriptBox["\[Phi]", "2"]}], 
          RowBox[{
           RowBox[{"cos", "(", "\[Theta]", ")"}], "+", "1"}]]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Rho]", "-", "1"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "-", 
           RowBox[{"2", " ", "\[Rho]"}], "+", "1"}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Rho]", "-", "2"}], ")"}], " ", "\[Rho]", " ", 
         SuperscriptBox["\[Phi]", "2"], " ", 
         RowBox[{
          SuperscriptBox["csc", "2"], "(", 
          FractionBox["\[Theta]", "2"], ")"}]}], "+", 
        RowBox[{"16", " ", 
         RowBox[{"(", 
          RowBox[{"\[Rho]", "-", "1"}], ")"}], " ", 
         SuperscriptBox["\[Phi]", "2"]}], "-", "4"}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {"\<\"Second Function\"\>"},
    {
     TagBox[
      FormBox[
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"16", " ", 
                SuperscriptBox["\[Rho]", "2"]}]}], "+", 
              RowBox[{"32", " ", "\[Rho]"}], "-", "16"}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "4"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"12", " ", 
                SuperscriptBox["\[Rho]", "2"]}]}], "+", 
              RowBox[{"16", " ", "\[Rho]"}], "-", "8"}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "+", 
           RowBox[{"2", " ", "\[Rho]"}], "-", "1"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", 
               SuperscriptBox["\[Rho]", "2"]}], "-", 
              RowBox[{"24", " ", "\[Rho]"}], "+", "16"}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "4"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"6", " ", 
               SuperscriptBox["\[Rho]", "2"]}], "-", 
              RowBox[{"14", " ", "\[Rho]"}], "+", "8"}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "-", 
           RowBox[{"2", " ", "\[Rho]"}], "+", "1"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{
          SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"16", " ", "\[Rho]"}], "-", "16"}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "4"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", "\[Rho]"}], "-", "8"}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}], "-", "1"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"16", "-", 
           RowBox[{"8", " ", "\[Rho]"}]}], ")"}], " ", 
         SuperscriptBox["\[Phi]", "4"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"8", "-", 
           RowBox[{"2", " ", "\[Rho]"}]}], ")"}], " ", 
         SuperscriptBox["\[Phi]", "2"]}], "+", "1"}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.67909392718106*^9}],

Cell[BoxData["\<\"Testing Denominators...\"\>"], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093927189912*^9}],

Cell[BoxData["\<\"... Getting first denominator\"\>"], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093927197425*^9}],

Cell[BoxData["\<\"... Getting second denominator\"\>"], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.67909392970194*^9}],

Cell[BoxData["\<\"... Verifying\"\>"], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093932715433*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "TestFailureIcon"],
                 ImageSizeCache->{12., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Failure\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "TestFailureIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Failure\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$4199266",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    RowBox[{
                    TagBox[
                    FormBox[
                    RowBox[{"8", " ", "\[Rho]", " ", 
                    SuperscriptBox["\[Phi]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Rho]", "-", "1"}], ")"}], " ", 
                    RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", "1"}], 
                    ")"}]}],
                    TraditionalForm],
                    TraditionalForm,
                    Editable->True], "\[Equal]", 
                    TagBox[
                    FormBox[
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Rho]", " ", 
                    SuperscriptBox["\[Phi]", "2"], " ", 
                    RowBox[{
                    SuperscriptBox["sin", "2"], "(", "\[Theta]", ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Rho]", "-", "1"}], ")"}], " ", 
                    SuperscriptBox["\[Phi]", "2"]}], "+", 
                    RowBox[{"3", " ", "\[Rho]"}], "-", "1"}], ")"}]}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Phi]", "2"]}], "-", "1"}], ")"}]}],
                    TraditionalForm],
                    TraditionalForm,
                    Editable->True]}],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000118`2.222397005138119","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 177, "TestID" -> None, "Outcome" -> "Failure", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$4199266], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> 
        HoldForm[
         TraditionalForm[
           8 Parallel`Combine`Private`\[Rho] 
            Parallel`Combine`Private`\[Phi]^2 (-1 + (-1 + 
               Parallel`Combine`Private`\[Rho]) 
              Cos[Parallel`Combine`Private`\[Theta]])] == 
          TraditionalForm[(-2) Parallel`Combine`Private`\[Rho] 
            Parallel`Combine`Private`\[Phi]^2 (-1 - 4 
             Parallel`Combine`Private`\[Phi]^2 + (-1 + 
               3 Parallel`Combine`Private`\[Rho] + 
               4 (-1 + Parallel`Combine`Private`\[Rho]) 
                Parallel`Combine`Private`\[Phi]^2) 
              Cos[Parallel`Combine`Private`\[Theta]]) 
            Sin[Parallel`Combine`Private`\[Theta]]^2]], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000118`2.222397005138119, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.00011900000026798807`, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]},
    {"\<\"First Function\"\>"},
    {
     TagBox[
      FormBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"8", " ", 
            SuperscriptBox["\[Rho]", "2"]}], "-", 
           RowBox[{"8", " ", "\[Rho]"}]}], ")"}], " ", 
         SuperscriptBox["\[Phi]", "2"], " ", 
         RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
        RowBox[{"8", " ", "\[Rho]", " ", 
         SuperscriptBox["\[Phi]", "2"]}]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {"\<\"Second Function\"\>"},
    {
     TagBox[
      FormBox[
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", 
               SuperscriptBox["\[Rho]", "2"]}], "-", 
              RowBox[{"8", " ", "\[Rho]"}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "4"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"6", " ", 
               SuperscriptBox["\[Rho]", "2"]}], "-", 
              RowBox[{"2", " ", "\[Rho]"}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"cos", "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", "\[Rho]"}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "4"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "\[Rho]"}], "-", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Rho]", "2"]}]}], ")"}], " ", 
            SuperscriptBox["\[Phi]", "2"]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{
          SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"8", " ", "\[Rho]", " ", 
             SuperscriptBox["\[Phi]", "4"]}]}], "-", 
           RowBox[{"2", " ", "\[Rho]", " ", 
            SuperscriptBox["\[Phi]", "2"]}]}], ")"}]}], "+", 
        RowBox[{"8", " ", "\[Rho]", " ", 
         SuperscriptBox["\[Phi]", "4"]}], "+", 
        RowBox[{"2", " ", "\[Rho]", " ", 
         SuperscriptBox["\[Phi]", "2"]}]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093933159903*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrated Autocorrelations with Unit Acceptance", "Subsection",
 CellChangeTimes->{{3.679087284063723*^9, 3.679087302828409*^9}}],

Cell[TextData[{
 " ",
 StyleBox["vs. Laplace Transform with unit Acceptance for \[Beta] = 0", "Item"]
}], "Item",
 CellChangeTimes->{{3.678189777622389*^9, 3.6781898161973267`*^9}, {
  3.678192377518194*^9, 3.6781923819562883`*^9}, {3.678193850253983*^9, 
  3.678193871261023*^9}, {3.679087374726563*^9, 3.6790873885969887`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f1", " ", "=", " ", 
   RowBox[{"Aunit", "[", 
    RowBox[{"\[Phi]", ",", " ", "\[Theta]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", " ", "=", " ", 
   RowBox[{"Funit", "[", 
    RowBox[{"0", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "r"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"quickVerify", "[", 
   RowBox[{"f1", ",", "f2"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6790873172918863`*^9, 3.6790873541956377`*^9}, {
   3.67908773687259*^9, 3.679087740829623*^9}, {3.679087991027701*^9, 
   3.6790879915953703`*^9}, {3.6790880435510607`*^9, 3.6790881465033484`*^9}, 
   3.67908837780089*^9, 3.679089029684849*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"],
                 ImageSizeCache->{16., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$4153194",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000176`2.3960276656461437","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 171, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$4153194], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> HoldForm[True], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000176`2.3960276656461437, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.00017699999989417847`, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{{3.679088062943334*^9, 3.679088124785277*^9}, {
   3.679088378685226*^9, 3.6790884011402082`*^9}, {3.679088446271563*^9, 
   3.6790884750552197`*^9}, {3.679088549570511*^9, 3.6790885992841043`*^9}, 
   3.6790933322748127`*^9}]
}, Open  ]]
}, Open  ]],

Cell[" vs. Full Derived Form for \[Beta] = 0 and \[Rho]=1", "Item",
 CellChangeTimes->{{3.679093827029786*^9, 3.679093852109449*^9}, {
  3.6790940464528627`*^9, 3.6790940514677057`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullVerify", "[", 
  RowBox[{
   RowBox[{"Aunit", "[", 
    RowBox[{"\[Phi]", ",", " ", "\[Theta]"}], "]"}], " ", ",", " ", 
   RowBox[{"fG", "[", 
    RowBox[{
    "0", ",", " ", "\[Phi]", ",", " ", "\[Theta]", ",", " ", "1", ",", " ", 
     RowBox[{"1", "/", "r"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.679093862698943*^9, 3.679093878352129*^9}, {
  3.6790939104069357`*^9, 3.67909391091486*^9}, {3.6790940158859873`*^9, 
  3.679094023289263*^9}}],

Cell[BoxData["\<\"Testing Numerators...\"\>"], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093911522128*^9, 
  3.679094024058103*^9, 3.67909497918361*^9}],

Cell[BoxData["\<\"... Getting first numerator\"\>"], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093911522128*^9, 
  3.679094024058103*^9, 3.679094979190216*^9}],

Cell[BoxData["\<\"... Getting second numerator\"\>"], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093911522128*^9, 
  3.679094024058103*^9, 3.6790949792855253`*^9}],

Cell[BoxData["\<\"... Verifying\"\>"], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093911522128*^9, 
  3.679094024058103*^9, 3.679094979747197*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "TestFailureIcon"],
                 ImageSizeCache->{12., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Failure\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "TestFailureIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Failure\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$4287779",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    RowBox[{
                    TagBox[
                    FormBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"2", " ", "\[Theta]"}], ")"}]}], "+", 
                    RowBox[{"cos", "(", 
                    RowBox[{"3", " ", "\[Theta]"}], ")"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["\[Phi]", "2"]}], "+", "2"}], ")"}]}],
                    TraditionalForm],
                    TraditionalForm,
                    Editable->True], "\[Equal]", 
                    TagBox[
                    FormBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["cot", "2"], "(", "\[Theta]", ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Phi]", "2"], " ", 
                    RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], "+", 
                    RowBox[{"cos", "(", "\[Theta]", ")"}], "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Phi]", "2"]}], "-", "1"}], ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    ")"}], " ", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], 
                    "-", 
                    RowBox[{
                    RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
                    RowBox[{"csc", "(", "\[Theta]", ")"}]}]}],
                    TraditionalForm],
                    TraditionalForm,
                    Editable->True]}],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000125`2.2474250108400504","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 200, "TestID" -> None, "Outcome" -> "Failure", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$4287779], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> 
        HoldForm[
         TraditionalForm[(2 + 8 Parallel`Combine`Private`\[Phi]^2 - Cos[
             Parallel`Combine`Private`\[Theta]] - 2 
             Cos[2 Parallel`Combine`Private`\[Theta]] + 
             Cos[3 Parallel`Combine`Private`\[Theta]]) 
            Csc[Parallel`Combine`Private`\[Theta]]^2] == 
          TraditionalForm[(-1 - 4 Parallel`Combine`Private`\[Phi]^2 + 
              Cos[Parallel`Combine`Private`\[Theta]] - 4 
              Parallel`Combine`Private`\[Phi]^2 
              Cos[Parallel`Combine`Private`\[Theta]]) 
             Cot[Parallel`Combine`Private`\[Theta]]^2 - 
            Cot[Parallel`Combine`Private`\[Theta]] 
            Csc[Parallel`Combine`Private`\[Theta]] + (1 + 
              6 Parallel`Combine`Private`\[Phi]^2 + 
              8 Parallel`Combine`Private`\[Phi]^4) 
             Csc[Parallel`Combine`Private`\[Theta]]^2]], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000125`2.2474250108400504, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.0001260000003640016, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]},
    {"\<\"First Function\"\>"},
    {
     TagBox[
      FormBox[
       RowBox[{
        RowBox[{"8", " ", 
         SuperscriptBox["\[Phi]", "2"], " ", 
         RowBox[{
          SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"2", " ", 
             RowBox[{"cos", "(", 
              RowBox[{"2", " ", "\[Theta]"}], ")"}]}]}], "+", 
           RowBox[{"cos", "(", 
            RowBox[{"3", " ", "\[Theta]"}], ")"}], "+", "2"}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}]}], "-", 
        RowBox[{
         RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
         RowBox[{"csc", "(", "\[Theta]", ")"}]}]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {"\<\"Second Function\"\>"},
    {
     TagBox[
      FormBox[
       RowBox[{
        RowBox[{"8", " ", 
         SuperscriptBox["\[Phi]", "4"], " ", 
         RowBox[{
          SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox["\[Phi]", "2"], " ", 
         RowBox[{
          SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}]}], "+", 
        RowBox[{
         RowBox[{
          SuperscriptBox["cos", "3"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["\[Phi]", "2"], " ", 
            RowBox[{
             SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}]}]}], ")"}]}], 
        "+", 
        RowBox[{
         RowBox[{
          SuperscriptBox["cos", "2"], "(", "\[Theta]", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Phi]", "2"], " ", 
             RowBox[{
              SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}]}]}], "-", 
           RowBox[{
            SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}]}], ")"}]}], 
        "+", 
        RowBox[{
         SuperscriptBox["csc", "2"], "(", "\[Theta]", ")"}], "-", 
        RowBox[{
         RowBox[{"cot", "(", "\[Theta]", ")"}], " ", 
         RowBox[{"csc", "(", "\[Theta]", ")"}]}]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093911522128*^9, 
  3.679094024058103*^9, 3.6790949803381853`*^9}],

Cell[BoxData["\<\"Testing Denominators...\"\>"], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093911522128*^9, 
  3.679094024058103*^9, 3.679094980345665*^9}],

Cell[BoxData["\<\"... Getting first denominator\"\>"], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093911522128*^9, 
  3.679094024058103*^9, 3.679094980351356*^9}],

Cell[BoxData["\<\"... Getting second denominator\"\>"], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093911522128*^9, 
  3.679094024058103*^9, 3.67909498043503*^9}],

Cell[BoxData["\<\"... Verifying\"\>"], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093911522128*^9, 
  3.679094024058103*^9, 3.679094980863332*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "TestFailureIcon"],
                 ImageSizeCache->{12., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Failure\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "TestFailureIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Failure\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$4289692",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    RowBox[{
                    TagBox[
                    FormBox[
                    RowBox[{"8", " ", 
                    SuperscriptBox["\[Phi]", "2"]}],
                    TraditionalForm],
                    TraditionalForm,
                    Editable->True], "\[Equal]", 
                    TagBox[
                    FormBox[
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Phi]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"2", " ", 
                    RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Phi]", "2"]}], "+", "1"}], ")"}]}],
                    TraditionalForm],
                    TraditionalForm,
                    Editable->True]}],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000106`2.175820863096764","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 201, "TestID" -> None, "Outcome" -> "Failure", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$4289692], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> 
        HoldForm[
         TraditionalForm[8 Parallel`Combine`Private`\[Phi]^2] == 
          TraditionalForm[
           2 Parallel`Combine`Private`\[Phi]^2 (1 + 
             4 Parallel`Combine`Private`\[Phi]^2 - 2 
             Cos[Parallel`Combine`Private`\[Theta]])]], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000106`2.175820863096764, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.00010699999984353781`, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]},
    {"\<\"First Function\"\>"},
    {
     TagBox[
      FormBox[
       RowBox[{"8", " ", 
        SuperscriptBox["\[Phi]", "2"]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]},
    {"\<\"Second Function\"\>"},
    {
     TagBox[
      FormBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[Phi]", "2"], " ", 
          RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Phi]", "4"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Phi]", "2"]}]}],
       TraditionalForm],
      TraditionalForm,
      Editable->True]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.679093880150888*^9, 3.679093911522128*^9, 
  3.679094024058103*^9, 3.6790949809249783`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Integrated Autocorrelations with HMC Condition", "Subsection",
 CellChangeTimes->{{3.679093337124908*^9, 3.679093339751255*^9}, {
  3.679095325903118*^9, 3.679095327104513*^9}}],

Cell[CellGroupData[{

Cell["vs. Laplace Transform with HMC condition", "Item",
 CellChangeTimes->{
  3.678184714792104*^9, {3.678184789906178*^9, 3.6781848065562067`*^9}, {
   3.678186708204872*^9, 3.678186731363323*^9}, {3.678186942503662*^9, 
   3.678186949071375*^9}, {3.678187189043771*^9, 3.6781871967245398`*^9}, {
   3.678193974262074*^9, 3.678194044082535*^9}, {3.679093345143035*^9, 
   3.679093372843197*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"quickVerify", "[", 
  RowBox[{
   RowBox[{"FHMC", "[", 
    RowBox[{"0", ",", "\[Phi]", ",", " ", "\[Rho]", ",", " ", "r"}], "]"}], 
   " ", ",", " ", 
   RowBox[{"AHMC", "[", 
    RowBox[{"\[Phi]", ",", " ", "\[Rho]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.678184813206846*^9, 3.678184929952467*^9}, {
   3.6781855538773623`*^9, 3.678185592068797*^9}, {3.678185669533718*^9, 
   3.6781856702045193`*^9}, {3.67818627152595*^9, 3.6781863563608837`*^9}, {
   3.6781864072729692`*^9, 3.678186412503985*^9}, 3.6781864530093327`*^9, {
   3.6781864925513477`*^9, 3.678186529088065*^9}, {3.6781865698067913`*^9, 
   3.67818664147665*^9}, {3.6781868088523293`*^9, 3.6781868109301147`*^9}, {
   3.678189245158505*^9, 3.678189245404129*^9}, {3.678194050194709*^9, 
   3.678194055658029*^9}, {3.679093368782213*^9, 3.6790933865817947`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"],
                 ImageSizeCache->{16., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$4289990",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000124`2.243936682994229","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 202, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$4289990], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> HoldForm[True], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000124`2.243936682994229, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.00012599999990925426`, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.679093386863572*^9, 3.6790933993344107`*^9}, 
   3.679094985338933*^9}]
}, Open  ]]
}, Open  ]],

Cell[" vs. Full Derived Form with HMC condition for \[Beta] = 0", "Item",
 CellChangeTimes->{{3.679093827029786*^9, 3.679093852109449*^9}, {
  3.6790940597724333`*^9, 3.679094072106398*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"quickVerify", "[", 
  RowBox[{
   RowBox[{"AHMC", "[", 
    RowBox[{"\[Phi]", ",", " ", "\[Rho]"}], "]"}], " ", ",", " ", 
   RowBox[{"fGHMC", "[", 
    RowBox[{"0", ",", "\[Phi]", ",", "\[Rho]", ",", 
     RowBox[{"1", "/", "r"}]}], "]"}], ",", " ", "5", ",", " ", "10", ",", 
   " ", "True"}], "]"}]], "Input",
 CellChangeTimes->{{3.679093862698943*^9, 3.679093878352129*^9}, {
  3.6790939104069357`*^9, 3.67909391091486*^9}, {3.679094077658556*^9, 
  3.679094082370184*^9}, {3.679094256586094*^9, 3.679094258832353*^9}, {
  3.679095055171616*^9, 3.6790950841348553`*^9}, {3.67909521488118*^9, 
  3.679095216311468*^9}, {3.679095251665464*^9, 3.6790952657957153`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"],
                 ImageSizeCache->{16., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$4312964",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000131`2.267786293487758","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 220, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$4312964], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> HoldForm[True], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000131`2.267786293487758, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.00013099999978294363`, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.679093880150888*^9, 3.679093911522128*^9, 3.6790940852403097`*^9, 
   3.679094259743359*^9, 3.6790943336157913`*^9, 3.6790949866999273`*^9, {
   3.679095057342471*^9, 3.6790950901937943`*^9}, {3.679095219026849*^9, 
   3.679095266126197*^9}}]
}, Open  ]],

Cell["\<\
Integrated Autocorrelations with HMC condition and Unit Acceptance\
\>", "Subsubsection",
 CellChangeTimes->{{3.679093400499248*^9, 3.679093412084351*^9}, {
  3.67909532909834*^9, 3.679095332175809*^9}}],

Cell[CellGroupData[{

Cell["vs. Laplace Transform with HMC condition and Unit Acceptance", "Item",
 CellChangeTimes->{
  3.678184714792104*^9, {3.678184789906178*^9, 3.6781848065562067`*^9}, {
   3.678186708204872*^9, 3.678186731363323*^9}, {3.678186942503662*^9, 
   3.678186949071375*^9}, {3.678187189043771*^9, 3.6781871967245398`*^9}, {
   3.678193974262074*^9, 3.678194044082535*^9}, {3.679093345143035*^9, 
   3.679093372843197*^9}, {3.679093439739369*^9, 3.679093446563962*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"quickVerify", "[", 
  RowBox[{
   RowBox[{"FHMCunit", "[", 
    RowBox[{"0", ",", "\[Phi]", ",", " ", "r"}], "]"}], " ", ",", " ", 
   RowBox[{"AHMCunit", "[", "\[Phi]", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.678184813206846*^9, 3.678184929952467*^9}, {
   3.6781855538773623`*^9, 3.678185592068797*^9}, {3.678185669533718*^9, 
   3.6781856702045193`*^9}, {3.67818627152595*^9, 3.6781863563608837`*^9}, {
   3.6781864072729692`*^9, 3.678186412503985*^9}, 3.6781864530093327`*^9, {
   3.6781864925513477`*^9, 3.678186529088065*^9}, {3.6781865698067913`*^9, 
   3.67818664147665*^9}, {3.6781868088523293`*^9, 3.6781868109301147`*^9}, {
   3.678189245158505*^9, 3.678189245404129*^9}, {3.678194050194709*^9, 
   3.678194055658029*^9}, {3.679093368782213*^9, 3.6790933865817947`*^9}, {
   3.679093449141078*^9, 3.679093458907446*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"],
                 ImageSizeCache->{16., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$4301698",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000156`2.343639596186456","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 208, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$4301698], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> HoldForm[True], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000156`2.343639596186456, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.00015300000040952, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.6790950230415573`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fullVerify", "[", 
  RowBox[{
   RowBox[{"AHMCunit", "[", "\[Phi]", "]"}], " ", ",", " ", 
   RowBox[{"fGHMC", "[", 
    RowBox[{"0", ",", " ", "\[Phi]", ",", " ", "1", ",", " ", 
     RowBox[{"1", "/", "r"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.679093862698943*^9, 3.679093878352129*^9}, {
  3.6790939104069357`*^9, 3.67909391091486*^9}, {3.679094077658556*^9, 
  3.679094082370184*^9}, {3.6790942174036837`*^9, 3.679094217525014*^9}, {
  3.67909431693046*^9, 3.679094317019167*^9}, {3.679095031959876*^9, 
  3.679095038500414*^9}}],

Cell[BoxData["\<\"Testing Numerators...\"\>"], "Print",
 CellChangeTimes->{
  3.679093880150888*^9, 3.679093911522128*^9, 3.6790940852403097`*^9, {
   3.6790943097984867`*^9, 3.6790943180410233`*^9}, {3.67909445158985*^9, 
   3.67909445479116*^9}, 3.679094995101204*^9, {3.679095025426442*^9, 
   3.679095038816605*^9}}],

Cell[BoxData["\<\"... Getting first numerator\"\>"], "Print",
 CellChangeTimes->{
  3.679093880150888*^9, 3.679093911522128*^9, 3.6790940852403097`*^9, {
   3.6790943097984867`*^9, 3.6790943180410233`*^9}, {3.67909445158985*^9, 
   3.67909445479116*^9}, 3.679094995101204*^9, {3.679095025426442*^9, 
   3.679095038821306*^9}}],

Cell[BoxData["\<\"... Getting second numerator\"\>"], "Print",
 CellChangeTimes->{
  3.679093880150888*^9, 3.679093911522128*^9, 3.6790940852403097`*^9, {
   3.6790943097984867`*^9, 3.6790943180410233`*^9}, {3.67909445158985*^9, 
   3.67909445479116*^9}, 3.679094995101204*^9, {3.679095025426442*^9, 
   3.679095038823421*^9}}],

Cell[BoxData["\<\"... Verifying\"\>"], "Print",
 CellChangeTimes->{
  3.679093880150888*^9, 3.679093911522128*^9, 3.6790940852403097`*^9, {
   3.6790943097984867`*^9, 3.6790943180410233`*^9}, {3.67909445158985*^9, 
   3.67909445479116*^9}, 3.679094995101204*^9, {3.679095025426442*^9, 
   3.6790950388253193`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"],
                 ImageSizeCache->{16., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$4302080",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.00013`2.2644583501388307","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 211, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$4302080], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> HoldForm[True], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.00013`2.2644583501388307, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.00013100000023769098`, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.679093880150888*^9, 3.679093911522128*^9, 3.6790940852403097`*^9, {
   3.6790943097984867`*^9, 3.6790943180410233`*^9}, {3.67909445158985*^9, 
   3.67909445479116*^9}, 3.679094995101204*^9, {3.679095025426442*^9, 
   3.679095038843109*^9}}],

Cell[BoxData["\<\"Testing Denominators...\"\>"], "Print",
 CellChangeTimes->{
  3.679093880150888*^9, 3.679093911522128*^9, 3.6790940852403097`*^9, {
   3.6790943097984867`*^9, 3.6790943180410233`*^9}, {3.67909445158985*^9, 
   3.67909445479116*^9}, 3.679094995101204*^9, {3.679095025426442*^9, 
   3.6790950388536777`*^9}}],

Cell[BoxData["\<\"... Getting first denominator\"\>"], "Print",
 CellChangeTimes->{
  3.679093880150888*^9, 3.679093911522128*^9, 3.6790940852403097`*^9, {
   3.6790943097984867`*^9, 3.6790943180410233`*^9}, {3.67909445158985*^9, 
   3.67909445479116*^9}, 3.679094995101204*^9, {3.679095025426442*^9, 
   3.6790950388555317`*^9}}],

Cell[BoxData["\<\"... Getting second denominator\"\>"], "Print",
 CellChangeTimes->{
  3.679093880150888*^9, 3.679093911522128*^9, 3.6790940852403097`*^9, {
   3.6790943097984867`*^9, 3.6790943180410233`*^9}, {3.67909445158985*^9, 
   3.67909445479116*^9}, 3.679094995101204*^9, {3.679095025426442*^9, 
   3.679095038857582*^9}}],

Cell[BoxData["\<\"... Verifying\"\>"], "Print",
 CellChangeTimes->{
  3.679093880150888*^9, 3.679093911522128*^9, 3.6790940852403097`*^9, {
   3.6790943097984867`*^9, 3.6790943180410233`*^9}, {3.67909445158985*^9, 
   3.67909445479116*^9}, 3.679094995101204*^9, {3.679095025426442*^9, 
   3.679095038859694*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      RowBox[{
       TagBox["TestResultObject",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False}, 
        PanelBox[
         PaneSelectorBox[{False->GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquarePlusIconMedium"],
                ImageSizeCache->{12., {0., 12.}}],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = True),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"],
                 ImageSizeCache->{16., {4., 8.}}],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
          GridBox[{
            {
             PaneBox[
              ButtonBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "SquareMinusIconMedium"]],
               Appearance->None,
               ButtonFunction:>(Typeset`open$$ = False),
               Evaluator->Automatic,
               Method->"Preemptive"],
              Alignment->{Center, Center},
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]], 
             GraphicsBox[InsetBox[
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "SuccessIcon"]],
                Alignment->Center,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]]],
              AspectRatio->1,
              Axes->False,
              Background->GrayLevel[0.93],
              Frame->True,
              FrameStyle->Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]],
              FrameTicks->None,
              ImageSize->{Automatic, 
                Dynamic[
                3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification]]},
              PlotRange->{{0, 1}, {0, 1}}], GridBox[{
               {
                RowBox[{
                 TagBox["\<\"Outcome: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\<\"Success\"\>",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Test ID: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["None",
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Input: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["t$4302099",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Expected output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Actual output: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox["True",
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]},
               {
                RowBox[{
                 TagBox["\<\"Time Taken: \"\>",
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   TagBox[
                    
                    TemplateBox[{
                    "0.000154`2.3380357186684573","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                    Short[#, 
                    Rational[2, 3]]& ],
                   BaselinePosition->Baseline,
                   ContentPadding->False,
                   FrameMargins->0,
                   ImageSize->{{1, 500}, Automatic},
                   StripOnInput->True],
                  "SummaryItem"]}]}
              },
              AutoDelete->False,
              
              BaseStyle->{
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False},
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              
              GridBoxSpacings->{
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
           },
           AutoDelete->False,
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Rows" -> {{Top}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
          Typeset`open$$],
          ImageSize->Automatic],
         BaselinePosition->Baseline],
        DynamicModuleValues:>{}], "]"}],
      TestResultObject[
       Association[
       "TestIndex" -> 212, "TestID" -> None, "Outcome" -> "Success", "Input" -> 
        HoldForm[Parallel`Combine`Private`t$4302099], "ExpectedOutput" -> 
        HoldForm[True], "ActualOutput" -> HoldForm[True], 
        "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
        Quantity[0.000154`2.3380357186684573, "Seconds"], "CPUTimeUsed" -> 
        Quantity[0.0001540000002933084, "Seconds"], "MemoryUsed" -> 
        Quantity[56, "Bytes"]]],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.679093880150888*^9, 3.679093911522128*^9, 3.6790940852403097`*^9, {
   3.6790943097984867`*^9, 3.6790943180410233`*^9}, {3.67909445158985*^9, 
   3.67909445479116*^9}, 3.679094995101204*^9, {3.679095025426442*^9, 
   3.67909503887849*^9}}]
}, Open  ]],

Cell["Inverted Laplace Transforms", "Section",
 CellChangeTimes->{{3.678192797228715*^9, 3.678192829652664*^9}, {
  3.678194906468748*^9, 3.678194962684761*^9}, {3.6790954345233603`*^9, 
  3.679095440492312*^9}}],

Cell["\<\
No tests needed as the calculation done in Mathematica is tied to the \
accuracy of the previous evaluations.\
\>", "Text",
 CellChangeTimes->{{3.679095813692588*^9, 3.6790958415425463`*^9}}]
},
CellGrouping->Manual,
WindowSize->{1920, 1031},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowCellTags->True,
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 342, 5, 66, "Text"],
Cell[CellGroupData[{
Cell[947, 31, 259, 7, 51, "Subtitle"],
Cell[1209, 40, 669, 12, 30, "Text"],
Cell[1881, 54, 637, 14, 30, "Text"],
Cell[2521, 70, 214, 6, 28, "Item"]
}, Open  ]],
Cell[2750, 79, 142, 1, 30, "Text"],
Cell[2895, 82, 2875, 60, 199, "Input",
 InitializationCell->True],
Cell[5773, 144, 434, 7, 65, "Chapter"],
Cell[CellGroupData[{
Cell[6232, 155, 650, 17, 57, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[6907, 176, 782, 21, 31, "Text",
 InitializationCell->True],
Cell[7692, 199, 4808, 109, 124, "Input",
 InitializationCell->True],
Cell[12503, 310, 470, 9, 49, "Text",
 InitializationCell->True],
Cell[12976, 321, 1052, 24, 80, "Input",
 InitializationCell->True],
Cell[14031, 347, 3542, 99, 148, "Input",
 InitializationCell->True],
Cell[17576, 448, 1373, 33, 54, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[18986, 486, 173, 3, 64, "Section",
 InitializationCell->True],
Cell[19162, 491, 134, 2, 30, "Text",
 InitializationCell->True],
Cell[19299, 495, 614, 14, 51, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19962, 515, 312, 4, 65, "Chapter"],
Cell[20277, 521, 309, 9, 30, "Text"],
Cell[20589, 532, 8627, 245, 177, "Input",
 InitializationCell->True],
Cell[29219, 779, 277, 6, 30, "Text"],
Cell[29499, 787, 2649, 71, 35, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[32173, 862, 223, 3, 44, "Subsection"],
Cell[32399, 867, 180, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[32604, 875, 818, 22, 67, "Input",
 InitializationCell->True],
Cell[33425, 899, 1713, 50, 59, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35187, 955, 98, 1, 64, "Section"],
Cell[35288, 958, 262, 5, 30, "Text"],
Cell[35553, 965, 1492, 38, 57, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[37070, 1007, 433, 6, 44, "Subsection"],
Cell[37506, 1015, 161, 3, 30, "Text"],
Cell[37670, 1020, 1034, 30, 57, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38765, 1057, 191, 6, 65, "Chapter"],
Cell[38959, 1065, 529, 10, 30, "Text"],
Cell[39491, 1077, 685, 15, 51, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[40201, 1096, 223, 3, 44, "Subsection"],
Cell[40427, 1101, 180, 4, 30, "Text"],
Cell[40610, 1107, 978, 26, 57, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[41625, 1138, 348, 5, 64, "Section"],
Cell[41976, 1145, 163, 3, 30, "Text"],
Cell[42142, 1150, 558, 14, 51, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42761, 1171, 433, 6, 44, "Subsection"],
Cell[43197, 1179, 161, 3, 30, "Text"],
Cell[43361, 1184, 434, 10, 51, "Input",
 InitializationCell->True],
Cell[43798, 1196, 273, 7, 28, "Item"],
Cell[CellGroupData[{
Cell[44096, 1207, 438, 10, 28, "Input"],
Cell[44537, 1219, 886, 13, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45472, 1238, 191, 2, 65, "Chapter"],
Cell[45666, 1242, 441, 9, 30, "Text"],
Cell[46110, 1253, 340, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[46475, 1263, 430, 6, 64, "Section"],
Cell[CellGroupData[{
Cell[46930, 1273, 272, 5, 30, "Text"],
Cell[47205, 1280, 1329, 29, 86, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[48559, 1313, 413, 5, 44, "Subsection"],
Cell[CellGroupData[{
Cell[48997, 1322, 221, 4, 30, "Text"],
Cell[49221, 1328, 1547, 36, 86, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50841, 1372, 455, 6, 64, "Section"],
Cell[CellGroupData[{
Cell[51321, 1382, 272, 5, 30, "Text"],
Cell[51596, 1389, 1716, 41, 86, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[53337, 1434, 511, 7, 44, "Subsection"],
Cell[53851, 1443, 345, 6, 30, "Text"],
Cell[54199, 1451, 225, 7, 35, "Subsubsection"],
Cell[54427, 1460, 289, 7, 24, "Item"],
Cell[54719, 1469, 342, 8, 28, "Item"],
Cell[55064, 1479, 215, 4, 28, "Item"],
Cell[55282, 1485, 276, 6, 28, "Item"],
Cell[55561, 1493, 296, 7, 28, "Item"],
Cell[55860, 1502, 1110, 30, 63, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57043, 1540, 104, 1, 65, "Chapter"],
Cell[57150, 1543, 1393, 32, 80, "Input",
 InitializationCell->True],
Cell[58546, 1577, 112, 1, 64, "Section"],
Cell[58661, 1580, 176, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[58862, 1586, 224, 5, 27, "Text"],
Cell[CellGroupData[{
Cell[59111, 1595, 1770, 38, 131, "Input"],
Cell[60884, 1635, 27490, 465, 253, "Output"]
}, Open  ]]
}, Open  ]],
Cell[88401, 2104, 168, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[88594, 2110, 228, 5, 27, "Text"],
Cell[CellGroupData[{
Cell[88847, 2119, 1785, 40, 148, "Input"],
Cell[90635, 2161, 5011, 92, 249, "Output"]
}, Open  ]]
}, Open  ]],
Cell[95673, 2257, 245, 6, 44, "Subsection"],
Cell[CellGroupData[{
Cell[95943, 2267, 177, 4, 27, "Text"],
Cell[CellGroupData[{
Cell[96145, 2275, 2402, 49, 148, "Input"],
Cell[98550, 2326, 25238, 422, 260, "Output"]
}, Open  ]]
}, Open  ]],
Cell[123815, 2752, 131, 1, 64, "Section"],
Cell[123949, 2755, 438, 9, 36, "Subsection"],
Cell[CellGroupData[{
Cell[124412, 2768, 303, 4, 27, "Text"],
Cell[CellGroupData[{
Cell[124740, 2776, 3690, 84, 284, "Input"],
Cell[128433, 2862, 48289, 804, 246, "Output"]
}, Open  ]]
}, Open  ]],
Cell[176749, 3670, 337, 8, 44, "Subsection"],
Cell[CellGroupData[{
Cell[177111, 3682, 232, 3, 27, "Text"],
Cell[CellGroupData[{
Cell[177368, 3689, 2631, 56, 165, "Input"],
Cell[180002, 3747, 105676, 1722, 242, "Output"],
Cell[285681, 5471, 328, 8, 44, "Subsection"],
Cell[286012, 5481, 132, 1, 27, "Text"],
Cell[CellGroupData[{
Cell[286169, 5486, 1662, 42, 182, "Input"],
Cell[287834, 5530, 11634, 203, 260, "Output"]
}, Open  ]],
Cell[299483, 5736, 303, 4, 44, "Subsection"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[299847, 5747, 102, 1, 65, "Chapter"],
Cell[CellGroupData[{
Cell[299974, 5752, 603, 11, 28, "Input",
 InitializationCell->True],
Cell[300580, 5765, 201, 4, 30, "Text"],
Cell[300784, 5771, 801, 23, 67, "Input",
 InitializationCell->True],
Cell[301588, 5796, 153, 2, 35, "Subsubsection"],
Cell[301744, 5800, 228, 4, 27, "Text"],
Cell[301975, 5806, 1680, 40, 114, "Input",
 InitializationCell->True],
Cell[303658, 5848, 202, 3, 35, "Subsubsection"],
Cell[303863, 5853, 178, 4, 27, "Text"],
Cell[304044, 5859, 892, 24, 80, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[304973, 5888, 103, 1, 64, "Section"],
Cell[305079, 5891, 181, 4, 28, "Input"],
Cell[CellGroupData[{
Cell[305285, 5899, 1758, 27, 28, "Input"],
Cell[307046, 5928, 4697, 109, 255, "Input"],
Cell[311746, 6039, 4366, 76, 615, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[316161, 6121, 123, 1, 64, "Section"],
Cell[316287, 6124, 212, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[316524, 6133, 6374, 134, 267, "Input"],
Cell[322901, 6269, 2971, 49, 327, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[325921, 6324, 111, 1, 64, "Section"],
Cell[326035, 6327, 282, 6, 28, "Input"],
Cell[326320, 6335, 186, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[326531, 6343, 6266, 137, 327, "Input"],
Cell[332800, 6482, 7273, 120, 907, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[340122, 6608, 154, 2, 64, "Section"],
Cell[340279, 6612, 217, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[340521, 6621, 729, 15, 63, "Input"],
Cell[341253, 6638, 597, 8, 28, "Output"],
Cell[341853, 6648, 598, 8, 28, "Output"],
Cell[342454, 6658, 598, 8, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[343113, 6673, 103, 1, 65, "Chapter"],
Cell[343219, 6676, 3443, 75, 189, "Input",
 InitializationCell->True],
Cell[346665, 6753, 294, 5, 30, "Text"],
Cell[346962, 6760, 6480, 135, 403, "Input",
 InitializationCell->True],
Cell[353445, 6897, 209, 5, 31, "Text"],
Cell[353657, 6904, 3808, 73, 284, "Input",
 InitializationCell->True],
Cell[357468, 6979, 173, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[357666, 6987, 116, 1, 64, "Section"],
Cell[357785, 6990, 261, 5, 30, "Text"],
Cell[358049, 6997, 5423, 126, 223, "Input"],
Cell[363475, 7125, 12532, 309, 60, "Output"],
Cell[CellGroupData[{
Cell[376032, 7438, 101, 1, 44, "Subsection"],
Cell[376136, 7441, 152, 2, 28, "Item"],
Cell[376291, 7445, 621, 14, 28, "Input"]
}, Open  ]]
}, Open  ]],
Cell[376939, 7463, 9301, 247, 54, "Print"],
Cell[CellGroupData[{
Cell[386265, 7714, 155, 2, 64, "Section"],
Cell[386423, 7718, 102, 1, 28, "Item"],
Cell[CellGroupData[{
Cell[386550, 7723, 917, 20, 63, "Input"],
Cell[387470, 7745, 232, 3, 22, "Print"],
Cell[387705, 7750, 237, 3, 22, "Print"],
Cell[387945, 7755, 241, 3, 22, "Print"],
Cell[388189, 7760, 224, 3, 22, "Print"],
Cell[388416, 7765, 24812, 653, 224, "Print"],
Cell[413231, 8420, 236, 3, 22, "Print"],
Cell[413470, 8425, 240, 3, 22, "Print"],
Cell[413713, 8430, 241, 3, 22, "Print"],
Cell[413957, 8435, 224, 3, 22, "Print"],
Cell[414184, 8440, 27267, 715, 244, "Print"],
Cell[441454, 9157, 128, 1, 44, "Subsection"],
Cell[441585, 9160, 286, 3, 24, "Item"],
Cell[CellGroupData[{
Cell[441896, 9167, 827, 18, 28, "Input"],
Cell[442726, 9187, 9303, 247, 54, "Print"]
}, Open  ]],
Cell[452044, 9437, 350, 7, 28, "Item"],
Cell[CellGroupData[{
Cell[452419, 9448, 1214, 25, 63, "Input"],
Cell[453636, 9475, 346, 5, 22, "Print"],
Cell[453985, 9482, 352, 5, 22, "Print"],
Cell[454340, 9489, 353, 5, 22, "Print"],
Cell[454696, 9496, 338, 5, 22, "Print"],
Cell[455037, 9503, 16922, 430, 128, "Print"],
Cell[471962, 9935, 346, 5, 22, "Print"],
Cell[472311, 9942, 352, 5, 22, "Print"],
Cell[472666, 9949, 355, 5, 22, "Print"],
Cell[473024, 9956, 338, 5, 22, "Print"],
Cell[473365, 9963, 14813, 394, 164, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488215, 10362, 126, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[488366, 10367, 375, 7, 28, "Item"],
Cell[CellGroupData[{
Cell[488766, 10378, 598, 14, 45, "Input"],
Cell[489367, 10394, 8930, 248, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[498334, 10647, 230, 3, 28, "Item"],
Cell[CellGroupData[{
Cell[498589, 10654, 804, 18, 63, "Input"],
Cell[499396, 10674, 9397, 248, 54, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[508842, 10928, 149, 2, 35, "Subsubsection"],
Cell[508994, 10932, 407, 8, 28, "Item"],
Cell[CellGroupData[{
Cell[509426, 10944, 709, 15, 28, "Input"],
Cell[510138, 10961, 8759, 245, 60, "Input"],
Cell[518900, 11208, 232, 5, 28, "Item"],
Cell[CellGroupData[{
Cell[519157, 11217, 568, 12, 28, "Input"],
Cell[519728, 11231, 9583, 257, 60, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[529432, 11500, 141, 2, 64, "Section"],
Cell[529576, 11504, 406, 8, 28, "Item"],
Cell[CellGroupData[{
Cell[530007, 11516, 490, 12, 28, "Input"],
Cell[530500, 11530, 9303, 247, 54, "Print"]
}, Open  ]],
Cell[539818, 11780, 120, 1, 28, "Item"],
Cell[CellGroupData[{
Cell[539963, 11785, 466, 12, 28, "Input"],
Cell[540432, 11799, 119, 1, 22, "Print"],
Cell[540554, 11802, 125, 1, 22, "Print"],
Cell[540682, 11805, 126, 1, 22, "Print"],
Cell[540811, 11808, 111, 1, 22, "Print"],
Cell[540925, 11811, 13469, 364, 154, "Print"],
Cell[554397, 12177, 121, 1, 22, "Print"],
Cell[554521, 12180, 127, 1, 22, "Print"],
Cell[554651, 12183, 127, 1, 22, "Print"],
Cell[554781, 12186, 111, 1, 22, "Print"],
Cell[554895, 12189, 14243, 376, 128, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[569175, 12570, 136, 1, 44, "Subsection"],
Cell[569314, 12573, 329, 6, 28, "Item"],
Cell[CellGroupData[{
Cell[569668, 12583, 724, 17, 63, InheritFromParent],
Cell[570395, 12602, 9507, 250, 54, "Print"]
}, Open  ]]
}, Open  ]],
Cell[579929, 12856, 186, 2, 28, "Item"],
Cell[CellGroupData[{
Cell[580140, 12862, 486, 11, 28, "Input"],
Cell[580629, 12875, 165, 2, 22, "Print"],
Cell[580797, 12879, 172, 2, 22, "Print"],
Cell[580972, 12883, 175, 2, 22, "Print"],
Cell[581150, 12887, 158, 2, 22, "Print"],
Cell[581311, 12891, 14743, 383, 126, "Print"],
Cell[596057, 13276, 168, 2, 22, "Print"],
Cell[596228, 13280, 174, 2, 22, "Print"],
Cell[596405, 13284, 174, 2, 22, "Print"],
Cell[596582, 13288, 158, 2, 22, "Print"],
Cell[596743, 13292, 11182, 301, 124, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[607962, 13598, 183, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[608170, 13604, 397, 6, 28, "Item"],
Cell[CellGroupData[{
Cell[608592, 13614, 864, 15, 28, "Input"],
Cell[609459, 13631, 9403, 250, 54, "Print"]
}, Open  ]]
}, Open  ]],
Cell[618889, 13885, 190, 2, 28, "Item"],
Cell[CellGroupData[{
Cell[619104, 13891, 694, 13, 28, "Input"],
Cell[619801, 13906, 9526, 251, 54, "Print"]
}, Open  ]],
Cell[629342, 14160, 213, 4, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[629580, 14168, 463, 6, 24, "Item"],
Cell[CellGroupData[{
Cell[630068, 14178, 863, 14, 28, "Input"],
Cell[630934, 14194, 9299, 247, 54, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[640306, 14449, 571, 11, 28, "Input"],
Cell[640880, 14462, 320, 5, 22, "Print"],
Cell[641203, 14469, 326, 5, 22, "Print"],
Cell[641532, 14476, 327, 5, 22, "Print"],
Cell[641862, 14483, 314, 5, 22, "Print"],
Cell[642179, 14490, 9524, 251, 54, "Print"],
Cell[651706, 14743, 324, 5, 22, "Print"],
Cell[652033, 14750, 330, 5, 22, "Print"],
Cell[652366, 14757, 329, 5, 22, "Print"],
Cell[652698, 14764, 312, 5, 22, "Print"],
Cell[653013, 14771, 9523, 251, 54, "Print"]
}, Open  ]],
Cell[662551, 15025, 212, 3, 64, "Section"],
Cell[662766, 15030, 201, 4, 27, "Text"]
}
]
*)

